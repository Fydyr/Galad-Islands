#!/usr/bin/env python
"""Hook post-checkout - Auto-installation commitizen universelle"""
import subprocess, sys, os, stat
from pathlib import Path

def detect_os():
    return 'windows' if os.name == 'nt' else 'unix'

def install():
    try:
        # Vérifier si déjà installé
        if Path('.git/hooks/.commitizen_installed').exists():
            return
        
        # Installer commitizen
        try:
            subprocess.run([sys.executable, '-m', 'pip', 'install', 'commitizen'], 
                          capture_output=True, check=True)
        except:
            return  # Installation silencieuse
        
        # Installer le hook
        try:
            subprocess.run([sys.executable, '-m', 'commitizen', 'install-hook'], 
                          capture_output=True, check=True)
        except:
            # Hook manuel si échec
            hook = Path('.git/hooks/commit-msg')
            hook.parent.mkdir(exist_ok=True)
            hook.write_text("""#!/usr/bin/env python
import sys,re,os
from pathlib import Path
if len(sys.argv)<2:sys.exit(0)
try:msg=Path(sys.argv[1]).read_text().strip()
except:sys.exit(0)
if re.match(r'^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?: .+',msg):
    print(f"{'✅' if os.name!='nt' else ''}Commit OK: {msg}");sys.exit(0)
else:
    print(f"{'❌' if os.name!='nt' else ''}Format requis: type(scope): description");sys.exit(1)""")
            if detect_os() != 'windows':
                hook.chmod(hook.stat().st_mode | stat.S_IEXEC)
        
        # Marquer comme installé
        Path('.git/hooks/.commitizen_installed').write_text('installed')
        icon = '✅' if detect_os() != 'windows' else ''
        print(f"{icon} Hooks commitizen installés automatiquement!")
        print("Format requis: type(scope): description")
        
    except:
        pass  # Installation silencieuse

if __name__ == "__main__":
    if Path('.git').exists() and Path('pyproject.toml').exists():
        install()
