name: Automatic Version Bump

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  bump:
    runs-on: ubuntu-latest
    # Empêcher le workflow de tourner si le commit vient de GitHub Actions
    if: "!contains(github.event.head_commit.message, 'bump:')"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Fetch all tags and refs
        run: |
          git fetch --all --tags --force
          git tag --sort=-version:refname

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Commitizen
        run: pip install commitizen

      - name: Set git user
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
      
      - name: Debug information
        run: |
          echo "=== État Git ==="
          git log --oneline -5
          echo -e "\n=== Tags disponibles ==="
          git tag --sort=-version:refname
          echo -e "\n=== Version dans pyproject.toml ==="
          grep "version = " pyproject.toml
          echo -e "\n=== Version commitizen ==="
          cz version --project

      - name: Check if bump is needed
        id: check
        run: |
          # Trouver le dernier tag par date de création
          LAST_TAG=$(git tag --sort=-creatordate | head -1)
          
          if [ -n "$LAST_TAG" ]; then
            echo "Dernier tag trouvé: $LAST_TAG"
            # Chercher les commits feat/fix/perf/refactor depuis le dernier tag
            # On utilise --first-parent pour suivre la branche main
            if git log $LAST_TAG..HEAD --first-parent --oneline | grep -E "^[a-f0-9]+ (feat|fix|perf|refactor)"; then
              echo "bump_needed=true" >> $GITHUB_OUTPUT
              echo "Commits nécessitant un bump trouvés"
            else
              echo "bump_needed=false" >> $GITHUB_OUTPUT
              echo "Aucun commit nécessitant un bump trouvé"
            fi
          else
            echo "bump_needed=true" >> $GITHUB_OUTPUT
            echo "Aucun tag trouvé, bump initial nécessaire"
          fi

      - name: Bump version and changelog
        if: steps.check.outputs.bump_needed == 'true'
        run: |
          # Laisser commitizen détecter automatiquement la version et les tags
          echo "Bump automatique avec commitizen..."
          
          # Méthode 1: Essayer le bump automatique avec changelog
          if cz bump --yes --changelog; then
            echo "✅ Bump avec changelog réussi"
          else
            echo "⚠️ Échec du changelog, tentative de régénération complète..."
            # Méthode 2: Régénérer le changelog complet puis bump
            if cz changelog && cz bump --yes --no-verify; then
              echo "✅ Bump avec changelog régénéré réussi"
            else
              echo "⚠️ Fallback: bump sans changelog"
              cz bump --yes --no-verify
            fi
          fi
          
      - name: Push changes
        if: steps.check.outputs.bump_needed == 'true'
        run: |
          git push --follow-tags origin main
