name: Release Manual

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'NumÃ©ro de version Ã  publier (ex: 1.0.0)'
        required: true
      prerelease:
        description: 'Cocher pour publier en prÃ©-release.'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            pyinstaller build.spec
          else
            # Build main game
            pyinstaller --onefile main.py --name galad-islands \
              --add-data "assets${SEP}assets" \
            # Build config tool
            pyinstaller --onefile --windowed tools/galad_config.py --name galad-config-tool \
                        --add-data "assets/locales${SEP}assets/locales" \
                        --add-data "src${SEP}src" \
                        --exclude-module esper \
                        --exclude-module llvmlite \
                        --exclude-module numba \
                        --exclude-module numpy \
                        --exclude-module Pillow \
                        --exclude-module sklearn \
                        --exclude-module joblib
          fi

      - name: Archive build
        if: runner.os == 'Windows'
        run: |
          copy RELEASE_README.md dist\galad-dist\README.md
          Compress-Archive -Path dist\galad-dist\* -DestinationPath galad-islands-windows.zip
        shell: pwsh

      - name: Archive build (Linux/Mac)  
        if: runner.os != 'Windows'
        run: |
          mkdir -p galad-islands-${{ runner.os }}
          cp dist/galad-islands galad-islands-${{ runner.os }}/
          cp dist/galad-config-tool galad-islands-${{ runner.os }}/
          cp -r assets galad-islands-${{ runner.os }}/
          cp RELEASE_README.md galad-islands-${{ runner.os }}/README.md
          mkdir -p galad-islands-${{ runner.os }}/models
          cp src/models/base_ai_unified_final.pkl galad-islands-${{ runner.os }}/models/
          chmod +x galad-islands-${{ runner.os }}/galad-islands
          chmod +x galad-islands-${{ runner.os }}/galad-config-tool
          zip -r galad-islands-${{ runner.os }}.zip galad-islands-${{ runner.os }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.version }}
          prerelease: ${{ github.event.inputs.prerelease }}
          name: "Galad Islands v${{ github.event.inputs.version }}${{ github.event.inputs.prerelease && ' (pre-release)' || '' }}"
          body: |
            ðŸŽ® **Galad Islands - Version v${{ github.event.inputs.version }}${{ github.event.inputs.prerelease && ' (pre-release)' || '' }}** (Release manuelle)
            
            TÃ©lÃ©chargez le jeu pour votre plateforme :
            - **Windows** : `galad-islands-windows.zip`
            - **Linux** : `galad-islands-Linux.zip` 
            - **macOS** : `galad-islands-macOS.zip`
            
            Chaque archive contient :
            - `galad-islands` : Le jeu principal
            - `galad-config-tool` : Outil de configuration autonome (Tkinter)
            
            ðŸ“– Consultez le fichier `README.md` inclus dans l'archive pour les instructions d'installation.
            
            ðŸ”— [Documentation complÃ¨te](https://fydyr.github.io/Galad-Islands/)
            ðŸ”— [Changelog](https://github.com/Fydyr/Galad-Islands/blob/main/CHANGELOG.md)
          files: |
            galad-islands-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}