{"config":{"lang":["fr","en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Galad Islands - Documentation","text":"<p>Bienvenue dans la documentation compl\u00e8te de Galad Islands ! \ud83c\udfdd\ufe0f</p>"},{"location":"#quest-ce-que-galad-islands","title":"\ud83c\udfae Qu'est-ce que Galad Islands ?","text":"<p>Galad Islands est un jeu de strat\u00e9gie en temps r\u00e9el qui vous plonge dans une guerre entre deux factions dans un archipel a\u00e9rien. G\u00e9rez vos ressources, construisez des unit\u00e9s vari\u00e9es et menez vos arm\u00e9es \u00e0 la victoire dans des batailles a\u00e9riennes \u00e9piques !</p>"},{"location":"#navigation-de-la-documentation","title":"\ud83d\udcda Navigation de la documentation","text":"<p>Cette documentation est organis\u00e9e en deux sections principales :</p>"},{"location":"#documentation-utilisateur","title":"\ud83d\udcd6 Documentation Utilisateur","text":"<p>Pour les joueurs qui veulent ma\u00eetriser le jeu</p>"},{"location":"#bases","title":"\ud83c\udfc1 Bases","text":"<ul> <li>Introduction - Pr\u00e9sentation du jeu</li> <li>Guide de d\u00e9marrage - Installation et premiers pas</li> <li>Installation - Guide d'installation d\u00e9taill\u00e9</li> </ul>"},{"location":"#gameplay","title":"\ud83c\udfae Gameplay","text":"<ul> <li>Contr\u00f4les - M\u00e9caniques de jeu et contr\u00f4les</li> <li>Gameplay - Principes de jeu g\u00e9n\u00e9raux</li> <li>Barre d'action - Interface et raccourcis</li> </ul>"},{"location":"#unites","title":"\u2694\ufe0f Unit\u00e9s","text":"<ul> <li>Unit\u00e9s - Guide des unit\u00e9s et leurs capacit\u00e9s</li> </ul>"},{"location":"#economie","title":"\ud83c\udfd7\ufe0f \u00c9conomie","text":"<ul> <li>B\u00e2timents - Constructions et d\u00e9fenses</li> <li>Boutique - Syst\u00e8me d'achat et \u00e9conomie</li> </ul>"},{"location":"#outils","title":"\ud83d\udee0\ufe0f Outils","text":"<ul> <li>Outil de configuration Galad - Configuration du jeu</li> </ul>"},{"location":"#aide","title":"\u2753 Aide","text":"<ul> <li>FAQ - Questions fr\u00e9quentes et d\u00e9pannage</li> <li>Cr\u00e9dits - \u00c9quipe et remerciements</li> </ul>"},{"location":"#documentation-technique","title":"\ud83d\udee0\ufe0f Documentation Technique","text":""},{"location":"#pour-les-developpeurs-et-contributeurs","title":"Pour les d\u00e9veloppeurs et contributeurs","text":""},{"location":"#developpement","title":"D\u00e9veloppement","text":"<ul> <li>Vue d'ensemble - Architecture g\u00e9n\u00e9rale du projet</li> <li>API - Documentation des interfaces de programmation</li> <li>Modules - Structure interne du code</li> <li>Contribution - Guide pour contribuer au projet</li> </ul>"},{"location":"#systeme-et-deploiement","title":"Syst\u00e8me et d\u00e9ploiement","text":"<ul> <li>Param\u00e8tres syst\u00e8me critiques - Configuration et optimisation des performances</li> <li>Exigences mat\u00e9rielles - Hardware/software requis et d\u00e9pendances</li> <li>Op\u00e9rations syst\u00e8me - Monitoring, sauvegarde, s\u00e9curit\u00e9 et maintenance</li> </ul>"},{"location":"#caracteristiques-principales","title":"\u2728 Caract\u00e9ristiques principales","text":""},{"location":"#unites-diversifiees","title":"\ud83d\ude81 Unit\u00e9s diversifi\u00e9es","text":"<p>Alli\u00e9s :</p> <ul> <li>Zasper : Scout l\u00e9ger et rapide</li> <li>Barhamus : Maraudeur moyen robuste  </li> <li>Draupnir : L\u00e9viathan lourd destructeur</li> <li>Druid : Soigneur et support magique</li> <li>Architect : Constructeur de d\u00e9fenses</li> </ul> <p>Ennemis :</p> <ul> <li>Valkar : Intercepteur rapide et agressif</li> <li>Goliath : Blind\u00e9 lourd \u00e0 grande puissance de feu</li> <li>Spectre : Unit\u00e9 furtive sp\u00e9cialis\u00e9e dans le sabotage</li> <li>N\u00e9cropr\u00eatre : Soutien qui affaiblit vos troupes</li> <li>Bastion : Plateforme d\u00e9fensive mobile</li> </ul>"},{"location":"#construction-et-defense","title":"\ud83c\udff0 Construction et d\u00e9fense","text":"<ul> <li>Tours de d\u00e9fense automatiques</li> <li>Tours de soin pour vos alli\u00e9s</li> <li>Syst\u00e8me de construction strat\u00e9gique</li> </ul>"},{"location":"#systeme-economique","title":"\ud83d\udcb0 Syst\u00e8me \u00e9conomique","text":"<ul> <li>Collectez de l'or naturellement ou dans les coffres sur la carte</li> <li>Achetez des unit\u00e9s dans la boutique</li> <li>Am\u00e9liorez vos capacit\u00e9s</li> </ul>"},{"location":"#gameplay-tactique","title":"\ud83c\udfaf Gameplay tactique","text":"<ul> <li>Contr\u00f4les intuitifs au clavier</li> <li>Cam\u00e9ra libre avec zoom</li> <li>Interface claire et ergonomique</li> </ul>"},{"location":"#demarrage-rapide","title":"\ud83d\ude80 D\u00e9marrage rapide","text":"<ol> <li>Lancez le jeu en ex\u00e9cutant <code>galad-islands.exe</code> ou <code>galad-islands</code></li> <li>Apprenez les contr\u00f4les avec les fl\u00e8ches directionnelles</li> <li>S\u00e9lectionnez vos unit\u00e9s avec les touches num\u00e9riques</li> <li>Explorez la carte et collectez de l'or</li> <li>Achetez de nouvelles unit\u00e9s avec la touche <code>B</code></li> <li>Dominez l'archipel !</li> </ol> <p>Conseil de d\u00e9part</p> <p>Commencez par explorer la carte pour trouver des coffres ou de l'or et cartographier les zones avant d'engager le combat !</p>"},{"location":"#navigation-de-ce-guide","title":"\ud83d\udcda Navigation de ce guide","text":"<ul> <li>Guide de d\u00e9marrage : Premiers pas</li> <li>Installation et Configuration : Comment installer et configurer le jeu</li> <li>Contr\u00f4les : Toutes les commandes du jeu</li> <li>Unit\u00e9s : Guide d\u00e9taill\u00e9 de chaque type d'unit\u00e9</li> </ul>"},{"location":"#ambiance","title":"\ud83c\udfb5 Ambiance","text":"<p>Galad Islands vous plonge dans un univers fantastique avec :</p> <ul> <li>Musique \u00e9pique et immersive</li> <li>Graphismes d\u00e9taill\u00e9s en pixel art</li> <li>Effets sonores authentiques</li> <li>Atmosph\u00e8re unique d'aventure a\u00e9rienne</li> </ul> <p>Pr\u00eat \u00e0 conqu\u00e9rir les cieux de Galad Islands ? Bonne chance, commandant ! \u2693\ufe0f\u2708\ufe0f</p>"},{"location":"support/","title":"Support &amp; Contact","text":"<p>Besoin d'aide avec Galad Islands ? Voici o\u00f9 trouver de l'assistance et contacter l'\u00e9quipe.</p>"},{"location":"support/#documentation","title":"\ud83d\udcd6 Documentation","text":"<ul> <li>Guide de d\u00e9marrage - Premiers pas dans le jeu</li> <li>FAQ - Questions fr\u00e9quemment pos\u00e9es</li> </ul>"},{"location":"support/#problemes-techniques","title":"\ud83d\udc1b Probl\u00e8mes techniques","text":""},{"location":"support/#avant-de-signaler-un-probleme","title":"Avant de signaler un probl\u00e8me","text":"<ol> <li>Consultez la FAQ - les solutions aux probl\u00e8mes courants s'y trouvent</li> <li>V\u00e9rifiez que vous utilisez la derni\u00e8re version du jeu</li> <li>Recherchez dans les issues existantes</li> </ol>"},{"location":"support/#signaler-un-bug","title":"Signaler un bug","text":"<p>Si votre probl\u00e8me n'est pas r\u00e9solu :</p> <p>\ud83d\udd17 Cr\u00e9er une issue sur GitHub</p> <p>Merci d'inclure :</p> <ul> <li>Votre syst\u00e8me d'exploitation (Windows, Linux, macOS)</li> <li>Version du jeu</li> <li>Description d\u00e9taill\u00e9e du probl\u00e8me</li> <li>\u00c9tapes pour reproduire le bug</li> <li>Captures d'\u00e9cran si pertinentes</li> </ul>"},{"location":"support/#suggestions-demandes","title":"\ud83d\udca1 Suggestions &amp; demandes","text":"<p>Pour proposer de nouvelles fonctionnalit\u00e9s ou am\u00e9liorations :</p> <p>\ud83d\udd17 GitHub Discussions</p>"},{"location":"support/#communaute-contribution","title":"\ud83e\udd1d Communaut\u00e9 &amp; contribution","text":""},{"location":"support/#participer-au-developpement","title":"Participer au d\u00e9veloppement","text":"<p>Envie de contribuer \u00e0 Galad Islands ? Consultez notre guide de contribution.</p> <p>Types de contributions recherch\u00e9es :</p> <ul> <li>\ud83d\udc1b Correction de bugs</li> <li>\u2728 Nouvelles fonctionnalit\u00e9s</li> <li>\ud83d\udcdd Am\u00e9lioration de la documentation</li> <li>\ud83c\udfa8 Assets et graphismes</li> <li>\ud83c\udf0d Traductions</li> </ul>"},{"location":"support/#questions-generales","title":"Questions g\u00e9n\u00e9rales","text":"<p>Pour toute question sur le projet :</p> <ul> <li>GitHub Discussions - Forum communautaire</li> <li>Issues GitHub - Bugs et demandes de fonctionnalit\u00e9s</li> </ul>"},{"location":"support/#partager-le-projet","title":"Partager le projet","text":"<ul> <li>\u2b50 Star le projet sur GitHub si vous l'appr\u00e9ciez</li> <li>\ud83d\udd17 Partagez Galad Islands avec vos amis</li> <li>\ud83d\udcdd \u00c9crivez sur votre exp\u00e9rience de jeu</li> </ul>"},{"location":"support/#pour-les-developpeurs","title":"\ud83d\udee0\ufe0f Pour les d\u00e9veloppeurs","text":"<ul> <li>Documentation technique - Architecture du projet</li> <li>Issues d\u00e9veloppeur - Bonnes premi\u00e8res contributions</li> </ul>"},{"location":"support/#informations-utiles","title":"\ufffd Informations utiles","text":""},{"location":"support/#avant-de-nous-contacter","title":"Avant de nous contacter","text":"<ol> <li>Consultez la FAQ</li> <li>Recherchez dans les discussions existantes</li> <li>V\u00e9rifiez les issues ouvertes</li> </ol>"},{"location":"support/#pour-un-contact-efficace","title":"Pour un contact efficace","text":"<p>Merci d'inclure :</p> <ul> <li>Version du jeu que vous utilisez</li> <li>Syst\u00e8me d'exploitation</li> <li>Description claire de votre question/probl\u00e8me</li> <li>Contexte pertinent</li> </ul> <p>Nous nous effor\u00e7ons de r\u00e9pondre \u00e0 toutes les questions dans les meilleurs d\u00e9lais.</p>"},{"location":"dev/01-introduction/overview/","title":"\ud83d\udcda Galad Islands \u2014 Introduction technique","text":"<p>Cette page est l'introduction technique du projet Galad Islands. Elle vise les d\u00e9veloppeurs, contributeurs et mainteneurs qui ont besoin d'une vue synth\u00e9tique et pratique du code, de l'architecture et du d\u00e9marrage.</p>"},{"location":"dev/01-introduction/overview/#objectifs","title":"Objectifs","text":"<ul> <li>Pr\u00e9senter les objectifs du projet et l'architecture g\u00e9n\u00e9rale</li> <li>Fournir un guide de d\u00e9marrage rapide pour d\u00e9velopper localement</li> <li>Pointer vers la documentation d\u00e9taill\u00e9e (API, syst\u00e8mes, outils)</li> </ul>"},{"location":"dev/01-introduction/overview/#vue-densemble","title":"Vue d'ensemble","text":"<p>Galad Islands est un petit jeu de strat\u00e9gie/temps r\u00e9el d\u00e9velopp\u00e9 en Python. La base de code utilise une architecture Entity-Component-System (ECS) via la biblioth\u00e8que <code>esper</code> pour s\u00e9parer les donn\u00e9es et la logique. Le rendu et l'entr\u00e9e sont pris en charge par <code>pygame</code>.</p> <p>Principaux sous-syst\u00e8mes</p> <ul> <li>Moteur de jeu : boucle principale, orchestration et cycle de vie</li> <li>ECS : composants (donn\u00e9es) et syst\u00e8mes/processors (logique)</li> <li>Interface utilisateur : barre d'action, boutique, UI de debug</li> <li>Gestionnaires : audio, sprites, \u00e9v\u00e9nements, configuration</li> <li>Outils : utilitaires et \u00e9diteur de configuration (<code>tools/galad_config.py</code>)</li> </ul>"},{"location":"dev/01-introduction/overview/#demarrage-rapide-developpeur","title":"D\u00e9marrage rapide (d\u00e9veloppeur)","text":"<ol> <li>Cloner le d\u00e9p\u00f4t :</li> </ol> <pre><code>git clone https://github.com/Fydyr/Galad-Islands.git\ncd Galad-Islands\n</code></pre> <ol> <li>Cr\u00e9er et activer un environnement virtuel (Linux/macOS) :</li> </ol> <pre><code>python3 -m venv venv\nsource venv/bin/activate\n</code></pre> <ol> <li>Installer les d\u00e9pendances :</li> </ol> <pre><code>pip install -r requirements.txt\npip install -r requirements-dev.txt\n</code></pre> <ol> <li>Lancer le jeu :</li> </ol> <pre><code>python main.py\n</code></pre>"},{"location":"dev/01-introduction/overview/#structure-du-projet-dossiers-importants","title":"Structure du projet (dossiers importants)","text":"<pre><code>src/                  # Code source du jeu\n  components/         # Composants ECS\n  systems/            # Systems modernes\n  Processors/         # Processors legacys (esper)\n  ui/                 # Widgets et \u00e9crans UI\n  managers/           # Gestionnaires (audio, events...)\nassets/               # Images, sons et fichiers de locale\ndocs/                 # Documentation (mkdocs)\ntools/                # Outils et \u00e9diteur de configuration\n</code></pre>"},{"location":"dev/01-introduction/overview/#ou-lire-ensuite","title":"O\u00f9 lire ensuite","text":"<ul> <li>API et internals : <code>docs/en/dev/02-systeme/</code></li> <li>Configuration &amp; localisation : <code>docs/en/dev/04-Configuration/</code></li> <li>Exploitation &amp; d\u00e9ploiement : <code>docs/en/dev/05-exploitation/</code></li> </ul>"},{"location":"dev/01-introduction/overview/#contribution-support","title":"Contribution &amp; support","text":"<ul> <li>Utilisez la branche <code>unstable</code> pour le travail en cours et ouvrez des PRs vers <code>main</code> lorsqu'elles sont pr\u00eates.</li> <li>Suivez les r\u00e8gles de Conventional Commits d\u00e9crites dans <code>docs/en/dev/07-annexes/contributing.md</code>.</li> <li>Pour de l'aide rapide, ouvrez une issue ou une discussion sur GitHub.</li> </ul> <p>\ud83d\udca1 Vous souhaitez une page d'accueil plus courte (checklist d\u00e9veloppeur) ? Dites-moi quelles sections garder et je la r\u00e9duis.</p>"},{"location":"dev/02-systeme/architecture/","title":"Architecture du code","text":""},{"location":"dev/02-systeme/architecture/#vue-densemble-de-larchitecture-ecs","title":"Vue d'ensemble de l'architecture ECS","text":"<p>Galad Islands utilise une architecture ECS (Entity-Component-System) avec la biblioth\u00e8que <code>esper</code> pour organiser le code de fa\u00e7on modulaire et performante.</p>"},{"location":"dev/02-systeme/architecture/#principe-ecs","title":"Principe ECS","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   ENTITIES  \u2502    \u2502 COMPONENTS  \u2502    \u2502  SYSTEMS    \u2502\n\u2502             \u2502    \u2502             \u2502    \u2502             \u2502\n\u2502 ID simples  \u2502\u25c4\u2500\u2500\u25ba\u2502 Donn\u00e9es     \u2502\u25c4\u2500\u2500\u25ba\u2502 Logique     \u2502\n\u2502 (int)       \u2502    \u2502 (Propri\u00e9t\u00e9s)\u2502    \u2502 (Comportem.)\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <ul> <li>Entit\u00e9s : Identifiants num\u00e9riques simples (int)</li> <li>Composants : Structures de donn\u00e9es pures (dataclasses)</li> <li>Syst\u00e8mes/Processeurs : Logique qui agit sur les entit\u00e9s ayant certains composants</li> </ul>"},{"location":"dev/02-systeme/architecture/#organisation-du-code","title":"Organisation du code","text":"<pre><code>src/\n\u251c\u2500\u2500 components/          # Tous les composants ECS\n\u2502   \u251c\u2500\u2500 core/           # Composants de base\n\u2502   \u251c\u2500\u2500 special/        # Capacit\u00e9s sp\u00e9ciales des unit\u00e9s\n\u2502   \u251c\u2500\u2500 events/         # Composants d'\u00e9v\u00e9nements\n\u2502   \u2514\u2500\u2500 globals/        # Composants globaux (cam\u00e9ra, carte)\n\u251c\u2500\u2500 processeurs/        # Processeurs ECS (logique)\n\u251c\u2500\u2500 systems/            # Nouveaux syst\u00e8mes ECS modulaires\n\u251c\u2500\u2500 managers/           # Gestionnaires de haut niveau\n\u251c\u2500\u2500 factory/            # Cr\u00e9ation d'entit\u00e9s\n\u2514\u2500\u2500 game.py             # Moteur principal\n</code></pre>"},{"location":"dev/02-systeme/architecture/#composants-components","title":"Composants (Components)","text":"<p>Les composants stockent uniquement des donn\u00e9es, pas de logique.</p>"},{"location":"dev/02-systeme/architecture/#composants-de-base-core","title":"Composants de base (core/)","text":""},{"location":"dev/02-systeme/architecture/#positioncomponent","title":"PositionComponent","text":"<pre><code>@component\nclass PositionComponent:\n    def __init__(self, x=0.0, y=0.0, direction=0.0):\n        self.x: float = x\n        self.y: float = y  \n        self.direction: float = direction\n</code></pre>"},{"location":"dev/02-systeme/architecture/#healthcomponent","title":"HealthComponent","text":"<pre><code>@component\nclass HealthComponent:\n    def __init__(self, currentHealth: int, maxHealth: int):\n        self.currentHealth: int = currentHealth\n        self.maxHealth: int = maxHealth\n</code></pre>"},{"location":"dev/02-systeme/architecture/#teamcomponent","title":"TeamComponent","text":"<pre><code>from src.components.core.team_enum import Team\n\n@component\nclass TeamComponent:\n    def __init__(self, team: Team = Team.ALLY):\n        self.team: Team = team\n</code></pre>"},{"location":"dev/02-systeme/architecture/#attackcomponent","title":"AttackComponent","text":"<pre><code>@component\nclass AttackComponent:\n    def __init__(self, hitPoints: int):\n        self.hitPoints: int = hitPoints\n</code></pre>"},{"location":"dev/02-systeme/architecture/#composants-speciaux-special","title":"Composants sp\u00e9ciaux (special/)","text":"<p>Les unit\u00e9s avec des capacit\u00e9s ont des composants d\u00e9di\u00e9s :</p>"},{"location":"dev/02-systeme/architecture/#spearchitect","title":"SpeArchitect","text":"<pre><code>@component\nclass SpeArchitect:\n    def __init__(self, is_active=False, radius=0.0, duration=0.0):\n        self.is_active: bool = is_active\n        self.available: bool = True\n        self.radius: float = radius\n        self.duration: float = duration\n        self.affected_units: List[int] = []\n</code></pre>"},{"location":"dev/02-systeme/architecture/#composants-devenements-events","title":"Composants d'\u00e9v\u00e9nements (events/)","text":""},{"location":"dev/02-systeme/architecture/#flyingchestcomponent","title":"FlyingChestComponent","text":"<pre><code>@component\nclass FlyingChestComponent:\n    def __init__(self, gold_value: int = 100):\n        self.gold_value: int = gold_value\n        self.is_opened: bool = False\n</code></pre>"},{"location":"dev/02-systeme/architecture/#composants-de-batiments-buildings","title":"Composants de b\u00e2timents (buildings/)","text":"<p>Les b\u00e2timents (tours d\u00e9fensives, structures) utilisent des composants d\u00e9di\u00e9s.</p> <p>\ud83d\udcd6 Documentation compl\u00e8te : Voir Syst\u00e8me de Tours pour l'impl\u00e9mentation d\u00e9taill\u00e9e.</p>"},{"location":"dev/02-systeme/architecture/#towercomponent","title":"TowerComponent","text":"<p>Composant de base pour toutes les tours : <pre><code>@dataclass\nclass TowerComponent:\n    tower_type: str              # \"defense\" ou \"heal\"\n    range: float                 # Port\u00e9e d'action en pixels\n    cooldown: float              # Temps entre deux actions (secondes)\n    current_cooldown: float = 0.0\n    target_entity: Optional[int] = None\n</code></pre></p> <p>Fichier : <code>src/components/core/towerComponent.py</code></p>"},{"location":"dev/02-systeme/architecture/#defensetowercomponent","title":"DefenseTowerComponent","text":"<p>Composant pour les tours qui attaquent : <pre><code>@dataclass\nclass DefenseTowerComponent:\n    damage: float        # D\u00e9g\u00e2ts inflig\u00e9s par attaque\n    attack_speed: float  # Multiplicateur de vitesse\n</code></pre></p>"},{"location":"dev/02-systeme/architecture/#healtowercomponent","title":"HealTowerComponent","text":"<p>Composant pour les tours qui soignent : <pre><code>@dataclass\nclass HealTowerComponent:\n    heal_amount: float   # Points de vie restaur\u00e9s\n    heal_speed: float    # Multiplicateur de vitesse\n</code></pre></p> <p>Utilisation : - Les tours sont cr\u00e9\u00e9es via <code>buildingFactory.create_defense_tower()</code> ou <code>create_heal_tower()</code> - Le <code>TowerProcessor</code> g\u00e8re la d\u00e9tection de cibles et les actions automatiques - Les tours n\u00e9cessitent un Architecte pour \u00eatre construites</p>"},{"location":"dev/02-systeme/architecture/#processeurs-processors","title":"Processeurs (Processors)","text":"<p>Les processeurs contiennent la logique m\u00e9tier et agissent sur les entit\u00e9s.</p>"},{"location":"dev/02-systeme/architecture/#renderingprocessor","title":"RenderingProcessor","text":"<pre><code>class RenderProcessor(esper.Processor):\n    def __init__(self, screen, camera=None):\n        super().__init__()\n        self.screen = screen\n        self.camera = camera\n\n    def process(self):\n        # Rendu de toutes les entit\u00e9s avec Position + Sprite\n        for ent, (pos, sprite) in esper.get_components(PositionComponent, SpriteComponent):\n            # Logique de rendu...\n</code></pre>"},{"location":"dev/02-systeme/architecture/#movementprocessor","title":"MovementProcessor","text":"<pre><code>class MovementProcessor(esper.Processor):\n    def process(self, dt=0.016):\n        # D\u00e9place toutes les entit\u00e9s avec Position + Velocity\n        for ent, (pos, vel) in esper.get_components(PositionComponent, VelocityComponent):\n            pos.x += vel.currentSpeed * dt\n            pos.y += vel.currentSpeed * dt\n</code></pre>"},{"location":"dev/02-systeme/architecture/#collisionprocessor","title":"CollisionProcessor","text":"<pre><code>class CollisionProcessor(esper.Processor):\n    def process(self):\n        # D\u00e9tecte les collisions entre entit\u00e9s\n        for ent1, (pos1, collision1) in esper.get_components(PositionComponent, CanCollideComponent):\n            for ent2, (pos2, collision2) in esper.get_components(PositionComponent, CanCollideComponent):\n                if self._check_collision(pos1, pos2):\n                    self._handle_collision(ent1, ent2)\n</code></pre>"},{"location":"dev/02-systeme/architecture/#playercontrolprocessor","title":"PlayerControlProcessor","text":"<pre><code>class PlayerControlProcessor(esper.Processor):\n    def process(self):\n        # G\u00e8re les contr\u00f4les du joueur et les capacit\u00e9s sp\u00e9ciales\n        if pygame.key.get_pressed()[pygame.K_SPACE]:\n            # Activer capacit\u00e9 de l'unit\u00e9 s\u00e9lectionn\u00e9e...\n</code></pre>"},{"location":"dev/02-systeme/architecture/#systemes-systems","title":"Syst\u00e8mes (Systems)","text":"<p>Les nouveaux syst\u00e8mes modulaires pour s\u00e9parer la logique :</p>"},{"location":"dev/02-systeme/architecture/#spritesystem","title":"SpriteSystem","text":"<pre><code>class SpriteSystem:\n\"\"\"Gestion des sprites avec cache pour optimiser les performances.\"\"\"\n\n    def __init__(self):\n        self._sprite_cache = {}\n\n    def get_sprite(self, sprite_id: SpriteID) -&gt; pygame.Surface:\n        # Cache des sprites pour \u00e9viter les rechargements\n</code></pre>"},{"location":"dev/02-systeme/architecture/#combatsystem","title":"CombatSystem","text":"<pre><code>class CombatSystem:\n\"\"\"Syst\u00e8me de combat s\u00e9par\u00e9 des processeurs.\"\"\"\n\n    def deal_damage(self, attacker: int, target: int, damage: int) -&gt; bool:\n        # Logique de d\u00e9g\u00e2ts pure\n</code></pre>"},{"location":"dev/02-systeme/architecture/#gestionnaires-managers","title":"Gestionnaires (Managers)","text":"<p>Les gestionnaires orchestrent les syst\u00e8mes de haut niveau :</p>"},{"location":"dev/02-systeme/architecture/#basecomponent-gestionnaire-integre","title":"BaseComponent (Gestionnaire int\u00e9gr\u00e9)","text":"<pre><code>@component\nclass BaseComponent:\n\"\"\"Composant de base avec gestionnaire int\u00e9gr\u00e9 pour les QG.\"\"\"\n\n    @classmethod\n    def get_ally_base(cls):\n\"\"\"Retourne l'entit\u00e9 de base alli\u00e9e.\"\"\"\n        return cls._ally_base_entity\n\n    @classmethod\n    def get_enemy_base(cls):\n\"\"\"Retourne l'entit\u00e9 de base ennemie.\"\"\" \n        return cls._enemy_base_entity\n\n    @classmethod\n    def initialize_bases(cls):\n\"\"\"Initialise les entit\u00e9s de bases alli\u00e9e et ennemie.\"\"\"\n        # Logique d'initialisation...\n</code></pre> <p>Pour en savoir plus, voir la documentation d\u00e9taill\u00e9e. BaseComponent</p>"},{"location":"dev/02-systeme/architecture/#flyingchestmanager","title":"FlyingChestManager","text":"<pre><code>class FlyingChestManager:\n\"\"\"G\u00e8re l'apparition des coffres volants.\"\"\"\n\n    def update(self, dt: float):\n        # Logique d'apparition des coffres\n</code></pre>"},{"location":"dev/02-systeme/architecture/#factory-creation-dentites","title":"Factory (Cr\u00e9ation d'entit\u00e9s)","text":""},{"location":"dev/02-systeme/architecture/#unitfactory","title":"UnitFactory","text":"<pre><code>def UnitFactory(unit: UnitKey, enemy: bool, pos: PositionComponent):\n\"\"\"Cr\u00e9e une entit\u00e9 compl\u00e8te avec tous ses composants.\"\"\"\n    entity = esper.create_entity()\n\n    # Composants de base\n    esper.add_component(entity, pos)\n    esper.add_component(entity, TeamComponent(Team.ENEMY if enemy else Team.ALLY))\n\n    # Composants sp\u00e9cifiques selon le type d'unit\u00e9\n    if unit == UnitKey.ARCHITECT:\n        esper.add_component(entity, SpeArchitect(radius=ARCHITECT_RADIUS))\n        esper.add_component(entity, HealthComponent(100, 100))\n        esper.add_component(entity, AttackComponent(25))\n\n    return entity\n</code></pre>"},{"location":"dev/02-systeme/architecture/#gameengine-moteur-principal","title":"GameEngine (Moteur principal)","text":"<pre><code>class GameEngine:\n\"\"\"Moteur principal qui orchestre tous les syst\u00e8mes.\"\"\"\n\n    def _initialize_ecs(self):\n\"\"\"Initialise tous les processeurs ECS.\"\"\"\n        self.movement_processor = MovementProcessor()\n        self.collision_processor = CollisionProcessor(graph=self.grid)\n        self.player_controls = PlayerControlProcessor()\n\n        # Ajouter les processeurs avec priorit\u00e9s\n        es.add_processor(self.collision_processor, priority=2)\n        es.add_processor(self.movement_processor, priority=3)\n        es.add_processor(self.player_controls, priority=4)\n\n    def run(self):\n\"\"\"Boucle principale du jeu.\"\"\"\n        while self.running:\n            dt = self.clock.tick(60) / 1000.0\n\n            # Traiter tous les processeurs ECS\n            es.process(dt)\n</code></pre>"},{"location":"dev/02-systeme/architecture/#flux-de-donnees","title":"Flux de donn\u00e9es","text":"<pre><code>1. Input (clavier/souris) \u2192 PlayerControlProcessor\n2. PlayerControlProcessor \u2192 Modification des composants\n3. MovementProcessor \u2192 Mise \u00e0 jour des positions\n4. CollisionProcessor \u2192 D\u00e9tection et gestion des collisions\n5. RenderingProcessor \u2192 Affichage \u00e0 l'\u00e9cran\n</code></pre>"},{"location":"dev/02-systeme/architecture/#bonnes-pratiques","title":"Bonnes pratiques","text":""},{"location":"dev/02-systeme/architecture/#a-faire","title":"\u2705 \u00c0 faire","text":"<ul> <li>Composants : Seulement des donn\u00e9es, pas de logique</li> <li>Processeurs : Une responsabilit\u00e9 claire par processeur</li> <li>Type hints : Toujours typer les propri\u00e9t\u00e9s des composants</li> <li>Enums : Utiliser <code>Team</code> et <code>UnitClass</code> au lieu d'entiers</li> <li>V\u00e9rifications : Toujours <code>esper.has_component()</code> avant <code>esper.component_for_entity()</code></li> </ul>"},{"location":"dev/02-systeme/architecture/#a-eviter","title":"\u274c \u00c0 \u00e9viter","text":"<ul> <li>Logique m\u00e9tier dans les composants</li> <li>R\u00e9f\u00e9rences directes entre entit\u00e9s</li> <li>Modifications concurrentes de la m\u00eame entit\u00e9</li> <li>Processeurs qui d\u00e9pendent de l'ordre d'ex\u00e9cution</li> </ul>"},{"location":"dev/02-systeme/architecture/#exemples-dutilisation","title":"Exemples d'utilisation","text":""},{"location":"dev/02-systeme/architecture/#creer-une-unite","title":"Cr\u00e9er une unit\u00e9","text":"<pre><code># Cr\u00e9er l'entit\u00e9\nentity = esper.create_entity()\n\n# Ajouter les composants\nesper.add_component(entity, PositionComponent(100, 200))\nesper.add_component(entity, TeamComponent(Team.ALLY))\nesper.add_component(entity, HealthComponent(100, 100))\n</code></pre>"},{"location":"dev/02-systeme/architecture/#chercher-des-entites","title":"Chercher des entit\u00e9s","text":"<pre><code># Toutes les entit\u00e9s avec position et sant\u00e9\nfor ent, (pos, health) in esper.get_components(PositionComponent, HealthComponent):\n    print(f\"Entit\u00e9 {ent} \u00e0 ({pos.x}, {pos.y}) avec {health.currentHealth} PV\")\n</code></pre>"},{"location":"dev/02-systeme/architecture/#modifier-un-composant","title":"Modifier un composant","text":"<pre><code>if esper.has_component(entity, HealthComponent):\n    health = esper.component_for_entity(entity, HealthComponent)\n    health.currentHealth -= 10\n</code></pre> <p>Cette architecture ECS permet une grande flexibilit\u00e9 et des performances optimales pour g\u00e9rer des centaines d'entit\u00e9s simultan\u00e9ment dans le jeu.</p>"},{"location":"dev/02-systeme/tower-system-implementation/","title":"Impl\u00e9mentation du Syst\u00e8me de Tours","text":""},{"location":"dev/02-systeme/tower-system-implementation/#vue-densemble","title":"Vue d'ensemble","text":"<p>Ce document d\u00e9crit l'impl\u00e9mentation compl\u00e8te du syst\u00e8me de tours de d\u00e9fense et de soin dans Galad Islands. Le syst\u00e8me permet \u00e0 l'unit\u00e9 Architecte de construire des tours d\u00e9fensives qui attaquent automatiquement les ennemis ou soignent les alli\u00e9s.</p> <p>Date de mise en \u0153uvre : Octobre 2025 Version : 1.0.0 Architecture : ECS (Entity Component System) avec esper</p>"},{"location":"dev/02-systeme/tower-system-implementation/#table-des-matieres","title":"Table des mati\u00e8res","text":"<ol> <li>Architecture du syst\u00e8me</li> <li>Composants</li> <li>Syst\u00e8mes (Processors)</li> <li>Factory</li> <li>Interface utilisateur</li> <li>Sprites et assets</li> <li>Configuration</li> <li>Corrections apport\u00e9es</li> </ol>"},{"location":"dev/02-systeme/tower-system-implementation/#architecture-du-systeme","title":"Architecture du syst\u00e8me","text":"<p>Le syst\u00e8me de tours suit l'architecture ECS du projet :</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         Interface Utilisateur           \u2502\n\u2502  (ActionBar - Boutons de construction)  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                 \u2502\n                 \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502            Factory Pattern              \u2502\n\u2502  (buildingFactory - Cr\u00e9ation d'entit\u00e9s) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                 \u2502\n                 \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         Composants (Components)         \u2502\n\u2502  - TowerComponent (base)                \u2502\n\u2502  - DefenseTowerComponent                \u2502\n\u2502  - HealTowerComponent                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                 \u2502\n                 \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        Processeur (Processor)           \u2502\n\u2502  - TowerProcessor (logique d'action)    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#composants","title":"Composants","text":""},{"location":"dev/02-systeme/tower-system-implementation/#1-towercomponent-base","title":"1. TowerComponent (Base)","text":"<p>Fichier : <code>src/components/core/towerComponent.py</code></p> <p>Composant de base pour toutes les tours.</p> <pre><code>@dataclass\nclass TowerComponent:\n\"\"\"Composant de base pour les tours.\"\"\"\n    tower_type: str  # \"defense\" ou \"heal\"\n    range: float     # Port\u00e9e d'action\n    cooldown: float  # Temps entre deux actions\n    current_cooldown: float = 0.0  # Compteur de cooldown\n    target_entity: Optional[int] = None  # Entit\u00e9 cibl\u00e9e actuellement\n</code></pre> <p>Propri\u00e9t\u00e9s : - <code>tower_type</code> : Type de tour (\"defense\" ou \"heal\") - <code>range</code> : Port\u00e9e de d\u00e9tection (en pixels) - <code>cooldown</code> : D\u00e9lai entre deux actions (en secondes) - <code>current_cooldown</code> : Temps restant avant la prochaine action - <code>target_entity</code> : ID de l'entit\u00e9 actuellement cibl\u00e9e</p> <p>Utilisation : Ajout\u00e9 \u00e0 chaque entit\u00e9 tour pour g\u00e9rer le comportement commun.</p>"},{"location":"dev/02-systeme/tower-system-implementation/#2-defensetowercomponent","title":"2. DefenseTowerComponent","text":"<p>Fichier : <code>src/components/core/defenseTowerComponent.py</code></p> <p>Composant sp\u00e9cifique aux tours d'attaque.</p> <pre><code>@dataclass\nclass DefenseTowerComponent:\n\"\"\"Composant pour les tours de d\u00e9fense (attaque).\"\"\"\n    damage: float  # D\u00e9g\u00e2ts inflig\u00e9s par attaque\n    attack_speed: float  # Vitesse d'attaque\n</code></pre> <p>Propri\u00e9t\u00e9s : - <code>damage</code> : D\u00e9g\u00e2ts inflig\u00e9s par projectile (d\u00e9faut: 15.0) - <code>attack_speed</code> : Multiplicateur de vitesse d'attaque (d\u00e9faut: 1.0)</p> <p>Utilisation : Ajout\u00e9 aux tours de d\u00e9fense en compl\u00e9ment du <code>TowerComponent</code>.</p>"},{"location":"dev/02-systeme/tower-system-implementation/#3-healtowercomponent","title":"3. HealTowerComponent","text":"<p>Fichier : <code>src/components/core/healTowerComponent.py</code></p> <p>Composant sp\u00e9cifique aux tours de soin.</p> <pre><code>@dataclass\nclass HealTowerComponent:\n\"\"\"Composant pour les tours de soin.\"\"\"\n    heal_amount: float  # Points de vie restaur\u00e9s par soin\n    heal_speed: float   # Vitesse de soin\n</code></pre> <p>Propri\u00e9t\u00e9s : - <code>heal_amount</code> : Points de vie restaur\u00e9s (d\u00e9faut: 10.0) - <code>heal_speed</code> : Multiplicateur de vitesse de soin (d\u00e9faut: 1.0)</p> <p>Utilisation : Ajout\u00e9 aux tours de soin en compl\u00e9ment du <code>TowerComponent</code>.</p>"},{"location":"dev/02-systeme/tower-system-implementation/#systemes-processors","title":"Syst\u00e8mes (Processors)","text":""},{"location":"dev/02-systeme/tower-system-implementation/#towerprocessor","title":"TowerProcessor","text":"<p>Fichier : <code>src/processeurs/towerProcessor.py</code></p> <p>Processeur principal g\u00e9rant la logique des tours.</p>"},{"location":"dev/02-systeme/tower-system-implementation/#fonctionnalites","title":"Fonctionnalit\u00e9s","text":"<ol> <li>Gestion du cooldown :</li> <li>D\u00e9cr\u00e9mente le cooldown de chaque tour</li> <li> <p>Permet l'action lorsque le cooldown atteint 0</p> </li> <li> <p>D\u00e9tection de cibles :</p> </li> <li>Recherche d'ennemis dans la port\u00e9e (tours de d\u00e9fense)</li> <li>Recherche d'alli\u00e9s bless\u00e9s dans la port\u00e9e (tours de soin)</li> <li> <p>Utilise <code>TeamComponent</code> pour identifier alli\u00e9s/ennemis</p> </li> <li> <p>Actions :</p> </li> <li>Tours de d\u00e9fense : Cr\u00e9e des projectiles via <code>ProjectileFactory</code></li> <li>Tours de soin : Applique des soins directement sur <code>HealthComponent</code></li> </ol>"},{"location":"dev/02-systeme/tower-system-implementation/#methode-principale","title":"M\u00e9thode principale","text":"<pre><code>def process(self, dt: float):\n\"\"\"Traite la logique des tours \u00e0 chaque frame.\"\"\"\n    for entity, (tower, pos, team) in esper.get_components(\n        TowerComponent, PositionComponent, TeamComponent\n    ):\n        # 1. Mise \u00e0 jour du cooldown\n        if tower.current_cooldown &gt; 0:\n            tower.current_cooldown -= dt\n            continue\n\n        # 2. Recherche de cible\n        target = self._find_target(entity, tower, pos, team)\n\n        # 3. Action selon le type\n        if target:\n            if tower.tower_type == \"defense\":\n                self._attack_target(entity, target, pos)\n            elif tower.tower_type == \"heal\":\n                self._heal_target(entity, target)\n\n            # 4. R\u00e9initialisation du cooldown\n            tower.current_cooldown = tower.cooldown\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#integration-dans-la-boucle-de-jeu","title":"Int\u00e9gration dans la boucle de jeu","text":"<p>Fichier : <code>src/game.py</code></p> <pre><code>def _initialize_processors(self):\n\"\"\"Initialise les processeurs du jeu.\"\"\"\n    # ... autres processeurs\n    self.tower_processor = TowerProcessor()\n    esper.add_processor(self.tower_processor, priority=15)\n</code></pre> <p>Dans la boucle principale :</p> <pre><code>def update(self, dt: float):\n\"\"\"Met \u00e0 jour tous les syst\u00e8mes du jeu.\"\"\"\n    # ... autres mises \u00e0 jour\n\n    # Traitement des tours\n    if self.tower_processor:\n        self.tower_processor.process(dt)\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#factory","title":"Factory","text":""},{"location":"dev/02-systeme/tower-system-implementation/#buildingfactory","title":"buildingFactory","text":"<p>Fichier : <code>src/factory/buildingFactory.py</code></p> <p>Factory pour cr\u00e9er les entit\u00e9s de tours.</p>"},{"location":"dev/02-systeme/tower-system-implementation/#create_defense_tower","title":"create_defense_tower","text":"<pre><code>def create_defense_tower(world: esper.World, x: float, y: float, team_id: int = 1) -&gt; int:\n\"\"\"\n    Cr\u00e9e une tour de d\u00e9fense.\n\n    Args:\n        world: Monde esper\n        x, y: Position de la tour\n        team_id: ID de l'\u00e9quipe (1=alli\u00e9, 2=ennemi)\n\n    Returns:\n        ID de l'entit\u00e9 cr\u00e9\u00e9e\n    \"\"\"\n    entity = world.create_entity()\n\n    # Composants de base\n    world.add_component(entity, PositionComponent(x, y))\n    world.add_component(entity, TeamComponent(team_id))\n\n    # Sprite\n    sprite = sprite_manager.create_sprite_component(\n        SpriteID.ALLY_DEFENCE_TOWER if team_id == 1 else SpriteID.ENEMY_DEFENCE_TOWER\n    )\n    world.add_component(entity, sprite)\n\n    # Composants sp\u00e9cifiques tour\n    world.add_component(entity, TowerComponent(\n        tower_type=\"defense\",\n        range=200.0,\n        cooldown=2.0\n    ))\n    world.add_component(entity, DefenseTowerComponent(\n        damage=15.0,\n        attack_speed=1.0\n    ))\n\n    return entity\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#create_heal_tower","title":"create_heal_tower","text":"<pre><code>def create_heal_tower(world: esper.World, x: float, y: float, team_id: int = 1) -&gt; int:\n\"\"\"\n    Cr\u00e9e une tour de soin.\n\n    Args:\n        world: Monde esper\n        x, y: Position de la tour\n        team_id: ID de l'\u00e9quipe (1=alli\u00e9, 2=ennemi)\n\n    Returns:\n        ID de l'entit\u00e9 cr\u00e9\u00e9e\n    \"\"\"\n    entity = world.create_entity()\n\n    # Composants de base\n    world.add_component(entity, PositionComponent(x, y))\n    world.add_component(entity, TeamComponent(team_id))\n\n    # Sprite\n    sprite = sprite_manager.create_sprite_component(\n        SpriteID.ALLY_HEAL_TOWER if team_id == 1 else SpriteID.ENEMY_HEAL_TOWER\n    )\n    world.add_component(entity, sprite)\n\n    # Composants sp\u00e9cifiques tour\n    world.add_component(entity, TowerComponent(\n        tower_type=\"heal\",\n        range=150.0,\n        cooldown=3.0\n    ))\n    world.add_component(entity, HealTowerComponent(\n        heal_amount=10.0,\n        heal_speed=1.0\n    ))\n\n    return entity\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#interface-utilisateur","title":"Interface utilisateur","text":""},{"location":"dev/02-systeme/tower-system-implementation/#actionbar","title":"ActionBar","text":"<p>Fichier : <code>src/ui/action_bar.py</code></p> <p>L'ActionBar g\u00e8re les boutons de construction des tours.</p>"},{"location":"dev/02-systeme/tower-system-implementation/#boutons-de-construction","title":"Boutons de construction","text":"<pre><code>build_buttons = [\n    ActionButton(\n        action_type=ActionType.BUILD_DEFENSE_TOWER,\n        icon_path=\"assets/sprites/ui/build_defense.png\",\n        text=t(\"actionbar.build_defense\"),\n        cost=150,\n        hotkey=\"\",\n        visible=False,  # Visible uniquement quand Architecte s\u00e9lectionn\u00e9\n        callback=self._build_defense_tower\n    ),\n    ActionButton(\n        action_type=ActionType.BUILD_HEAL_TOWER,\n        icon_path=\"assets/sprites/ui/build_heal.png\",\n        text=t(\"actionbar.build_heal\"),\n        cost=120,\n        hotkey=\"\",\n        visible=False,\n        callback=self._build_heal_tower\n    )\n]\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#logique-de-construction","title":"Logique de construction","text":"<pre><code>def _build_defense_tower(self):\n\"\"\"Construit une tour de d\u00e9fense.\"\"\"\n    # V\u00e9rifier qu'un Architecte est s\u00e9lectionn\u00e9\n    architects = list(esper.get_components(SpeArchitect, PositionComponent))\n    if not architects:\n        self.notification_system.add_notification(\n            t(\"notification.no_architect\"),\n            NotificationType.ERROR\n        )\n        return\n\n    # R\u00e9cup\u00e9rer la position de l'Architecte\n    _, (_, pos) = architects[0]\n\n    # V\u00e9rifier que c'est sur une \u00eele\n    if not is_tile_island(self.game_engine.grid, pos.x, pos.y):\n        self.notification_system.add_notification(\n            t(\"notification.not_on_island\"),\n            NotificationType.ERROR\n        )\n        return\n\n    # V\u00e9rifier qu'il n'y a pas d\u00e9j\u00e0 une tour \u00e0 cet emplacement\n    for entity, (tower_pos, _) in esper.get_components(PositionComponent, TowerComponent):\n        distance = math.sqrt((pos.x - tower_pos.x)**2 + (pos.y - tower_pos.y)**2)\n        if distance &lt; 40:  # Rayon minimum entre tours\n            self.notification_system.add_notification(\n                t(\"notification.tower_already_exists\"),\n                NotificationType.ERROR\n            )\n            return\n\n    # V\u00e9rifier le co\u00fbt\n    cost = 150\n    if self._get_player_gold_direct() &lt; cost:\n        self.notification_system.add_notification(\n            t(\"notification.not_enough_gold\"),\n            NotificationType.ERROR\n        )\n        return\n\n    # Cr\u00e9er la tour\n    create_defense_tower(esper, pos.x, pos.y, team_id=1)\n\n    # D\u00e9duire le co\u00fbt\n    self._set_player_gold_direct(self._get_player_gold_direct() - cost)\n\n    # Notification de succ\u00e8s\n    self.notification_system.add_notification(\n        t(\"notification.tower_built\"),\n        NotificationType.SUCCESS\n    )\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#activation-des-boutons","title":"Activation des boutons","text":"<p>Les boutons sont activ\u00e9s lorsque l'Architecte est s\u00e9lectionn\u00e9 :</p> <pre><code>def update_for_unit(self, unit_info: Optional[UnitInfo]):\n\"\"\"Met \u00e0 jour les boutons selon l'unit\u00e9 s\u00e9lectionn\u00e9e.\"\"\"\n    self.selected_unit = unit_info\n\n    # Afficher les boutons de construction si Architecte s\u00e9lectionn\u00e9\n    for button in self.action_buttons:\n        if button.action_type in [ActionType.BUILD_DEFENSE_TOWER, ActionType.BUILD_HEAL_TOWER]:\n            button.visible = (unit_info and unit_info.unit_type == \"Architecte\")\n\n    self._update_button_positions()\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#sprites-et-assets","title":"Sprites et assets","text":""},{"location":"dev/02-systeme/tower-system-implementation/#structure-des-fichiers","title":"Structure des fichiers","text":"<pre><code>assets/sprites/buildings/\n\u251c\u2500\u2500 ally/\n\u2502   \u251c\u2500\u2500 ally-defence-tower.png    # Tour de d\u00e9fense alli\u00e9e (80x120)\n\u2502   \u2514\u2500\u2500 ally-heal-tower.png        # Tour de soin alli\u00e9e (80x120)\n\u2514\u2500\u2500 enemy/\n    \u251c\u2500\u2500 enemy-defence-tower.png    # Tour de d\u00e9fense ennemie (80x120)\n    \u2514\u2500\u2500 enemy-heal-tower.png        # Tour de soin ennemie (80x120)\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#configuration-des-sprites","title":"Configuration des sprites","text":"<p>Fichier : <code>src/managers/sprite_manager.py</code></p> <pre><code>class SpriteID(Enum):\n\"\"\"Identifiants des sprites.\"\"\"\n    # ... autres sprites\n    ALLY_DEFENCE_TOWER = \"ALLY_DEFENCE_TOWER\"\n    ALLY_HEAL_TOWER = \"ALLY_HEAL_TOWER\"\n    ENEMY_DEFENCE_TOWER = \"ENEMY_DEFENCE_TOWER\"\n    ENEMY_HEAL_TOWER = \"ENEMY_HEAL_TOWER\"\n\n# Configuration des sprites\nSPRITE_CONFIGS = [\n    # Buildings\n    SpriteData(\n        SpriteID.ALLY_DEFENCE_TOWER,\n        \"assets/sprites/buildings/ally/ally-defence-tower.png\",\n        80, 120,\n        \"Tour de d\u00e9fense\"\n    ),\n    SpriteData(\n        SpriteID.ALLY_HEAL_TOWER,\n        \"assets/sprites/buildings/ally/ally-heal-tower.png\",\n        80, 120,\n        \"Tour de soin\"\n    ),\n    SpriteData(\n        SpriteID.ENEMY_DEFENCE_TOWER,\n        \"assets/sprites/buildings/enemy/enemy-defence-tower.png\",\n        80, 120,\n        \"Tour de d\u00e9fense ennemie\"\n    ),\n    SpriteData(\n        SpriteID.ENEMY_HEAL_TOWER,\n        \"assets/sprites/buildings/enemy/enemy-heal-tower.png\",\n        80, 120,\n        \"Tour de soin ennemie\"\n    ),\n]\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#configuration","title":"Configuration","text":""},{"location":"dev/02-systeme/tower-system-implementation/#mode-developpeur","title":"Mode d\u00e9veloppeur","text":"<p>Fichier : <code>src/settings/settings.py</code></p> <pre><code>DEFAULT_CONFIG = {\n    \"language\": \"french\",\n    \"fullscreen\": False,\n    \"resolution\": [1280, 720],\n    \"volume\": 0.7,\n    \"dev_mode\": False,  # Active les fonctionnalit\u00e9s de d\u00e9veloppement\n    # ... autres param\u00e8tres\n}\n</code></pre> <p>Le <code>dev_mode</code> contr\u00f4le l'affichage du bouton de debug dans l'ActionBar :</p> <pre><code># Dans _initialize_buttons()\nif ConfigManager().get('dev_mode', False):\n    global_buttons.append(\n        ActionButton(\n            action_type=ActionType.DEV_GIVE_GOLD,\n            icon_path=\"assets/sprites/ui/dev_give_gold.png\",\n            text=t(\"actionbar.debug_menu\"),\n            cost=0,\n            hotkey=\"\",\n            tooltip=t(\"debug.modal.title\"),\n            is_global=True,\n            callback=self._toggle_debug_menu\n        )\n    )\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#traductions","title":"Traductions","text":"<p>Fichiers : - <code>assets/locales/french.py</code> - <code>assets/locales/english.py</code></p> <pre><code># Fran\u00e7ais\nTRANSLATIONS = {\n    \"shop.defense_tower\": \"Tour de D\u00e9fense\",\n    \"shop.defense_tower_desc\": \"Tour de d\u00e9fense automatique\",\n    \"shop.heal_tower\": \"Tour de Soin\",\n    \"shop.heal_tower_desc\": \"Tour de soin automatique\",\n    \"actionbar.build_defense\": \"Tour de D\u00e9fense\",\n    \"actionbar.build_heal\": \"Tour de Soin\",\n    \"notification.tower_built\": \"Tour construite avec succ\u00e8s\",\n    \"notification.tower_already_exists\": \"Une tour existe d\u00e9j\u00e0 ici\",\n    \"notification.no_architect\": \"Vous devez s\u00e9lectionner un Architecte\",\n    \"notification.not_on_island\": \"Vous devez construire sur une \u00eele\",\n}\n\n# Anglais\nTRANSLATIONS = {\n    \"shop.defense_tower\": \"Defense Tower\",\n    \"shop.defense_tower_desc\": \"Automatic defense tower\",\n    \"shop.heal_tower\": \"Heal Tower\",\n    \"shop.heal_tower_desc\": \"Automatic healing tower\",\n    \"actionbar.build_defense\": \"Defense Tower\",\n    \"actionbar.build_heal\": \"Heal Tower\",\n    \"notification.tower_built\": \"Tower built successfully\",\n    \"notification.tower_already_exists\": \"A tower already exists here\",\n    \"notification.no_architect\": \"You must select an Architect\",\n    \"notification.not_on_island\": \"You must build on an island\",\n}\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#corrections-apportees","title":"Corrections apport\u00e9es","text":""},{"location":"dev/02-systeme/tower-system-implementation/#1-organisation-des-imports","title":"1. Organisation des imports","text":"<p>Probl\u00e8me : Imports dispers\u00e9s dans le code, blocs try/except inutiles</p> <p>Solution : Tous les imports regroup\u00e9s en haut du fichier</p> <pre><code># src/ui/action_bar.py - En-t\u00eate du fichier\nimport pygame\nimport esper\nfrom typing import List, Optional, Callable\nfrom dataclasses import dataclass\nfrom enum import Enum, auto\nimport math\n\nfrom src.components.core.positionComponent import PositionComponent\nfrom src.components.special.speArchitectComponent import SpeArchitect\nfrom src.components.core.towerComponent import TowerComponent\n# ... autres imports\n</code></pre> <p>Fichiers modifi\u00e9s : - <code>src/ui/action_bar.py</code></p>"},{"location":"dev/02-systeme/tower-system-implementation/#2-chemins-des-sprites","title":"2. Chemins des sprites","text":"<p>Probl\u00e8me : Chemin incorrect pour <code>ALLY_DEFENCE_TOWER</code> (manquait le sous-dossier <code>ally/</code>)</p> <p>Avant : <pre><code>SpriteData(\n    SpriteID.ALLY_DEFENCE_TOWER,\n    \"assets/sprites/buildings/ally-defence-tower.png\",  # \u274c Incorrect\n    80, 120,\n    \"Tour de d\u00e9fense\"\n)\n</code></pre></p> <p>Apr\u00e8s : <pre><code>SpriteData(\n    SpriteID.ALLY_DEFENCE_TOWER,\n    \"assets/sprites/buildings/ally/ally-defence-tower.png\",  # \u2705 Correct\n    80, 120,\n    \"Tour de d\u00e9fense\"\n)\n</code></pre></p> <p>Fichiers modifi\u00e9s : - <code>src/managers/sprite_manager.py</code></p>"},{"location":"dev/02-systeme/tower-system-implementation/#3-noms-des-tours","title":"3. Noms des tours","text":"<p>Probl\u00e8me : Tours nomm\u00e9es \"Tour d'Attaque\" au lieu de \"Tour de D\u00e9fense\"</p> <p>Solution : Correction des traductions</p> <p>Fichiers modifi\u00e9s : - <code>assets/locales/french.py</code> - <code>assets/locales/english.py</code></p>"},{"location":"dev/02-systeme/tower-system-implementation/#4-visibilite-du-bouton-debug","title":"4. Visibilit\u00e9 du bouton debug","text":"<p>Probl\u00e8me : Bouton debug toujours visible, m\u00eame avec <code>dev_mode: False</code></p> <p>Solution :  1. Ajout de <code>dev_mode: False</code> dans <code>DEFAULT_CONFIG</code> 2. Condition <code>if ConfigManager().get('dev_mode', False)</code> pour cr\u00e9er le bouton 3. V\u00e9rification dynamique dans <code>_update_button_positions()</code></p> <p>Fichiers modifi\u00e9s : - <code>src/settings/settings.py</code> - <code>src/ui/action_bar.py</code></p>"},{"location":"dev/02-systeme/tower-system-implementation/#5-integration-du-towerprocessor","title":"5. Int\u00e9gration du TowerProcessor","text":"<p>Probl\u00e8me : <code>TowerProcessor</code> cr\u00e9\u00e9 mais pas appel\u00e9 dans la boucle de jeu</p> <p>Solution : Ajout de l'appel <code>process(dt)</code> dans <code>GameEngine.update()</code></p> <p>Avant : <pre><code>def update(self, dt: float):\n    # tower_processor existait mais n'\u00e9tait pas appel\u00e9\n    esper.process()\n</code></pre></p> <p>Apr\u00e8s : <pre><code>def update(self, dt: float):\n    # ... autres mises \u00e0 jour\n\n    # Traitement des tours\n    if self.tower_processor:\n        self.tower_processor.process(dt)\n\n    esper.process()\n</code></pre></p> <p>Fichiers modifi\u00e9s : - <code>src/game.py</code></p>"},{"location":"dev/02-systeme/tower-system-implementation/#6-ajout-du-towercomponent-aux-tours","title":"6. Ajout du TowerComponent aux tours","text":"<p>Probl\u00e8me : Tours cr\u00e9\u00e9es sans <code>TowerComponent</code>, donc non d\u00e9tect\u00e9es par le processeur</p> <p>Solution : Ajout syst\u00e9matique du composant dans les factories</p> <p>Fichiers modifi\u00e9s : - <code>src/factory/buildingFactory.py</code></p>"},{"location":"dev/02-systeme/tower-system-implementation/#7-verifications-de-placement","title":"7. V\u00e9rifications de placement","text":"<p>Probl\u00e8me : Aucune v\u00e9rification avant de placer une tour</p> <p>Solution : Ajout de 3 v\u00e9rifications : 1. Architecte s\u00e9lectionn\u00e9 2. Position sur une \u00eele 3. Pas de tour existante \u00e0 proximit\u00e9</p> <p>Fichiers modifi\u00e9s : - <code>src/ui/action_bar.py</code> (m\u00e9thodes <code>_build_defense_tower()</code> et <code>_build_heal_tower()</code>)</p>"},{"location":"dev/02-systeme/tower-system-implementation/#flux-de-donnees","title":"Flux de donn\u00e9es","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    Joueur clique                          \u2502\n\u2502              \"Construire Tour de D\u00e9fense\"                 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                      \u2502\n                      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502              ActionBar._build_defense_tower()             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502\n\u2502  \u2502 1. V\u00e9rifier Architecte s\u00e9lectionn\u00e9                 \u2502  \u2502\n\u2502  \u2502 2. V\u00e9rifier position sur \u00eele                       \u2502  \u2502\n\u2502  \u2502 3. V\u00e9rifier pas de tour existante                  \u2502  \u2502\n\u2502  \u2502 4. V\u00e9rifier co\u00fbt (150 gold)                        \u2502  \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                      \u2502\n                      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        buildingFactory.create_defense_tower()             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502\n\u2502  \u2502 1. Cr\u00e9er entit\u00e9                                    \u2502  \u2502\n\u2502  \u2502 2. Ajouter PositionComponent                       \u2502  \u2502\n\u2502  \u2502 3. Ajouter TeamComponent                           \u2502  \u2502\n\u2502  \u2502 4. Ajouter SpriteComponent                         \u2502  \u2502\n\u2502  \u2502 5. Ajouter TowerComponent                          \u2502  \u2502\n\u2502  \u2502 6. Ajouter DefenseTowerComponent                   \u2502  \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                      \u2502\n                      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502           Tour cr\u00e9\u00e9e dans le monde (esper)                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                      \u2502\n                      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         TowerProcessor.process(dt) - Chaque frame         \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502\n\u2502  \u2502 Pour chaque tour:                                  \u2502  \u2502\n\u2502  \u2502   1. D\u00e9cr\u00e9menter cooldown                          \u2502  \u2502\n\u2502  \u2502   2. Si cooldown = 0:                              \u2502  \u2502\n\u2502  \u2502      a. Chercher cible dans range                  \u2502  \u2502\n\u2502  \u2502      b. Si cible trouv\u00e9e:                          \u2502  \u2502\n\u2502  \u2502         - Tour d\u00e9fense \u2192 Cr\u00e9er projectile          \u2502  \u2502\n\u2502  \u2502         - Tour soin \u2192 Soigner alli\u00e9                \u2502  \u2502\n\u2502  \u2502      c. R\u00e9initialiser cooldown                     \u2502  \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#tests-et-validation","title":"Tests et validation","text":""},{"location":"dev/02-systeme/tower-system-implementation/#checklist-de-fonctionnement","title":"Checklist de fonctionnement","text":"<ul> <li>[x] Les tours apparaissent correctement \u00e0 l'\u00e9cran</li> <li>[x] Les sprites correspondent au bon fichier</li> <li>[x] Les tours de d\u00e9fense attaquent les ennemis dans leur port\u00e9e</li> <li>[x] Les tours de soin soignent les alli\u00e9s bless\u00e9s</li> <li>[x] Le cooldown fonctionne correctement</li> <li>[x] Les boutons ne s'affichent que si Architecte s\u00e9lectionn\u00e9</li> <li>[x] Le bouton debug ne s'affiche que si <code>dev_mode = True</code></li> <li>[x] Les traductions sont correctes (FR/EN)</li> <li>[x] Le placement v\u00e9rifie la position (\u00eele uniquement)</li> <li>[x] Le placement v\u00e9rifie l'absence de tour existante</li> <li>[x] Le co\u00fbt en or est correctement d\u00e9duit</li> </ul>"},{"location":"dev/02-systeme/tower-system-implementation/#commandes-de-test","title":"Commandes de test","text":"<pre><code># Tester la cr\u00e9ation de tour de d\u00e9fense\n./venv/bin/python -c \"\nimport pygame\npygame.init()\nfrom src.factory.buildingFactory import create_defense_tower\nimport esper\n\nworld = esper.World()\ntower = create_defense_tower(world, 100, 100)\nprint(f'Tour cr\u00e9\u00e9e: {tower}')\npygame.quit()\n\"\n\n# Lancer le jeu\n./venv/bin/python main.py\n</code></pre>"},{"location":"dev/02-systeme/tower-system-implementation/#ameliorations-futures-possibles","title":"Am\u00e9liorations futures possibles","text":""},{"location":"dev/02-systeme/tower-system-implementation/#court-terme","title":"Court terme","text":"<ul> <li>[ ] Ajouter des effets visuels lors de l'attaque/soin</li> <li>[ ] Ajouter des sons pour les tirs/soins</li> <li>[ ] Animation de construction progressive</li> <li>[ ] Indicateur visuel de la port\u00e9e lors du placement</li> </ul>"},{"location":"dev/02-systeme/tower-system-implementation/#moyen-terme","title":"Moyen terme","text":"<ul> <li>[ ] Syst\u00e8me d'am\u00e9lioration des tours (niveau, d\u00e9g\u00e2ts, port\u00e9e)</li> <li>[ ] Tours sp\u00e9ciales (ralentissement, zone d'effet, etc.)</li> <li>[ ] Co\u00fbt de maintenance des tours</li> <li>[ ] Destruction manuelle des tours avec remboursement partiel</li> </ul>"},{"location":"dev/02-systeme/tower-system-implementation/#long-terme","title":"Long terme","text":"<ul> <li>[ ] IA pour placement optimal des tours (mode ennemi)</li> <li>[ ] Synergie entre tours proches</li> <li>[ ] Tours l\u00e9gendaires avec capacit\u00e9s uniques</li> <li>[ ] Syst\u00e8me de recherche pour d\u00e9bloquer de nouvelles tours</li> </ul>"},{"location":"dev/02-systeme/tower-system-implementation/#dependances","title":"D\u00e9pendances","text":""},{"location":"dev/02-systeme/tower-system-implementation/#composants-requis","title":"Composants requis","text":"<ul> <li><code>PositionComponent</code> : Position dans le monde</li> <li><code>TeamComponent</code> : Identification alli\u00e9/ennemi</li> <li><code>HealthComponent</code> : Points de vie (pour les cibles)</li> <li><code>SpriteComponent</code> : Rendu visuel</li> <li><code>SpeArchitect</code> : Capacit\u00e9 \u00e0 construire</li> </ul>"},{"location":"dev/02-systeme/tower-system-implementation/#systemes-requis","title":"Syst\u00e8mes requis","text":"<ul> <li><code>sprite_manager</code> : Chargement des sprites</li> <li><code>ProjectileFactory</code> : Cr\u00e9ation de projectiles (tours de d\u00e9fense)</li> <li><code>NotificationSystem</code> : Retours utilisateur</li> <li><code>ConfigManager</code> : Configuration du jeu</li> </ul>"},{"location":"dev/02-systeme/tower-system-implementation/#fichiers-modifies","title":"Fichiers modifi\u00e9s","text":"Fichier Modifications <code>src/components/core/towerComponent.py</code> \u2728 Cr\u00e9ation du composant de base <code>src/components/core/defenseTowerComponent.py</code> \u2728 Cr\u00e9ation du composant d\u00e9fense <code>src/components/core/healTowerComponent.py</code> \u2728 Cr\u00e9ation du composant soin <code>src/processeurs/towerProcessor.py</code> \u2728 Cr\u00e9ation du processeur <code>src/factory/buildingFactory.py</code> \u2728 Ajout des factories + \ud83d\udd27 TowerComponent <code>src/managers/sprite_manager.py</code> \ud83d\udd27 Correction chemins sprites <code>src/ui/action_bar.py</code> \ud83d\udd27 Organisation imports + boutons construction <code>src/settings/settings.py</code> \u2795 Ajout <code>dev_mode</code> <code>src/game.py</code> \ud83d\udd27 Int\u00e9gration TowerProcessor <code>assets/locales/french.py</code> \ud83d\udd27 Correction traductions <code>assets/locales/english.py</code> \ud83d\udd27 Correction traductions <p>L\u00e9gende : - \u2728 Nouveau fichier - \ud83d\udd27 Modification - \u2795 Ajout de fonctionnalit\u00e9</p>"},{"location":"dev/02-systeme/tower-system-implementation/#auteurs-et-contributions","title":"Auteurs et contributions","text":"<ul> <li>Impl\u00e9mentation initiale : Session de d\u00e9veloppement Octobre 2025</li> <li>Architecture ECS : Bas\u00e9e sur la structure existante du projet</li> <li>Tests et corrections : Validation compl\u00e8te du syst\u00e8me</li> </ul>"},{"location":"dev/02-systeme/tower-system-implementation/#licence","title":"Licence","text":"<p>Ce syst\u00e8me fait partie du projet Galad Islands et est soumis \u00e0 la m\u00eame licence que le projet principal.</p>"},{"location":"dev/02-systeme/api/game-engine/","title":"API \u2014 Moteur de jeu","text":"<p>Le moteur de jeu est organis\u00e9 autour de la classe principale <code>GameEngine</code> et de classes utilitaires sp\u00e9cialis\u00e9es.</p>"},{"location":"dev/02-systeme/api/game-engine/#classes-principales","title":"Classes principales","text":""},{"location":"dev/02-systeme/api/game-engine/#gameengine","title":"GameEngine","text":"<p>Fichier : <code>src/game.py</code></p> <p>Responsabilit\u00e9 : classe centrale qui orchestre l'ensemble des syst\u00e8mes du jeu.</p> <pre><code>class GameEngine:\n\"\"\"Main class managing all game logic.\"\"\"\n\n    def __init__(self, window=None, bg_original=None, select_sound=None):\n\"\"\"Initializes the game engine.\"\"\"\n\n    def initialize(self):\n\"\"\"Initializes all game components.\"\"\"\n\n    def run(self):\n\"\"\"Starts the main game loop.\"\"\"\n\n    def _quit_game(self):\n\"\"\"Stops the game cleanly.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#proprietes-principales","title":"Propri\u00e9t\u00e9s principales","text":"Propri\u00e9t\u00e9 Type Description <code>window</code> <code>pygame.Surface</code> Surface d'affichage principale <code>running</code> <code>bool</code> \u00c9tat d'ex\u00e9cution du jeu <code>clock</code> <code>pygame.time.Clock</code> Contr\u00f4le du framerate <code>camera</code> <code>Camera</code> Gestion de la vue et du zoom <code>action_bar</code> <code>ActionBar</code> Barre d'interface principale <code>grid</code> <code>List[List[int]]</code> Grille de la carte <code>selected_unit_id</code> <code>int</code> ID de l'unit\u00e9 s\u00e9lectionn\u00e9e <code>camera_follow_enabled</code> <code>bool</code> Suivi automatique de la cam\u00e9ra <code>control_groups</code> <code>dict</code> Groupes de contr\u00f4le (1-9) <code>selection_team_filter</code> <code>Team</code> Filtre d'\u00e9quipe pour la s\u00e9lection <code>flying_chest_manager</code> <code>FlyingChestManager</code> Gestionnaire des coffres volants <code>island_resource_manager</code> <code>IslandResourceManager</code> Gestionnaire des ressources d'\u00eeles <code>stormManager</code> <code>StormManager</code> Gestionnaire des temp\u00eates <code>notification_system</code> <code>NotificationSystem</code> Syst\u00e8me de notifications <code>exit_modal</code> <code>InGameMenuModal</code> Modale du menu en jeu <code>game_over</code> <code>bool</code> \u00c9tat de fin de partie <code>winning_team</code> <code>Team</code> \u00c9quipe gagnante <code>chest_spawn_timer</code> <code>float</code> Timer d'apparition des coffres"},{"location":"dev/02-systeme/api/game-engine/#methodes-publiques-principales","title":"M\u00e9thodes publiques principales","text":""},{"location":"dev/02-systeme/api/game-engine/#initialization","title":"Initialization","text":"<pre><code>def initialize(self) -&gt; None:\n\"\"\"Initializes all game components.\n\n    - Configures the map and images\n    - Initializes the ECS system\n    - Creates initial entities\n    - Configures the camera\n    \"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#gestion-des-unites","title":"Gestion des unit\u00e9s","text":"<pre><code>def select_unit(self, entity_id: int) -&gt; None:\n\"\"\"S\u00e9lectionne une unit\u00e9.\"\"\"\n\ndef select_next_unit(self) -&gt; None:\n\"\"\"S\u00e9lectionne l'unit\u00e9 suivante.\"\"\"\n\ndef select_previous_unit(self) -&gt; None:\n\"\"\"S\u00e9lectionne l'unit\u00e9 pr\u00e9c\u00e9dente.\"\"\"\n\ndef select_all_allied_units(self) -&gt; None:\n\"\"\"S\u00e9lectionne toutes les unit\u00e9s alli\u00e9es.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#gestion-des-groupes-de-controle","title":"Gestion des groupes de contr\u00f4le","text":"<pre><code>def assign_control_group(self, slot: int) -&gt; None:\n\"\"\"Assigne la s\u00e9lection au groupe de contr\u00f4le.\"\"\"\n\ndef select_control_group(self, slot: int) -&gt; None:\n\"\"\"S\u00e9lectionne un groupe de contr\u00f4le.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#gestion-de-la-camera","title":"Gestion de la cam\u00e9ra","text":"<pre><code>def toggle_camera_follow_mode(self) -&gt; None:\n\"\"\"Bascule entre cam\u00e9ra libre et suivi d'unit\u00e9.\"\"\"\n\ndef _setup_camera(self) -&gt; None:\n\"\"\"Configure la position initiale de la cam\u00e9ra.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#evenements-et-interactions","title":"\u00c9v\u00e9nements et interactions","text":"<pre><code>def handle_mouse_selection(self, mouse_pos: Tuple[int, int]) -&gt; None:\n\"\"\"G\u00e8re la s\u00e9lection d'unit\u00e9 par clic souris.\"\"\"\n\ndef trigger_selected_attack(self) -&gt; None:\n\"\"\"D\u00e9clenche l'attaque de l'unit\u00e9 s\u00e9lectionn\u00e9e.\"\"\"\n\ndef open_exit_modal(self) -&gt; None:\n\"\"\"Ouvre la modale de confirmation de sortie.\"\"\"\n\ndef open_shop(self) -&gt; None:\n\"\"\"Ouvre la boutique via l'ActionBar.\"\"\"\n\ndef cycle_selection_team(self) -&gt; None:\n\"\"\"Change l'\u00e9quipe filtr\u00e9e pour la s\u00e9lection (Alli\u00e9/Ennemi/Tous).\"\"\"\n\ndef _give_dev_gold(self, amount: int) -&gt; None:\n\"\"\"Donne de l'or au joueur (fonction de d\u00e9veloppement).\"\"\"\n\ndef _handle_game_over(self, winning_team: int) -&gt; None:\n\"\"\"G\u00e8re la fin de partie.\"\"\"\n\ndef _handle_action_bar_camp_change(self, team: int) -&gt; None:\n\"\"\"Callback pour changement d'\u00e9quipe via ActionBar.\"\"\"\n\ndef _handle_action_bar_shop_purchase(self, unit_type: str, cost: int) -&gt; bool:\n\"\"\"Callback pour achat d'unit\u00e9 via la boutique.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#eventhandler","title":"EventHandler","text":"<p>Responsabilit\u00e9 : Gestion centralis\u00e9e de tous les \u00e9v\u00e9nements pygame.</p> <pre><code>class EventHandler:\n\"\"\"Classe responsable de la gestion de tous les \u00e9v\u00e9nements du jeu.\"\"\"\n\n    def __init__(self, game_engine: GameEngine):\n\"\"\"Initialise avec une r\u00e9f\u00e9rence au moteur.\"\"\"\n\n    def handle_events(self) -&gt; None:\n\"\"\"Traite tous les \u00e9v\u00e9nements de la queue pygame.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#methodes-de-gestion-devenements","title":"M\u00e9thodes de gestion d'\u00e9v\u00e9nements","text":"M\u00e9thode \u00c9v\u00e9nement Description <code>_handle_quit()</code> <code>QUIT</code> Fermeture de la fen\u00eatre <code>_handle_keydown(event)</code> <code>KEYDOWN</code> Touches clavier press\u00e9es <code>_handle_mousedown(event)</code> <code>MOUSEBUTTONDOWN</code> Clics souris <code>_handle_mousemotion(event)</code> <code>MOUSEMOTION</code> Mouvement souris <code>_handle_resize(event)</code> <code>VIDEORESIZE</code> Redimensionnement fen\u00eatre"},{"location":"dev/02-systeme/api/game-engine/#gamerenderer","title":"GameRenderer","text":"<p>Responsabilit\u00e9 : Gestion de tout le rendu graphique.</p> <pre><code>class GameRenderer:\n\"\"\"Classe responsable de tout le rendu du jeu.\"\"\"\n\n    def __init__(self, game_engine: GameEngine):\n\"\"\"Initialise avec une r\u00e9f\u00e9rence au moteur.\"\"\"\n\n    def render_frame(self, dt: float) -&gt; None:\n\"\"\"Effectue le rendu complet d'une frame.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#pipeline-de-rendu","title":"Pipeline de rendu","text":"<ol> <li>Effacement \u00e9cran : <code>_clear_screen()</code></li> <li>Monde de jeu : <code>_render_game_world()</code> - Grille et terrain</li> <li>Sprites : <code>_render_sprites()</code> - Entit\u00e9s avec effets visuels</li> <li>Interface : <code>_render_ui()</code> - ActionBar et \u00e9l\u00e9ments UI</li> <li>Debug : <code>_render_debug_info()</code> - Informations de d\u00e9veloppement</li> <li>Modales : Modales actives (sortie, aide, etc.)</li> </ol>"},{"location":"dev/02-systeme/api/game-engine/#effets-visuels","title":"Effets visuels","text":"<pre><code>def _render_single_sprite(self, window, camera, entity, pos, sprite):\n\"\"\"Rend un sprite avec effets sp\u00e9ciaux.\n\n    Effets support\u00e9s :\n    - Clignotement pour invincibilit\u00e9 (SpeScout)\n    - Halo bleu pour bouclier (SpeMarauder)  \n    - Mise en \u00e9vidence de s\u00e9lection (cercle jaune)\n    - Barres de vie dynamiques\n    \"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#systeme-ecs-integre","title":"Syst\u00e8me ECS int\u00e9gr\u00e9","text":""},{"location":"dev/02-systeme/api/game-engine/#initialisation-ecs","title":"Initialisation ECS","text":"<pre><code>def _initialize_ecs(self) -&gt; None:\n\"\"\"Initialise le syst\u00e8me ECS avec tous les processeurs.\"\"\"\n\n    # Processeurs principaux\n    self.movement_processor = MovementProcessor()\n    self.collision_processor = CollisionProcessor(graph=self.grid)\n    self.player_controls = PlayerControlProcessor()\n    self.tower_processor = TowerProcessor()\n\n    # Ajout avec priorit\u00e9s\n    es.add_processor(self.collision_processor, priority=2)\n    es.add_processor(self.movement_processor, priority=3)\n    es.add_processor(self.player_controls, priority=4)\n    es.add_processor(self.tower_processor, priority=5)\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#gestionnaires-devenements-ecs","title":"Gestionnaires d'\u00e9v\u00e9nements ECS","text":"<pre><code># Configuration des gestionnaires d'\u00e9v\u00e9nements\nes.set_handler('attack_event', create_projectile)\nes.set_handler('entities_hit', entitiesHit)\nes.set_handler('flying_chest_collision', self.flying_chest_manager.handle_collision)\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#boucle-principale","title":"Boucle principale","text":"<pre><code>def run(self) -&gt; None:\n\"\"\"Main game loop.\"\"\"\n    while self.running:\n        # Calculate delta time\n        dt = self.clock.tick(60) / 1000.0\n\n        # Process events\n        self.event_handler.handle_events()\n\n        # Update managers\n        self._update_game(dt)\n\n        # ECS processing (includes processors)\n        es.process()\n\n        # Rendering\n        self.renderer.render_frame(dt)\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#gestionnaires-specialises","title":"Gestionnaires sp\u00e9cialis\u00e9s","text":"<p>Le moteur int\u00e8gre plusieurs gestionnaires sp\u00e9cialis\u00e9s pour prendre en charge des m\u00e9caniques complexes.</p>"},{"location":"dev/02-systeme/api/game-engine/#flyingchestmanager","title":"FlyingChestManager","text":"<p>Fichier : <code>src/managers/flying_chest_manager.py</code></p> <p>Responsabilit\u00e9 : g\u00e8re l'apparition, le comportement et la collecte des coffres volants sur l'eau.</p>"},{"location":"dev/02-systeme/api/game-engine/#islandresourcemanager","title":"IslandResourceManager","text":"<p>Fichier : <code>src/managers/island_resource_manager.py</code></p> <p>Responsabilit\u00e9 : g\u00e8re les ressources en or pr\u00e9sentes sur les \u00eeles neutres.</p>"},{"location":"dev/02-systeme/api/game-engine/#stormmanager","title":"StormManager","text":"<p>Fichier : <code>src/managers/stormManager.py</code></p> <p>Responsabilit\u00e9 : g\u00e8re les temp\u00eates qui infligent des d\u00e9g\u00e2ts aux unit\u00e9s dans leur rayon.</p>"},{"location":"dev/02-systeme/api/game-engine/#architecture-generale","title":"Architecture g\u00e9n\u00e9rale","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    GameEngine                               \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502                EventHandler                        \u2502    \u2502\n\u2502  \u2502  - G\u00e8re les \u00e9v\u00e9nements pygame                      \u2502    \u2502\n\u2502  \u2502  - Contr\u00f4les clavier/souris                        \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502                                                             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502                GameRenderer                         \u2502    \u2502\n\u2502  \u2502  - Rend la grille et les sprites                    \u2502    \u2502\n\u2502  \u2502  - Interface utilisateur                            \u2502    \u2502\n\u2502  \u2502  - Effets visuels et brouillard                     \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502                                                             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502              Syst\u00e8me ECS                            \u2502    \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502    \u2502\n\u2502  \u2502  \u2502          Processeurs ECS                       \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - MovementProcessor                            \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - CollisionProcessor                           \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - PlayerControlProcessor                       \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - CapacitiesSpecialesProcessor                 \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - LifetimeProcessor                            \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - TowerProcessor                               \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - EventProcessor                               \u2502 \u2502    \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502    \u2502\n\u2502  \u2502                                                         \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502    \u2502\n\u2502  \u2502  \u2502            Composants ECS                       \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - Position, Sprite, Health, Velocity          \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - Team, Vision, Projectile                     \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - Capacit\u00e9s sp\u00e9ciales (SpeScout, etc.)        \u2502 \u2502    \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502                                                             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502            Gestionnaires sp\u00e9cialis\u00e9s               \u2502    \u2502\n\u2502  \u2502  - FlyingChestManager                               \u2502    \u2502\n\u2502  \u2502  - IslandResourceManager                            \u2502    \u2502\n\u2502  \u2502  - StormManager                                     \u2502    \u2502\n\u2502  \u2502  - NotificationSystem                               \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502                                                             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502               Syst\u00e8mes externes                     \u2502    \u2502\n\u2502  \u2502  - VisionSystem (brouillard de guerre)             \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"dev/02-systeme/api/game-engine/#flux-de-donnees-principal","title":"Flux de donn\u00e9es principal","text":"<ol> <li>Initialisation : <code>GameEngine.initialize()</code> configure tous les composants</li> <li>Boucle principale : <code>GameEngine.run()</code> orchestre le jeu</li> <li>Traitement des \u00e9v\u00e9nements \u2192 <code>EventHandler.handle_events()</code></li> <li>Mise \u00e0 jour des gestionnaires \u2192 <code>_update_game(dt)</code></li> <li>Traitement ECS \u2192 <code>es.process()</code></li> <li>Rendu \u2192 <code>GameRenderer.render_frame(dt)</code></li> <li>\u00c9v\u00e9nements : les processeurs ECS \u00e9mettent des \u00e9v\u00e9nements pris en charge par les gestionnaires</li> <li>Interactions : collisions et interactions modifient les composants ECS</li> </ol> <p>Le moteur offre une architecture flexible et extensible pour cr\u00e9er des jeux de strat\u00e9gie en temps r\u00e9el avec une int\u00e9gration ECS compl\u00e8te.</p>"},{"location":"dev/02-systeme/api/ui-system/","title":"API - Syst\u00e8me d'interface utilisateur","text":"<p>Le syst\u00e8me UI de Galad Islands est centr\u00e9 autour de l'ActionBar principale et de composants UI r\u00e9utilisables.</p>"},{"location":"dev/02-systeme/api/ui-system/#classes-principales","title":"Classes principales","text":""},{"location":"dev/02-systeme/api/ui-system/#actionbar","title":"ActionBar","text":"<p>Fichier : <code>src/ui/action_bar.py</code></p> <p>Responsabilit\u00e9 : Interface utilisateur principale affich\u00e9e en bas de l'\u00e9cran.</p> <pre><code>class ActionBar:\n\"\"\"Interface utilisateur principale du jeu.\"\"\"\n\n    def __init__(self, get_player_gold_callback, get_selected_units_callback, **callbacks):\n\"\"\"Initialise l'ActionBar avec les callbacks n\u00e9cessaires.\"\"\"\n\n    def draw(self, screen: pygame.Surface) -&gt; None:\n\"\"\"Dessine l'ActionBar sur l'\u00e9cran.\"\"\"\n\n    def handle_event(self, event: pygame.event.Event) -&gt; bool:\n\"\"\"G\u00e8re les \u00e9v\u00e9nements UI. Retourne True si l'\u00e9v\u00e9nement est consomm\u00e9.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#fonctionnalites-principales","title":"Fonctionnalit\u00e9s principales","text":"Fonctionnalit\u00e9 Description Affichage de l'or Montre les ressources du joueur Informations d'unit\u00e9 D\u00e9tails de l'unit\u00e9 s\u00e9lectionn\u00e9e Boutique int\u00e9gr\u00e9e Achat d'unit\u00e9s et am\u00e9liorations Boutons d'action Capacit\u00e9s sp\u00e9ciales et boost Changement d'\u00e9quipe Switch entre alli\u00e9/ennemi (debug)"},{"location":"dev/02-systeme/api/ui-system/#structure-de-lactionbar","title":"Structure de l'ActionBar","text":"<pre><code># Zones principales de l'ActionBar\nself.main_rect          # Zone principale\nself.gold_rect          # Zone d'affichage de l'or\nself.unit_info_rect     # Zone d'informations d'unit\u00e9\nself.buttons_rect       # Zone des boutons d'action\nself.shop_rect          # Zone de la boutique\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#unitinfo","title":"UnitInfo","text":"<p>Responsabilit\u00e9 : Encapsule les informations d'une unit\u00e9 pour l'affichage.</p> <pre><code>@dataclass\nclass UnitInfo:\n\"\"\"Informations d'unit\u00e9 pour l'ActionBar.\"\"\"\n\n    name: str                    # Nom de l'unit\u00e9\n    health: int                  # Points de vie actuels\n    max_health: int             # Points de vie maximum\n    attack: int                 # Points d'attaque\n    team: str                   # \u00c9quipe (\"Alli\u00e9\" ou \"Ennemi\")\n    unit_class: str             # Classe d'unit\u00e9\n    cooldown: float = 0.0       # Cooldown de capacit\u00e9 sp\u00e9ciale\n    max_cooldown: float = 0.0   # Cooldown maximum\n    has_special: bool = False   # A une capacit\u00e9 sp\u00e9ciale\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#unitedshop-boutique-integree","title":"UnitedShop (Boutique int\u00e9gr\u00e9e)","text":"<p>Fichier : <code>src/ui/boutique.py</code></p> <p>Responsabilit\u00e9 : Syst\u00e8me d'achat d'unit\u00e9s et d'am\u00e9liorations.</p> <pre><code>class UnitedShop:\n\"\"\"Boutique int\u00e9gr\u00e9e dans l'ActionBar.\"\"\"\n\n    def __init__(self, faction: ShopFaction):\n\"\"\"Initialise la boutique pour une faction.\"\"\"\n\n    def draw(self, screen: pygame.Surface, rect: pygame.Rect) -&gt; None:\n\"\"\"Dessine la boutique dans la zone donn\u00e9e.\"\"\"\n\n    def handle_click(self, pos: Tuple[int, int], rect: pygame.Rect) -&gt; Optional[dict]:\n\"\"\"G\u00e8re les clics dans la boutique.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#types-dachats-disponibles","title":"Types d'achats disponibles","text":"<p>La boutique est d\u00e9j\u00e0 con\u00e7u pour recevoir plusieurs cat\u00e9gories d'achats.</p> <pre><code>class ShopCategory(Enum):\n    UNITS = \"units\"          # Unit\u00e9s de combat\n</code></pre> <p>Unit\u00e9s disponibles :</p> <ul> <li>Scout (10 or) - Unit\u00e9 de base avec capacit\u00e9 de reconnaissance</li> <li>Maraudeur (20 or) - Tank avec bouclier de mana</li> <li>Druid (30 or) - Soigneur avec r\u00e9g\u00e9n\u00e9ration</li> <li>Architect (30 or) - Support avec boost de rechargement</li> <li>Leviathan (40 or) - Attaquant lourd avec double salve</li> </ul>"},{"location":"dev/02-systeme/api/ui-system/#systeme-de-couleurs","title":"Syst\u00e8me de couleurs","text":""},{"location":"dev/02-systeme/api/ui-system/#uicolors","title":"UIColors","text":"<p>Responsabilit\u00e9 : Palette de couleurs coh\u00e9rente pour toute l'interface.</p> <pre><code>class UIColors:\n    # Couleurs principales\n    BACKGROUND = (25, 25, 35, 220)     # Fond semi-transparent\n    BORDER = (60, 120, 180)            # Bordures\n\n    # Boutons\n    BUTTON_NORMAL = (45, 85, 125)      # \u00c9tat normal\n    BUTTON_HOVER = (65, 115, 165)      # Survol\n    BUTTON_PRESSED = (35, 65, 95)      # Press\u00e9\n    BUTTON_DISABLED = (40, 40, 50)     # D\u00e9sactiv\u00e9\n\n    # Boutons sp\u00e9ciaux\n    ATTACK_BUTTON = (180, 60, 60)      # Boutons d'attaque\n    DEFENSE_BUTTON = (60, 140, 60)     # Boutons de d\u00e9fense\n\n    # Ressources\n    GOLD = (255, 215, 0)               # Couleur de l'or\n    HEALTH_BAR = (220, 50, 50)         # Barres de vie\n    MANA_BAR = (50, 150, 220)          # Barres de mana\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#gestion-des-evenements","title":"Gestion des \u00e9v\u00e9nements","text":""},{"location":"dev/02-systeme/api/ui-system/#systeme-devenements-hierarchique","title":"Syst\u00e8me d'\u00e9v\u00e9nements hi\u00e9rarchique","text":"<pre><code>def handle_event(self, event: pygame.event.Event) -&gt; bool:\n\"\"\"G\u00e8re les \u00e9v\u00e9nements avec priorit\u00e9 hi\u00e9rarchique.\n\n    Ordre de priorit\u00e9 :\n    1. Boutique (si ouverte)\n    2. Boutons d'action\n    3. Zone d'informations d'unit\u00e9\n    4. Zone de l'or\n\n    Returns:\n        bool: True si l'\u00e9v\u00e9nement a \u00e9t\u00e9 consomm\u00e9\n    \"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#types-devenements-supportes","title":"Types d'\u00e9v\u00e9nements support\u00e9s","text":"\u00c9v\u00e9nement Action Zone <code>MOUSEBUTTONDOWN</code> Clic boutons, achat boutique Toute l'ActionBar <code>MOUSEMOTION</code> Survol boutons, tooltips Boutons <code>KEYDOWN</code> Raccourcis clavier (B pour boutique) Global"},{"location":"dev/02-systeme/api/ui-system/#callbacks-vers-le-moteur","title":"Callbacks vers le moteur","text":"<pre><code># Callbacks configur\u00e9s \u00e0 l'initialisation\nself.get_player_gold_callback: Callable[[], int]\nself.get_selected_units_callback: Callable[[], List[UnitInfo]]\nself.shop_purchase_callback: Callable[[str, int], bool]\nself.special_ability_callback: Callable[[], None]\nself.camp_change_callback: Callable[[int], None]\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#composants-ui-reutilisables","title":"Composants UI r\u00e9utilisables","text":""},{"location":"dev/02-systeme/api/ui-system/#button","title":"Button","text":"<p>Responsabilit\u00e9 : Bouton interactif g\u00e9n\u00e9rique.</p> <pre><code>class Button:\n\"\"\"Bouton UI r\u00e9utilisable.\"\"\"\n\n    def __init__(self, rect: pygame.Rect, text: str, callback: Callable):\n        self.rect = rect\n        self.text = text\n        self.callback = callback\n        self.hovered = False\n        self.pressed = False\n\n    def draw(self, screen: pygame.Surface) -&gt; None:\n\"\"\"Dessine le bouton avec \u00e9tat visuel.\"\"\"\n\n    def handle_event(self, event: pygame.event.Event) -&gt; bool:\n\"\"\"G\u00e8re les interactions du bouton.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#barres-de-progression","title":"Barres de progression","text":"<p>Impl\u00e9mentation : Les barres de vie et mana sont dessin\u00e9es directement dans l'ActionBar, pas via une classe d\u00e9di\u00e9e.</p> <pre><code># Dans ActionBar._draw_unit_info()\ndef _draw_unit_bars(self, surface, info_x, info_y):\n\"\"\"Dessine les barres de vie et mana de l'unit\u00e9 s\u00e9lectionn\u00e9e.\"\"\"\n\n    bar_width = 80\n    bar_height = 8\n\n    # Barre de vie\n    health_ratio = self.selected_unit.health / self.selected_unit.max_health\n    health_bg_rect = pygame.Rect(info_x + 5, info_y + 30, bar_width, bar_height)\n    health_rect = pygame.Rect(info_x + 5, info_y + 30, int(bar_width * health_ratio), bar_height)\n\n    pygame.draw.rect(surface, UIColors.HEALTH_BACKGROUND, health_bg_rect, border_radius=4)\n    pygame.draw.rect(surface, UIColors.HEALTH_BAR, health_rect, border_radius=4)\n    pygame.draw.rect(surface, UIColors.BORDER, health_bg_rect, 1, border_radius=4)\n\n    # Barre de mana (si applicable)\n    if self.selected_unit.max_mana &gt; 0:\n        mana_ratio = self.selected_unit.mana / self.selected_unit.max_mana\n        mana_bg_rect = pygame.Rect(info_x + 105, info_y + 30, bar_width, bar_height)\n        mana_rect = pygame.Rect(info_x + 105, info_y + 30, int(bar_width * mana_ratio), bar_height)\n\n        pygame.draw.rect(surface, UIColors.MANA_BACKGROUND, mana_bg_rect, border_radius=4)\n        pygame.draw.rect(surface, UIColors.MANA_BAR, mana_rect, border_radius=4)\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#modales-et-fenetres","title":"Modales et fen\u00eatres","text":""},{"location":"dev/02-systeme/api/ui-system/#exitconfirmationmodal","title":"ExitConfirmationModal","text":"<p>Fichier : <code>src/ui/exit_modal.py</code></p> <p>Responsabilit\u00e9 : Modale de confirmation de sortie du jeu.</p> <pre><code>class ExitConfirmationModal:\n\"\"\"G\u00e8re l'affichage et les interactions de la modale de sortie.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#fonctionnalites","title":"Fonctionnalit\u00e9s","text":"<ul> <li>Boutons disponibles : Rester, Quitter</li> <li>Utilisation : Confirm\u00e9e la volont\u00e9 de l'utilisateur de quitter le jeu</li> <li>Retour : Action s\u00e9lectionn\u00e9e (\"stay\" ou \"quit\")</li> </ul>"},{"location":"dev/02-systeme/api/ui-system/#interface-publique","title":"Interface publique","text":"<pre><code>def is_active(self) -&gt; bool:\n\"\"\"Indique si la modale est visible.\"\"\"\n\ndef open(self, surface: Optional[pygame.Surface] = None) -&gt; None:\n\"\"\"Affiche la modale.\"\"\"\n\ndef close(self) -&gt; None:\n\"\"\"Ferme la modale.\"\"\"\n\ndef handle_event(self, event: pygame.event.Event, surface: Optional[pygame.Surface] = None) -&gt; Optional[str]:\n\"\"\"Traite les \u00e9v\u00e9nements utilisateur.\"\"\"\n\ndef render(self, surface: pygame.Surface) -&gt; None:\n\"\"\"Dessine la modale.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#ingamemenumodal","title":"InGameMenuModal","text":"<p>Fichier : <code>src/ui/ingame_menu_modal.py</code></p> <p>Responsabilit\u00e9 : Menu modal principal accessible en jeu (touche \u00c9chap).</p> <pre><code>class InGameMenuModal:\n\"\"\"G\u00e8re l'affichage et les interactions de la modale de menu en jeu.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#options-du-menu","title":"Options du menu","text":"<ul> <li>Boutons disponibles :</li> <li>Rester : Ferme le menu et retourne au jeu</li> <li>Param\u00e8tres : Ouvre la fen\u00eatre d'options</li> <li>Quitter : Lance la proc\u00e9dure de confirmation de sortie</li> </ul>"},{"location":"dev/02-systeme/api/ui-system/#gestion-des-actions","title":"Gestion des actions","text":"<pre><code>def _on_action(self, action_id: str) -&gt; None:\n\"\"\"Callback appel\u00e9 lors du clic sur un bouton.\"\"\"\n</code></pre> <ul> <li>settings : Ouvre imm\u00e9diatement la fen\u00eatre d'options (<code>show_options_window()</code>)</li> <li>quit : Affiche <code>ExitConfirmationModal</code> avec boucle bloquante, puis poste \u00e9v\u00e9nement <code>confirmed_quit</code></li> </ul>"},{"location":"dev/02-systeme/api/ui-system/#architecture","title":"Architecture","text":"<ul> <li>Utilise <code>GenericModal</code> comme base</li> <li>Lazy loading pour \u00e9viter les d\u00e9pendances lourdes</li> <li>Boucle locale bloquante pour la confirmation de sortie</li> <li>Communication avec la boucle principale via \u00e9v\u00e9nements <code>USEREVENT</code></li> </ul>"},{"location":"dev/02-systeme/api/ui-system/#methodes-publiques","title":"M\u00e9thodes publiques","text":"<p>Identique \u00e0 <code>ExitConfirmationModal</code> - toutes les m\u00e9thodes d\u00e9l\u00e8guent \u00e0 l'instance <code>GenericModal</code>.</p>"},{"location":"dev/02-systeme/api/ui-system/#genericmodal-systeme-de-modale-generique","title":"GenericModal - Syst\u00e8me de modale g\u00e9n\u00e9rique","text":"<p>Fichier : <code>src/ui/generic_modal.py</code></p> <p>Responsabilit\u00e9 : Syst\u00e8me modal g\u00e9n\u00e9rique r\u00e9utilisable pour diff\u00e9rents types de dialogues.</p> <pre><code>class GenericModal:\n\"\"\"Syst\u00e8me modal g\u00e9n\u00e9rique r\u00e9utilisable pour diff\u00e9rents types de dialogues.\"\"\"\n\n    def __init__(self, title_key: str, message_key: str, \n                 buttons: List[Tuple[str, str]], \n                 callback: Optional[Callable[[str], None]] = None,\n                 vertical_layout: bool = False) -&gt; None:\n\"\"\"\n        Initialise un modal g\u00e9n\u00e9rique.\n\n        Args:\n            title_key: Cl\u00e9 de traduction pour le titre\n            message_key: Cl\u00e9 de traduction pour le message  \n            buttons: Liste de tuples (action_id, translation_key) pour les boutons\n            callback: Fonction appel\u00e9e avec l'action_id quand un bouton est cliqu\u00e9\n            vertical_layout: Si True, les boutons sont arrang\u00e9s verticalement\n        \"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#fonctionnalites-principales_1","title":"Fonctionnalit\u00e9s principales","text":"Fonctionnalit\u00e9 Description Personnalisable Titre, message et boutons configurables via traductions Layouts flexibles Support pour arrangements horizontal et vertical Taille dynamique Hauteur s'adapte au nombre de boutons en layout vertical Navigation clavier Fl\u00e8ches/WASD, Tab, Enter, Escape (adapt\u00e9 au layout) Navigation souris Hover et clic sur boutons Callbacks Fonction de rappel avec action s\u00e9lectionn\u00e9e Responsive Adaptation automatique \u00e0 la taille d'\u00e9cran \u00c9tat visuel Indication du bouton s\u00e9lectionn\u00e9/survol\u00e9"},{"location":"dev/02-systeme/api/ui-system/#methodes-principales","title":"M\u00e9thodes principales","text":"<pre><code>def open(self, surface: Optional[pygame.Surface] = None) -&gt; None:\n\"\"\"Affiche la modale et pr\u00e9pare la mise en page.\"\"\"\n\ndef close(self) -&gt; None:\n\"\"\"Ferme la modale.\"\"\"\n\ndef handle_event(self, event: pygame.event.Event, \n                surface: Optional[pygame.Surface] = None) -&gt; Optional[str]:\n\"\"\"\n    Traite un \u00e9v\u00e9nement utilisateur pendant que la modale est active.\n\n    Returns:\n        action_id du bouton cliqu\u00e9, ou None\n    \"\"\"\n\ndef render(self, surface: pygame.Surface) -&gt; None:\n\"\"\"Dessine la modale sur la surface fournie.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#controles-supportes","title":"Contr\u00f4les support\u00e9s","text":"Touche/Action Effet Fl\u00e8ches \u2190 \u2192 Naviguer entre les boutons A / D Naviguer entre les boutons Tab Bouton suivant (Shift+Tab pour pr\u00e9c\u00e9dent) Enter / Space Valider le bouton s\u00e9lectionn\u00e9 Escape Activer le premier bouton (par d\u00e9faut) Clic souris S\u00e9lectionner et activer un bouton Survol souris Mettre en surbrillance un bouton"},{"location":"dev/02-systeme/api/ui-system/#exemple-dutilisation","title":"Exemple d'utilisation","text":"<pre><code># Cr\u00e9er une modale de confirmation simple (layout horizontal)\nmodal = GenericModal(\n    title_key=\"confirm.title\",\n    message_key=\"confirm.delete_save\",\n    buttons=[\n        (\"cancel\", \"button.cancel\"),\n        (\"confirm\", \"button.confirm\")\n    ],\n    callback=lambda action: print(f\"Action: {action}\")\n)\n\n# Cr\u00e9er une modale avec plusieurs options (layout vertical)\ndebug_modal = GenericModal(\n    title_key=\"debug.modal.title\",\n    message_key=\"debug.modal.message\",\n    buttons=[\n        (\"give_gold\", \"debug.modal.give_gold\"),\n        (\"spawn_storm\", \"debug.modal.spawn_storm\"),\n        (\"spawn_chest\", \"debug.modal.spawn_chest\"),\n        (\"spawn_kraken\", \"debug.modal.spawn_kraken\"),\n        (\"clear_events\", \"debug.modal.clear_events\"),\n        (\"close\", \"debug.modal.close\")\n    ],\n    callback=self._handle_debug_action,\n    vertical_layout=True  # Arrangement vertical pour plus de boutons\n)\n\n# Afficher la modale\nmodal.open()\n\n# Dans la boucle de jeu\nfor event in pygame.event.get():\n    if modal.is_active():\n        result = modal.handle_event(event)\n        if result == \"confirm\":\n            # Effectuer l'action de confirmation\n            delete_save_file()\n        elif result == \"cancel\":\n            # Annuler\n            pass\n\n# Rendu\nmodal.render(screen)\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#utilisation-pour-le-mode-debug","title":"Utilisation pour le mode debug","text":"<p>Le <code>GenericModal</code> peut \u00eatre utilis\u00e9 pour cr\u00e9er des interfaces de debug :</p> <pre><code># Modale de debug avec options\ndebug_modal = GenericModal(\n    title_key=\"debug.modal.title\",\n    message_key=\"debug.modal.message\",\n    buttons=[\n        (\"give_gold\", \"debug.action.give_gold\"),\n        (\"close\", \"button.close\")\n    ],\n    callback=self._handle_debug_action\n)\n\ndef _handle_debug_action(self, action: str):\n\"\"\"G\u00e8re les actions de debug.\"\"\"\n    if action == \"give_gold\":\n        self._give_gold(1000)\n    elif action == \"heal_all\":\n        self._heal_all_units()\n    elif action == \"spawn_unit\":\n        self._spawn_test_unit()\n</code></pre> <p>\ud83d\udca1 Note : Le <code>GenericModal</code> est particuli\u00e8rement utile pour cr\u00e9er rapidement des interfaces de debug sans dupliquer le code UI. Voir Mode Debug pour plus de d\u00e9tails.</p>"},{"location":"dev/02-systeme/api/ui-system/#systeme-de-modales-avance","title":"Syst\u00e8me de modales avanc\u00e9","text":"<p>Fichier : <code>src/functions/afficherModale.py</code></p> <p>Responsabilit\u00e9 : Syst\u00e8me complet d'affichage de modales avec support Markdown et m\u00e9dias.</p> <pre><code>def afficher_modale(titre: str, md_path: str, bg_original=None, select_sound=None):\n\"\"\"Affiche une fen\u00eatre modale avec contenu Markdown enrichi.\n\n    Args:\n        titre: Titre de la modale\n        md_path: Chemin vers le fichier Markdown \u00e0 afficher\n        bg_original: Image de fond originale (optionnel)\n        select_sound: Son de s\u00e9lection (optionnel)\n\n    Fonctionnalit\u00e9s:\n        - Support Markdown (titres, formatage, images)\n        - Images statiques (PNG, JPG) et GIF anim\u00e9s\n        - D\u00e9filement avec scrollbar interactive\n        - Redimensionnement responsive\n        - Cache des ressources pour performance\n    \"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#fonctionnalites-du-systeme-de-modales","title":"Fonctionnalit\u00e9s du syst\u00e8me de modales","text":"Fonctionnalit\u00e9 Description Support Markdown Parsing complet avec titres, gras, italique M\u00e9dias enrichis Images statiques et GIF anim\u00e9s D\u00e9filement interactif Scrollbar avec drag &amp; drop Responsive design Adaptation automatique \u00e0 la taille d'\u00e9cran Cache intelligent Optimisation m\u00e9moire des polices et images"},{"location":"dev/02-systeme/api/ui-system/#classes-internes-specialisees","title":"Classes internes sp\u00e9cialis\u00e9es","text":"<pre><code>class GifAnimation:\n\"\"\"Gestionnaire d'animations GIF optimis\u00e9.\"\"\"\n\n    def __init__(self, path: str, max_width: int = 800):\n        self.frames = []           # Frames pygame.Surface\n        self.durations = []        # Dur\u00e9es en millisecondes\n        self.current_frame = 0     # Frame actuelle\n        self.last_update = 0       # Timestamp derni\u00e8re MAJ\n\n    def get_current_frame(self) -&gt; pygame.Surface:\n\"\"\"Retourne la frame actuelle avec gestion temporelle.\"\"\"\n\n    def get_size(self) -&gt; Tuple[int, int]:\n\"\"\"Retourne les dimensions de l'animation.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#parsing-markdown-avance","title":"Parsing Markdown avanc\u00e9","text":"<pre><code>def parse_markdown(lines: List[str]) -&gt; List[Tuple]:\n\"\"\"Parse le contenu Markdown en \u00e9l\u00e9ments structur\u00e9s.\n\n    Support:\n        - Titres (# ## ### ####) avec couleurs diff\u00e9renci\u00e9es\n        - Formatage (**gras**, *italique*)\n        - Images (![alt](path)) avec redimensionnement automatique\n        - D\u00e9tection automatique des GIF vs images statiques\n\n    Returns:\n        List[Tuple]: \u00c9l\u00e9ments pars\u00e9s (type, contenu, style)\n    \"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#menu-doptions-complet","title":"Menu d'options complet","text":"<p>Fichier : <code>src/functions/optionsWindow.py</code></p> <p>Responsabilit\u00e9 : Interface compl\u00e8te de configuration du jeu.</p> <pre><code>class OptionsWindow:\n\"\"\"Fen\u00eatre modale des options avec interface moderne.\"\"\"\n\n    def __init__(self):\n\"\"\"Initialise la fen\u00eatre d'options responsive.\"\"\"\n\n    def run(self) -&gt; None:\n\"\"\"Lance la boucle d'interface d'options.\"\"\"\n\n    def _create_components(self, content_surface: pygame.Surface, y_pos: int) -&gt; int:\n\"\"\"Cr\u00e9e tous les composants UI sectionn\u00e9s.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#sections-de-configuration","title":"Sections de configuration","text":"Section Fonctionnalit\u00e9s Composants Affichage Mode fen\u00eatr\u00e9/plein \u00e9cran RadioButton R\u00e9solution R\u00e9solutions pr\u00e9d\u00e9finies Liste de choix Audio Volume musique Slider interactif Langue Fran\u00e7ais/Anglais Boutons de langue Contr\u00f4les Raccourcis clavier, sensibilit\u00e9 cam\u00e9ra KeyBinding, Slider Informations Aide et conseils Texte informatif"},{"location":"dev/02-systeme/api/ui-system/#gestion-des-raccourcis-clavier","title":"Gestion des raccourcis clavier","text":"<pre><code>class OptionsState:\n\"\"\"\u00c9tat de configuration avec persistance.\"\"\"\n\n    key_bindings: Dict[str, List[str]]  # Actions -&gt; Combinaisons\n\n    @classmethod\n    def from_config(cls) -&gt; 'OptionsState':\n\"\"\"Charge l'\u00e9tat depuis la configuration.\"\"\"\n</code></pre> <p>Groupes de raccourcis support\u00e9s :</p> <pre><code>KEY_BINDING_GROUPS = [\n    (\"options.binding_group.unit\", BASIC_BINDINGS),      # Mouvement, attaque unit\u00e9s\n    (\"options.binding_group.camera\", CAMERA_BINDINGS),   # Contr\u00f4les cam\u00e9ra\n    (\"options.binding_group.selection\", SELECTION_BINDINGS), # S\u00e9lection d'unit\u00e9s\n    (\"options.binding_group.system\", SYSTEM_BINDINGS),   # Syst\u00e8me (pause, aide)\n]\n\n# Exemples d'actions configurables\nBASIC_BINDINGS = [\n    (ACTION_UNIT_MOVE_FORWARD, \"options.binding.unit_move_forward\"),\n    (ACTION_UNIT_ATTACK, \"options.binding.unit_attack\"),\n    (ACTION_UNIT_SPECIAL, \"options.binding.unit_special\"),\n]\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#composants-ui-reutilisables-avances","title":"Composants UI r\u00e9utilisables avanc\u00e9s","text":"<pre><code># Dans src/ui/settings_ui_component.py\n\nclass Slider(UIComponent):\n\"\"\"Slider interactif avec valeurs min/max.\"\"\"\n\n    def __init__(self, rect: pygame.Rect, min_value: float, max_value: float, \n                 initial_value: float, callback: Callable[[float], None]):\n        self.value = initial_value\n        self.dragging = False\n        self.callback = callback\n\nclass KeyBindingRow(UIComponent):\n\"\"\"Ligne de configuration de raccourci clavier.\"\"\"\n\n    def __init__(self, action: str, current_bindings: List[str], \n                 on_change: Callable[[str, str], None]):\n        self.action = action\n        self.bindings = current_bindings\n        self.capturing = False  # Mode capture de touches\n\nclass RadioButton(UIComponent):\n\"\"\"Bouton radio pour choix exclusifs.\"\"\"\n\n    def __init__(self, rect: pygame.Rect, text: str, group: str, \n                 selected: bool, callback: Callable[[str], None]):\n        self.group = group\n        self.selected = selected\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#responsive-design","title":"Responsive Design","text":""},{"location":"dev/02-systeme/api/ui-system/#adaptation-a-la-taille-decran","title":"Adaptation \u00e0 la taille d'\u00e9cran","text":"<pre><code>def resize(self, screen_width: int, screen_height: int) -&gt; None:\n\"\"\"Adapte l'ActionBar \u00e0 la nouvelle taille d'\u00e9cran.\"\"\"\n\n    # Calcul des nouvelles dimensions\n    self.height = min(120, screen_height // 6)\n    self.width = screen_width\n\n    # Repositionnement des zones\n    self._calculate_zones()\n\n    # Redimensionnement de la boutique\n    if self.shop:\n        self.shop.resize(self.shop_rect)\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#zones-responsives","title":"Zones responsives","text":"<pre><code>def _calculate_zones(self) -&gt; None:\n\"\"\"Calcule les positions des zones selon la taille d'\u00e9cran.\"\"\"\n\n    # Zone principale (bas de l'\u00e9cran)\n    self.main_rect = pygame.Rect(0, self.screen_height - self.height, \n                                self.screen_width, self.height)\n\n    # R\u00e9partition proportionnelle\n    zone_width = self.screen_width // 4\n    self.gold_rect = pygame.Rect(0, self.main_rect.y, zone_width, self.height)\n    self.unit_info_rect = pygame.Rect(zone_width, self.main_rect.y, \n                                     zone_width * 2, self.height)\n    self.buttons_rect = pygame.Rect(zone_width * 3, self.main_rect.y, \n                                   zone_width, self.height)\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#integration-avec-le-systeme-ecs","title":"Int\u00e9gration avec le syst\u00e8me ECS","text":""},{"location":"dev/02-systeme/api/ui-system/#recuperation-des-donnees-dunite","title":"R\u00e9cup\u00e9ration des donn\u00e9es d'unit\u00e9","text":"<pre><code>def _get_selected_units_info(self) -&gt; List[UnitInfo]:\n\"\"\"R\u00e9cup\u00e8re les informations des unit\u00e9s s\u00e9lectionn\u00e9es via ECS.\"\"\"\n\n    selected_units = []\n    for entity, (selected, pos, health, team) in esper.get_components(\n        PlayerSelectedComponent, PositionComponent, HealthComponent, TeamComponent\n    ):\n        # Construire UnitInfo depuis les composants ECS\n        unit_info = self._build_unit_info(entity)\n        selected_units.append(unit_info)\n\n    return selected_units\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#callbacks-vers-les-systemes","title":"Callbacks vers les syst\u00e8mes","text":"<pre><code>def _purchase_unit(self, unit_type: str, cost: int) -&gt; bool:\n\"\"\"Effectue un achat via le callback du moteur.\"\"\"\n\n    if self.shop_purchase_callback:\n        return self.shop_purchase_callback(unit_type, cost)\n    return False\n\ndef _trigger_special_ability(self) -&gt; None:\n\"\"\"D\u00e9clenche la capacit\u00e9 sp\u00e9ciale via callback.\"\"\"\n\n    if self.special_ability_callback:\n        self.special_ability_callback()\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#menu-principal-et-navigation","title":"Menu principal et navigation","text":""},{"location":"dev/02-systeme/api/ui-system/#systeme-de-menus","title":"Syst\u00e8me de menus","text":"<p>Responsabilit\u00e9 : Navigation principale et sous-menus du jeu.</p> <p>Le syst\u00e8me de menus utilise une architecture modulaire avec des \u00e9tats de navigation :</p> <pre><code>class MenuState(Enum):\n    MAIN_MENU = \"main\"\n    OPTIONS = \"options\" \n    HELP = \"help\"\n    CREDITS = \"credits\"\n    IN_GAME = \"game\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#integration-des-modales-dans-le-jeu","title":"Int\u00e9gration des modales dans le jeu","text":"<pre><code>def show_help_modal():\n\"\"\"Affiche l'aide via le syst\u00e8me de modales.\"\"\"\n    afficher_modale(\n        titre=\"Aide - Galad Islands\",\n        md_path=\"assets/docs/help.md\",\n        bg_original=background_image,\n        select_sound=ui_sound\n    )\n\ndef show_credits_modal():\n\"\"\"Affiche les cr\u00e9dits du jeu.\"\"\"\n    afficher_modale(\n        titre=\"Cr\u00e9dits\",\n        md_path=\"assets/docs/credits.md\"\n    )\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#fenetre-doptions-interface-publique","title":"Fen\u00eatre d'options - Interface publique","text":"<pre><code>from src.functions.optionsWindow import show_options_window\n\ndef handle_options_request():\n\"\"\"Ouvre la fen\u00eatre d'options depuis n'importe o\u00f9.\"\"\"\n    show_options_window()  # Interface simple et unifi\u00e9e\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#persistance-des-configurations","title":"Persistance des configurations","text":"<pre><code># Les options sont automatiquement sauvegard\u00e9es\ndef _on_volume_changed(self, volume: float) -&gt; None:\n\"\"\"Callback de changement de volume avec persistance.\"\"\"\n    self.state.music_volume = volume\n    set_audio_volume(volume)  # Application imm\u00e9diate\n    config_manager.save()     # Sauvegarde automatique\n\ndef _on_language_changed(self, lang_code: str) -&gt; None:\n\"\"\"Changement de langue avec rechargement.\"\"\"\n    set_language(lang_code)\n    self._refresh_state()  # Recharge l'interface\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#systeme-de-carte-et-vue-du-monde","title":"Syst\u00e8me de carte et vue du monde","text":""},{"location":"dev/02-systeme/api/ui-system/#rendu-de-la-carte-principale","title":"Rendu de la carte principale","text":"<p>Fichier : <code>src/components/globals/mapComponent.py</code></p> <p>Responsabilit\u00e9 : Affichage optimis\u00e9 de la carte de jeu avec syst\u00e8me de cam\u00e9ra.</p> <pre><code>def afficher_grille(window: pygame.Surface, grid: List[List[int]], \n                   images: Dict[str, pygame.Surface], camera: Camera) -&gt; None:\n\"\"\"Affiche la grille de jeu avec optimisation du viewport.\n\n    Fonctionnalit\u00e9s:\n        - Culling intelligent (ne dessine que les tuiles visibles)\n        - Syst\u00e8me de cache pour les images redimensionn\u00e9es\n        - Support du zoom dynamique avec limites de s\u00e9curit\u00e9\n        - Rendu par couches (mer \u2192 \u00e9l\u00e9ments \u2192 bases)\n    \"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#elements-de-la-carte","title":"\u00c9l\u00e9ments de la carte","text":"Type de terrain Description Taille Comportement SEA Fond marin navigable 1x1 tile Couche de base GENERIC_ISLAND \u00celes neutres 1x1 tile Obstacle de navigation ALLY_BASE Base du joueur 4x4 tiles Zone de spawn alli\u00e9 ENEMY_BASE Base ennemie 4x4 tiles Zone de spawn ennemi MINE Mines d'or 1x1 tile Ressource extractible CLOUD Nuages d\u00e9coratifs 1x1 tile \u00c9l\u00e9ment visuel"},{"location":"dev/02-systeme/api/ui-system/#generation-procedurale","title":"G\u00e9n\u00e9ration proc\u00e9durale","text":"<pre><code>def init_game_map(screen_width: int, screen_height: int) -&gt; Dict:\n\"\"\"Initialise une carte compl\u00e8te avec \u00e9l\u00e9ments al\u00e9atoires.\n\n    Processus:\n        1. Cr\u00e9ation grille vide (mer)\n        2. Placement des bases (positions fixes)\n        3. G\u00e9n\u00e9ration al\u00e9atoire des \u00eeles (GENERIC_ISLAND_RATE)\n        4. Placement des mines (MINE_RATE) \n        5. Ajout des nuages d\u00e9coratifs (CLOUD_RATE)\n\n    Returns:\n        dict: {grid, images, camera} - \u00c9tat complet de la carte\n    \"\"\"\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#systeme-de-camera-avance","title":"Syst\u00e8me de cam\u00e9ra avanc\u00e9","text":"<p>Fichier : <code>src/components/globals/cameraComponent.py</code></p> <p>Responsabilit\u00e9 : Gestion du viewport, zoom et d\u00e9placements fluides.</p> <pre><code>class Camera:\n\"\"\"Cam\u00e9ra 2D avec zoom et contraintes de mouvement.\"\"\"\n\n    def __init__(self, screen_width: int, screen_height: int):\n        self.x = 0.0                    # Position monde X\n        self.y = 0.0                    # Position monde Y\n        self.zoom = 1.0                 # Facteur de zoom\n        self.screen_width = screen_width\n        self.screen_height = screen_height\n        self.world_width = MAP_WIDTH * TILE_SIZE\n        self.world_height = MAP_HEIGHT * TILE_SIZE\n\n    def world_to_screen(self, world_x: float, world_y: float) -&gt; Tuple[int, int]:\n\"\"\"Convertit coordonn\u00e9es monde vers \u00e9cran.\"\"\"\n        screen_x = int((world_x - self.x) * self.zoom)\n        screen_y = int((world_y - self.y) * self.zoom)\n        return screen_x, screen_y\n\n    def get_visible_tiles(self) -&gt; Tuple[int, int, int, int]:\n\"\"\"Retourne les indices des tuiles visibles (culling).\"\"\"\n        start_x = max(0, int(self.x // TILE_SIZE) - 1)\n        start_y = max(0, int(self.y // TILE_SIZE) - 1)\n        end_x = min(MAP_WIDTH, int((self.x + self.screen_width/self.zoom) // TILE_SIZE) + 2)\n        end_y = min(MAP_HEIGHT, int((self.y + self.screen_height/self.zoom) // TILE_SIZE) + 2)\n        return start_x, start_y, end_x, end_y\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#controles-de-camera","title":"Contr\u00f4les de cam\u00e9ra","text":"<pre><code># Configuration des contr\u00f4les (dans settings)\nCAMERA_SPEED = 500          # Vitesse de d\u00e9placement (pixels/seconde)\nZOOM_MIN = 0.5             # Zoom minimum (vue \u00e9loign\u00e9e)  \nZOOM_MAX = 2.0             # Zoom maximum (vue rapproch\u00e9e)\nZOOM_SPEED = 0.1           # Vitesse de zoom\n\n# Raccourcis clavier standards\nACTION_CAMERA_MOVE_LEFT = \"camera_move_left\"      # Fl\u00e8ches ou WASD\nACTION_CAMERA_MOVE_RIGHT = \"camera_move_right\"\nACTION_CAMERA_MOVE_UP = \"camera_move_up\"\nACTION_CAMERA_MOVE_DOWN = \"camera_move_down\"\nACTION_CAMERA_FAST_MODIFIER = \"camera_fast_modifier\"  # Shift = d\u00e9placement rapide\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#optimisations-de-rendu","title":"Optimisations de rendu","text":""},{"location":"dev/02-systeme/api/ui-system/#cache-intelligent-des-images","title":"Cache intelligent des images","text":"<pre><code># Dans afficher_grille() - cache automatique des images redimensionn\u00e9es\nif not hasattr(afficher_grille, \"_sea_cache\"):\n    initial_tile_size = int(TILE_SIZE * camera.zoom)\n    initial_tile_size = max(1, min(initial_tile_size, 2048))  # Limites de s\u00e9curit\u00e9\n    initial_image = pygame.transform.scale(images['sea'], (initial_tile_size, initial_tile_size))\n    afficher_grille._sea_cache = {\n        \"zoom\": camera.zoom, \n        \"image\": initial_image, \n        \"size\": initial_tile_size\n    }\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#viewport-culling","title":"Viewport culling","text":"<pre><code>def draw_element(element_image: pygame.Surface, grid_x: int, grid_y: int, element_size: int = 1):\n\"\"\"Dessine un \u00e9l\u00e9ment seulement s'il est visible \u00e0 l'\u00e9cran.\"\"\"\n\n    world_x = grid_x * TILE_SIZE\n    world_y = grid_y * TILE_SIZE\n    screen_x, screen_y = camera.world_to_screen(world_x, world_y)\n\n    display_size = int(element_size * TILE_SIZE * camera.zoom)\n    display_size = max(1, min(display_size, 2048))  # \u00c9viter les crashes\n\n    # Test de visibilit\u00e9 avant rendu\n    if (screen_x + display_size &gt;= 0 and screen_x &lt;= window.get_width() and \n        screen_y + display_size &gt;= 0 and screen_y &lt;= window.get_height()):\n\n        element_scaled = pygame.transform.scale(element_image, (display_size, display_size))\n        window.blit(element_scaled, (screen_x, screen_y))\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#integration-ui-carte","title":"Int\u00e9gration UI-Carte","text":""},{"location":"dev/02-systeme/api/ui-system/#barres-de-vie-des-unites","title":"Barres de vie des unit\u00e9s","text":"<p>Les barres de vie sont affich\u00e9es directement sur la carte, au-dessus des unit\u00e9s :</p> <pre><code># Dans GameRenderer._draw_health_bar()\ndef _draw_health_bar(self, screen: pygame.Surface, x: int, y: int, \n                    health: HealthComponent, sprite_width: int, sprite_height: int):\n\"\"\"Dessine une barre de vie au-dessus d'une unit\u00e9 sur la carte.\"\"\"\n\n    bar_width = max(30, sprite_width)\n    bar_height = 6\n    bar_x = x + (sprite_width - bar_width) // 2\n    bar_y = y - bar_height - 5  # Au-dessus de l'unit\u00e9\n\n    # Couleur selon pourcentage de vie\n    health_ratio = health.health / health.max_health\n    if health_ratio &gt; 0.6:\n        color = (100, 200, 100)  # Vert\n    elif health_ratio &gt; 0.3:\n        color = (255, 255, 100)  # Jaune\n    else:\n        color = (255, 100, 100)  # Rouge\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#selection-dunites-sur-la-carte","title":"S\u00e9lection d'unit\u00e9s sur la carte","text":"<pre><code>def handle_mouse_selection(self, mouse_pos: Tuple[int, int], camera: Camera) -&gt; bool:\n\"\"\"Convertit clic \u00e9cran vers s\u00e9lection d'unit\u00e9 sur la carte.\"\"\"\n\n    # Conversion \u00e9cran \u2192 monde\n    world_x = mouse_pos[0] / camera.zoom + camera.x\n    world_y = mouse_pos[1] / camera.zoom + camera.y\n\n    # Recherche d'entit\u00e9 \u00e0 cette position\n    for entity, (pos, sprite) in esper.get_components(PositionComponent, SpriteComponent):\n        if (abs(pos.x - world_x) &lt; TILE_SIZE//2 and \n            abs(pos.y - world_y) &lt; TILE_SIZE//2):\n            # S\u00e9lectionner cette unit\u00e9\n            return self._select_unit(entity)\n\n    return False\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#architecture-globale-du-systeme-ui","title":"Architecture globale du syst\u00e8me UI","text":""},{"location":"dev/02-systeme/api/ui-system/#hierarchie-des-composants","title":"Hi\u00e9rarchie des composants","text":"<pre><code>Interface de jeu compl\u00e8te\n\u251c\u2500\u2500 Vue principale du monde (carte)\n\u2502   \u251c\u2500\u2500 Rendu de la grille de jeu (terrain, \u00eeles, bases)\n\u2502   \u251c\u2500\u2500 Entit\u00e9s en temps r\u00e9el (unit\u00e9s, projectiles)\n\u2502   \u251c\u2500\u2500 Syst\u00e8me de cam\u00e9ra avec zoom/d\u00e9placement\n\u2502   \u2514\u2500\u2500 Barres de vie au-dessus des unit\u00e9s\n\u251c\u2500\u2500 Interface utilisateur (overlay)\n\u2502   \u251c\u2500\u2500 ActionBar (barre d'action en bas)\n\u2502   \u2502   \u251c\u2500\u2500 Informations unit\u00e9 s\u00e9lectionn\u00e9e\n\u2502   \u2502   \u251c\u2500\u2500 Boutique int\u00e9gr\u00e9e\n\u2502   \u2502   \u2514\u2500\u2500 Boutons d'action/capacit\u00e9s\n\u2502   \u2514\u2500\u2500 Indicateurs de ressources (or)\n\u251c\u2500\u2500 Modales syst\u00e8me (par-dessus tout)\n\u2502   \u251c\u2500\u2500 Aide (afficherModale + Markdown)\n\u2502   \u251c\u2500\u2500 Options (OptionsWindow compl\u00e8te)\n\u2502   \u251c\u2500\u2500 Confirmation sortie\n\u2502   \u2514\u2500\u2500 Messages d'information\n\u2514\u2500\u2500 Overlays temporaires\n    \u251c\u2500\u2500 Notifications de jeu\n    \u251c\u2500\u2500 Messages de combat\n    \u2514\u2500\u2500 Indicateurs de s\u00e9lection\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#gestion-des-etats-ui","title":"Gestion des \u00e9tats UI","text":"<pre><code>class UIManager:\n\"\"\"Gestionnaire central des interfaces utilisateur.\"\"\"\n\n    def __init__(self):\n        self.current_modal = None\n        self.action_bar = None\n        self.overlay_messages = []\n\n    def handle_event(self, event: pygame.event.Event) -&gt; bool:\n\"\"\"Gestion hi\u00e9rarchique des \u00e9v\u00e9nements UI.\"\"\"\n\n        # Priorit\u00e9 1: Modales actives\n        if self.current_modal and self.current_modal.handle_event(event):\n            return True\n\n        # Priorit\u00e9 2: ActionBar (si en jeu)\n        if self.action_bar and self.action_bar.handle_event(event):\n            return True\n\n        # Priorit\u00e9 3: Interface de fond\n        return False\n\n    def render(self, screen: pygame.Surface) -&gt; None:\n\"\"\"Rendu par couches.\"\"\"\n\n        # Couche 1: ActionBar\n        if self.action_bar:\n            self.action_bar.draw(screen)\n\n        # Couche 2: Overlays et messages\n        for message in self.overlay_messages:\n            message.render(screen)\n\n        # Couche 3: Modales (par-dessus tout)\n        if self.current_modal:\n            self.current_modal.render(screen)\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#exemples-dutilisation","title":"Exemples d'utilisation","text":""},{"location":"dev/02-systeme/api/ui-system/#creation-dune-actionbar","title":"Cr\u00e9ation d'une ActionBar","text":"<pre><code>def create_action_bar():\n\"\"\"Cr\u00e9e une ActionBar avec tous les callbacks.\"\"\"\n\n    action_bar = ActionBar(\n        get_player_gold_callback=lambda: get_player_gold(),\n        get_selected_units_callback=lambda: get_selected_units_info(),\n        shop_purchase_callback=purchase_unit,\n        special_ability_callback=trigger_ability,\n        camp_change_callback=change_team\n    )\n\n    return action_bar\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#boucle-de-rendu-ui","title":"Boucle de rendu UI","text":"<pre><code>def render_ui(screen: pygame.Surface, action_bar: ActionBar):\n\"\"\"Rend l'interface utilisateur.\"\"\"\n\n    # Rendu de l'ActionBar\n    action_bar.draw(screen)\n\n    # Rendu des modales actives\n    if exit_modal.is_active():\n        exit_modal.render(screen)\n</code></pre>"},{"location":"dev/02-systeme/api/ui-system/#gestion-devenements-ui","title":"Gestion d'\u00e9v\u00e9nements UI","text":"<pre><code>def handle_ui_events(event: pygame.event.Event, action_bar: ActionBar) -&gt; bool:\n\"\"\"G\u00e8re les \u00e9v\u00e9nements UI avec priorit\u00e9.\"\"\"\n\n    # L'ActionBar a la priorit\u00e9\n    if action_bar.handle_event(event):\n        return True\n\n    # Autres \u00e9l\u00e9ments UI...\n    return False\n</code></pre> <p>Le syst\u00e8me UI offre une interface moderne et responsive avec une int\u00e9gration \u00e9troite au syst\u00e8me ECS pour un affichage en temps r\u00e9el des donn\u00e9es de jeu.</p>"},{"location":"dev/02-systeme/api/unit-system/","title":"API - Syst\u00e8me d'unit\u00e9s","text":"<p>\ud83d\udea7 Section en cours de r\u00e9daction</p> <p>Cette page d\u00e9crit le mod\u00e8le d'entit\u00e9s pour les unit\u00e9s, l'API des capacit\u00e9s sp\u00e9ciales, le flux de d\u00e9g\u00e2ts (collision \u2192 dispatch \u2192 application) et les bonnes pratiques de d\u00e9bogage et de test.</p>"},{"location":"dev/02-systeme/api/unit-system/#principes-generaux","title":"\ud83e\udde9 Principes g\u00e9n\u00e9raux","text":"<ul> <li> <p>Architecture : ECS (Esper-like)</p> </li> <li> <p>entit\u00e9 = id num\u00e9rique (int)</p> </li> <li>composants = dataclasses attach\u00e9es via <code>esper.add_component(entity, Component(...))</code></li> <li> <p>processeurs = classes h\u00e9ritant de <code>esper.Processor</code> et ex\u00e9cut\u00e9es via <code>es.process()</code></p> </li> <li> <p>Composants clefs pour une unit\u00e9</p> </li> <li> <p><code>PositionComponent</code> : { x, y, direction }</p> </li> <li><code>SpriteComponent</code> : rendu (image, taille, surface)</li> <li><code>TeamComponent</code> : { team_id }</li> <li><code>VelocityComponent</code> : { currentSpeed, terrain_modifier, ... }</li> <li><code>RadiusComponent</code> : { bullet_cooldown, ... }</li> <li><code>AttackComponent</code> : { hitPoints }</li> <li><code>HealthComponent</code> : { currentHealth, maxHealth }</li> <li><code>CanCollideComponent</code> : drapeau de collision</li> <li><code>Spe*</code> : composants de capacit\u00e9s sp\u00e9ciales (SpeScout, SpeMaraudeur, ...)</li> </ul> <p>Vous pouvez en savoir plus sur les capacit\u00e9s sp\u00e9ciales dans la documentation d\u00e9di\u00e9e.</p>"},{"location":"dev/02-systeme/api/unit-system/#factory-creation-des-unites","title":"\u2699\ufe0f Factory \u2014 cr\u00e9ation des unit\u00e9s","text":"<p>La <code>UnitFactory</code> est le point central pour la cr\u00e9ation des entit\u00e9s d'unit\u00e9s. Elle garantit que chaque unit\u00e9 est instanci\u00e9e avec le bon ensemble de composants en fonction de son type.</p> <ul> <li> <p>Fonction : <code>UnitFactory(unit_type: UnitType, enemy: bool, pos: PositionComponent)</code></p> </li> <li> <p>Comportement : Instancie l'entit\u00e9 et lui attache les composants pertinents (sant\u00e9, attaque, sprite, \u00e9quipe, <code>CanCollide</code>, <code>SpeXxx</code> si applicable). La factory lit les statistiques des unit\u00e9s (PV, d\u00e9g\u00e2ts, vitesse) depuis <code>src/constants/gameplay.py</code>.</p> </li> <li> <p>Exemple : <code>UnitType.MARAUDER</code> \u2192 ajoute <code>SpeMaraudeur()</code> lors de la cr\u00e9ation.</p> </li> </ul> <pre><code>def UnitFactory(unit: UnitKey, enemy: bool, pos: PositionComponent):\n\"\"\"Cr\u00e9e une entit\u00e9 compl\u00e8te avec tous ses composants.\"\"\"\n    entity = esper.create_entity()\n\n    # Composants de base\n    esper.add_component(entity, pos)\n    esper.add_component(entity, TeamComponent(Team.ENEMY if enemy else Team.ALLY))\n\n    # Composants sp\u00e9cifiques selon le type d'unit\u00e9\n    if unit == UnitKey.ARCHITECT:\n        esper.add_component(entity, SpeArchitect(radius=ARCHITECT_RADIUS))\n        esper.add_component(entity, HealthComponent(100, 100))\n        esper.add_component(entity, AttackComponent(25))\n\n    return entity\n</code></pre>"},{"location":"dev/02-systeme/api/unit-system/#capacites-speciales-contrat-api","title":"\u2728 Capacit\u00e9s sp\u00e9ciales \u2014 contrat &amp; API","text":"<p>Chaque capacit\u00e9 sp\u00e9ciale est encapsul\u00e9e dans un composant <code>SpeXxx</code>. Le code (GameEngine/UI/processors) attend une API l\u00e9g\u00e8re et uniforme.</p> <p>Voir la documentation d\u00e9taill\u00e9e des capacit\u00e9s : Syst\u00e8me de capacit\u00e9s sp\u00e9ciales</p>"},{"location":"dev/02-systeme/api/unit-system/#contrat-recommande","title":"Contrat recommand\u00e9","text":"<ul> <li> <p>Attributs (selon capacit\u00e9)</p> </li> <li> <p><code>is_active: bool</code></p> </li> <li><code>duration: float</code></li> <li><code>timer: float</code></li> <li><code>cooldown: float</code></li> <li> <p><code>cooldown_timer: float</code></p> </li> <li> <p>M\u00e9thodes conseill\u00e9es</p> </li> <li> <p><code>can_activate()</code> -&gt; bool</p> </li> <li><code>activate()</code> -&gt; bool</li> <li><code>update(dt)</code></li> <li>\u00e9ventuelles m\u00e9thodes sp\u00e9cifiques (ex : <code>apply_damage_reduction(damage)</code>, <code>is_invincible()</code>)</li> </ul>"},{"location":"dev/02-systeme/api/unit-system/#implementations-courantes","title":"Implementations courantes","text":"<ul> <li><code>SpeScout</code> : invincibilit\u00e9 temporaire (<code>is_invincible()</code>)</li> <li><code>SpeMaraudeur</code> : bouclier qui r\u00e9duit les d\u00e9g\u00e2ts (<code>apply_damage_reduction</code>, <code>is_shielded()</code>)</li> <li><code>SpeLeviathan</code>, <code>SpeDruid</code>, <code>SpeArchitect</code> : autres comportements (voir composants respectifs)</li> </ul>"},{"location":"dev/02-systeme/api/unit-system/#cycle-de-mise-a-jour","title":"\ud83d\udd01 Cycle de mise \u00e0 jour","text":"<ul> <li><code>CapacitiesSpecialesProcessor.process(dt)</code> appelle <code>update(dt)</code> sur chaque composant <code>Spe*</code>.</li> <li>L'UI (ActionBar) lit <code>cooldown_timer</code> pour afficher le cooldown via <code>GameEngine._build_unit_info</code> / <code>_update_unit_info</code>.</li> </ul>"},{"location":"dev/02-systeme/api/unit-system/#chaine-de-degats-collision-application","title":"\ud83d\udca5 Cha\u00eene de d\u00e9g\u00e2ts (collision \u2192 application)","text":"<p>Le syst\u00e8me de combat est pilot\u00e9 par les \u00e9v\u00e9nements, \u00e0 partir de la d\u00e9tection de collision.</p> <ol> <li><code>CollisionProcessor</code> : D\u00e9tecte les collisions (AABB sur <code>SpriteComponent.original_*</code>) et appelle <code>_handle_entity_hit(e1, e2)</code>.</li> <li><code>_handle_entity_hit</code> :<ul> <li>Sauvegarde l'\u00e9tat utile (positions, si projectile, ...).</li> <li>Dispatche un \u00e9v\u00e9nement : <code>esper.dispatch_event('entities_hit', e1, e2)</code>.</li> <li>Apr\u00e8s le dispatch, g\u00e8re la destruction des mines/explosions en fonction de l'existence de l'entit\u00e9.</li> </ul> </li> <li>Handler configur\u00e9 : <code>functions.handleHealth.entitiesHit</code> est enregistr\u00e9 pour \u00e9couter l'\u00e9v\u00e9nement <code>entities_hit</code>.<ul> <li>Il lit <code>AttackComponent.hitPoints</code> de l'attaquant et appelle <code>processHealth(target, damage)</code>.</li> </ul> </li> <li><code>processHealth(entity, damage)</code> :<ul> <li>R\u00e9cup\u00e8re le <code>HealthComponent</code> de la cible.</li> <li>Si <code>SpeMaraudeur</code> est pr\u00e9sent et actif, il applique <code>apply_damage_reduction</code>.</li> <li>Si <code>SpeScout</code> est pr\u00e9sent et <code>is_invincible()</code>, il annule les d\u00e9g\u00e2ts.</li> <li>D\u00e9cr\u00e9mente <code>health.currentHealth</code> et supprime l'entit\u00e9 si la sant\u00e9 est \u2264 0.</li> </ul> </li> </ol>"},{"location":"dev/02-systeme/api/unit-system/#points-dattention","title":"\u26a0\ufe0f Points d'attention","text":"<ul> <li>Coh\u00e9rence des noms : <code>HealthComponent</code> utilise <code>currentHealth</code> / <code>maxHealth</code> (camelCase)</li> <li>Prot\u00e9ger les appels sur composants optionnels avec <code>esper.has_component(...)</code></li> <li>\u00c9viter que des handlers r\u00e9-dispatchent <code>entities_hit</code> pour la m\u00eame paire (boucle)</li> <li>Mine lifecycle : entit\u00e9 (HP=1, Attack=40, Team=0) + nettoyage de la grille (<code>graph[y][x] = 0</code>) par <code>CollisionProcessor</code></li> </ul>"},{"location":"dev/02-systeme/api/unit-system/#debugging-recommande","title":"\ud83d\udc1b Debugging recommand\u00e9","text":"<ul> <li>Pr\u00e9f\u00e9rer <code>logging</code> \u00e0 <code>print</code> et utiliser des niveaux (DEBUG/INFO/WARN)</li> <li> <p>Traces utiles :</p> </li> <li> <p><code>CollisionProcessor._handle_entity_hit(e1,e2)</code> (composants cl\u00e9s)</p> </li> <li><code>functions.handleHealth.entitiesHit</code> / <code>processHealth</code> (health avant/apr\u00e8s, Spe* pr\u00e9sents)</li> <li>v\u00e9rifier <code>esper.entity_exists(entity)</code> apr\u00e8s dispatch</li> </ul>"},{"location":"dev/02-systeme/api/unit-system/#tests-a-automatiser","title":"\u2705 Tests \u00e0 automatiser","text":"<ul> <li> <p>Tests unitaires (monde esper minimal) :</p> </li> <li> <p>mine vs unit\u00e9 normale \u2192 mine morte, unit\u00e9 -40 PV, grille = 0</p> </li> <li>mine vs Scout invincible \u2192 mine intacte, unit\u00e9 pas touch\u00e9e</li> <li>projectile vs mine \u2192 projectile d\u00e9truit, mine intacte</li> <li>Maraudeur bouclier \u2192 d\u00e9g\u00e2ts r\u00e9duits correctement</li> </ul>"},{"location":"dev/02-systeme/api/unit-system/#recommandations-futures","title":"\ud83d\udca1 Recommandations futures","text":"<ul> <li>Remplacer <code>print</code> par <code>logging</code> (niveau DEBUG)</li> <li>Standardiser l'API des capacit\u00e9s via une base commune (<code>BaseSpecialAbility</code>)</li> <li>Ajouter <code>ManaComponent</code> si besoin de co\u00fbt en ressource pour certaines capacit\u00e9s</li> </ul>"},{"location":"dev/02-systeme/api/unit-system/#a-venir","title":"\u00c0 venir","text":"<ul> <li>IA et comportements</li> </ul> <p>Cette documentation sera compl\u00e9t\u00e9e prochainement.</p>"},{"location":"dev/02-systeme/modules/components/","title":"Composants ECS","text":"<p>Les composants stockent uniquement des donn\u00e9es et d\u00e9finissent les propri\u00e9t\u00e9s des entit\u00e9s. Ils ne contiennent jamais de logique m\u00e9tier.</p>"},{"location":"dev/02-systeme/modules/components/#organisation-des-composants","title":"Organisation des composants","text":"<pre><code>src/components/\n\u251c\u2500\u2500 core/           # Composants de base (position, sant\u00e9, etc.)\n\u251c\u2500\u2500 special/        # Capacit\u00e9s sp\u00e9ciales des unit\u00e9s\n\u251c\u2500\u2500 events/         # Composants d'\u00e9v\u00e9nements temporaires\n\u2514\u2500\u2500 globals/        # Composants globaux (cam\u00e9ra, carte)\n</code></pre>"},{"location":"dev/02-systeme/modules/components/#composants-de-base-core","title":"Composants de base (core/)","text":""},{"location":"dev/02-systeme/modules/components/#composants-essentiels","title":"Composants essentiels","text":""},{"location":"dev/02-systeme/modules/components/#positioncomponent","title":"PositionComponent","text":"<p>Fichier : <code>src/components/core/positionComponent.py</code></p> <pre><code>@component\nclass PositionComponent:\n    def __init__(self, x=0.0, y=0.0, direction=0.0):\n        self.x: float = x           # Position X dans le monde\n        self.y: float = y           # Position Y dans le monde  \n        self.direction: float = direction  # Direction en radians\n</code></pre> <p>Usage : Toutes les entit\u00e9s visibles sur la carte.</p>"},{"location":"dev/02-systeme/modules/components/#healthcomponent","title":"HealthComponent","text":"<p>Fichier : <code>src/components/core/healthComponent.py</code></p> <pre><code>@component\nclass HealthComponent:\n    def __init__(self, currentHealth: int, maxHealth: int):\n        self.currentHealth: int = currentHealth\n        self.maxHealth: int = maxHealth\n</code></pre> <p>Usage : Unit\u00e9s, b\u00e2timents, objets destructibles.</p>"},{"location":"dev/02-systeme/modules/components/#teamcomponent","title":"TeamComponent","text":"<p>Fichier : <code>src/components/core/teamComponent.py</code></p> <pre><code>from src.components.core.team_enum import Team\n\n@component\nclass TeamComponent:\n    def __init__(self, team: Team = Team.ALLY):\n        self.team: Team = team  # Team.ALLY ou Team.ENEMY\n</code></pre> <p>Usage : D\u00e9termine les alliances et les cibles d'attaque.</p>"},{"location":"dev/02-systeme/modules/components/#composants-speciaux-les-plus-utilises","title":"Composants sp\u00e9ciaux les plus utilis\u00e9s","text":""},{"location":"dev/02-systeme/modules/components/#spearchitect-boost-de-rechargement","title":"SpeArchitect - Boost de rechargement","text":"<pre><code>@component\nclass SpeArchitect:\n    def __init__(self, is_active=False, radius=0.0):\n        self.is_active: bool = is_active\n        self.available: bool = True\n        self.radius: float = radius             # Rayon d'effet\n        self.affected_units: List[int] = []    # Unit\u00e9s affect\u00e9es\n        self.duration: float = 10.0            # Dur\u00e9e de l'effet\n</code></pre>"},{"location":"dev/02-systeme/modules/components/#spescout-invincibilite","title":"SpeScout - Invincibilit\u00e9","text":"<pre><code>@component\nclass SpeScout:\n    def __init__(self):\n        self.is_invincible: bool = False\n        self.cooldown_timer: float = 0.0\n        self.invincibility_duration: float = 3.0\n</code></pre>"},{"location":"dev/02-systeme/modules/components/#playercomponent-donnees-du-joueur","title":"PlayerComponent - Donn\u00e9es du joueur","text":"<pre><code>@component\nclass PlayerComponent:\n    def __init__(self, stored_gold: int = 0):\n        self.stored_gold: int = stored_gold\n\n    def get_gold(self) -&gt; int:\n        return self.stored_gold\n\n    def spend_gold(self, amount: int) -&gt; bool:\n        if self.stored_gold &gt;= amount:\n            self.stored_gold -= amount\n            return True\n        return False\n</code></pre>"},{"location":"dev/02-systeme/modules/components/#basecomponent","title":"BaseComponent","text":"<p>Fichier : <code>src/components/core/baseComponent.py</code></p> <p>Architecture hybride : Composant ECS traditionnel + gestionnaire int\u00e9gr\u00e9 pour les entit\u00e9s de bases.</p>"},{"location":"dev/02-systeme/modules/components/#donnees-dinstance-composant-classique","title":"Donn\u00e9es d'instance (composant classique)","text":"<pre><code>@component\nclass BaseComponent:\n    def __init__(self, troopList=[], currentTroop=0):\n        self.troopList: list = troopList      # Troupes de la base\n        self.currentTroop: int = currentTroop # Index unit\u00e9 s\u00e9lectionn\u00e9e\n</code></pre>"},{"location":"dev/02-systeme/modules/components/#gestionnaire-de-classe-integre","title":"Gestionnaire de classe int\u00e9gr\u00e9","text":"<pre><code>class BaseComponent:\n    # Variables de classe pour l'\u00e9tat global\n    _ally_base_entity: Optional[int] = None\n    _enemy_base_entity: Optional[int] = None\n    _initialized: bool = False\n</code></pre>"},{"location":"dev/02-systeme/modules/components/#api-du-gestionnaire","title":"API du gestionnaire","text":"<p>Initialisation : <pre><code>@classmethod\ndef initialize_bases(cls):\n\"\"\"Cr\u00e9e les entit\u00e9s de bases avec tous leurs composants :\n    - PositionComponent (positionnement sur la carte)\n    - HealthComponent (1000 HP par d\u00e9faut)\n    - AttackComponent (50 d\u00e9g\u00e2ts au contact)\n    - TeamComponent (\u00e9quipe 1/2)\n    - CanCollideComponent + RecentHitsComponent (collision + cooldown)\n    - ClasseComponent (noms localis\u00e9s)\n    - SpriteComponent (hitbox invisible optimis\u00e9e)\n    \"\"\"\n</code></pre></p> <p>Acc\u00e8s aux entit\u00e9s : <pre><code>@classmethod\ndef get_ally_base(cls) -&gt; Optional[int]:\n\"\"\"Retourne l'ID de l'entit\u00e9 base alli\u00e9e.\"\"\"\n\n@classmethod  \ndef get_enemy_base(cls) -&gt; Optional[int]:\n\"\"\"Retourne l'ID de l'entit\u00e9 base ennemie.\"\"\"\n</code></pre></p> <p>Gestion des troupes : <pre><code>@classmethod\ndef add_unit_to_base(cls, unit_entity: int, is_enemy: bool = False) -&gt; bool:\n\"\"\"Ajoute une unit\u00e9 \u00e0 la liste des troupes de la base.\"\"\"\n\n@classmethod\ndef get_base_units(cls, is_enemy: bool = False) -&gt; list[int]:\n\"\"\"Retourne la liste des troupes d'une base.\"\"\"\n</code></pre></p> <p>Positionnement : <pre><code>@classmethod  \ndef get_spawn_position(cls, is_enemy=False, jitter=TILE_SIZE*0.35) -&gt; Tuple[float, float]:\n\"\"\"Calcule une position de spawn pr\u00e8s de la base avec jitter optionnel.\"\"\"\n</code></pre></p> <p>Maintenance : <pre><code>@classmethod\ndef reset(cls) -&gt; None:\n\"\"\"R\u00e9initialise le gestionnaire (changement de niveau).\"\"\"\n</code></pre></p>"},{"location":"dev/02-systeme/modules/components/#utilisation","title":"Utilisation","text":"<p>Initialisation du jeu : <pre><code># Dans GameEngine._create_initial_entities()\nBaseComponent.initialize_bases()\nspawn_x, spawn_y = BaseComponent.get_spawn_position(is_enemy=False)\n</code></pre></p> <p>Achat d'unit\u00e9s : <pre><code># Dans boutique.py\nentity = UnitFactory(unit_type, is_enemy, spawn_position)\nBaseComponent.add_unit_to_base(entity, is_enemy)\n</code></pre></p> <p>Migration depuis BaseManager : - <code>get_base_manager().method()</code> \u2192 <code>BaseComponent.method()</code> - M\u00eame API, juste des appels directs - Performance identique, architecture simplifi\u00e9e</p> <p>Usage : Composant hybride pour QG alli\u00e9s/ennemis avec gestion centralis\u00e9e.</p>"},{"location":"dev/02-systeme/modules/components/#enumerations-importantes","title":"\u00c9num\u00e9rations importantes","text":""},{"location":"dev/02-systeme/modules/components/#team-equipes","title":"Team (\u00c9quipes)","text":"<pre><code>class Team(IntEnum):\n    ALLY = 0    # \u00c9quipe du joueur\n    ENEMY = 1   # \u00c9quipe ennemie\n</code></pre>"},{"location":"dev/02-systeme/modules/components/#unitclass-types-dunites","title":"UnitClass (Types d'unit\u00e9s)","text":"<pre><code>class UnitClass(IntEnum):\n    ZASPER = 0      # Unit\u00e9 de base\n    BARHAMUS = 1    # Tank\n    DRUID = 2       # Soigneur\n    ARCHITECT = 3   # Support\n    DRAUPNIR = 4    # Attaquant lourd\n</code></pre>"},{"location":"dev/02-systeme/modules/components/#composants-globaux-globals","title":"Composants globaux (globals/)","text":""},{"location":"dev/02-systeme/modules/components/#cameracomponent-gestion-de-la-vue","title":"CameraComponent - Gestion de la vue","text":"<p>Fichier : <code>src/components/globals/cameraComponent.py</code></p> <pre><code>class Camera:\n\"\"\"Cam\u00e9ra pour l'affichage adaptatif de la carte.\"\"\"\n\n    def __init__(self, screen_width: int, screen_height: int):\n        self.x: float = 0.0              # Position X cam\u00e9ra (pixels monde)\n        self.y: float = 0.0              # Position Y cam\u00e9ra (pixels monde)\n        self.zoom: float = ZOOM_MIN      # Facteur de zoom par d\u00e9faut\n        self.screen_width: int = screen_width\n        self.screen_height: int = screen_height\n\n        # Limites monde\n        self.world_width: int = MAP_WIDTH * TILE_SIZE\n        self.world_height: int = MAP_HEIGHT * TILE_SIZE\n\n    def world_to_screen(self, world_x: float, world_y: float) -&gt; tuple[int, int]:\n\"\"\"Conversion coordonn\u00e9es monde \u2192 \u00e9cran.\"\"\"\n\n    def get_visible_tiles(self) -&gt; tuple[int, int, int, int]:\n\"\"\"Optimisation : retourne les tuiles visibles (culling).\"\"\"\n</code></pre> <p>Int\u00e9gration UI : Voir Syst\u00e8me de cam\u00e9ra pour les d\u00e9tails d'utilisation.</p>"},{"location":"dev/02-systeme/modules/components/#mapcomponent-generation-et-affichage","title":"MapComponent - G\u00e9n\u00e9ration et affichage","text":"<p>Fichier : <code>src/components/globals/mapComponent.py</code></p> <pre><code>def init_game_map(screen_width: int, screen_height: int) -&gt; dict:\n\"\"\"Initialise l'\u00e9tat complet de la carte.\"\"\"\n    grid = creer_grille()           # Grille vide (mer)\n    images = charger_images()       # Sprites des terrains\n    placer_elements(grid)           # G\u00e9n\u00e9ration proc\u00e9durale\n    camera = Camera(screen_width, screen_height)\n    return {\"grid\": grid, \"images\": images, \"camera\": camera}\n\ndef creer_grille() -&gt; list[list[int]]:\n\"\"\"Cr\u00e9e grille MAP_HEIGHT x MAP_WIDTH initialis\u00e9e \u00e0 TileType.SEA.\"\"\"\n\ndef placer_elements(grid: list[list[int]]) -&gt; None:\n\"\"\"G\u00e9n\u00e9ration proc\u00e9durale des \u00e9l\u00e9ments de carte :\n\n    1. Bases fixes (4x4) aux coins\n    2. \u00celes g\u00e9n\u00e9riques (GENERIC_ISLAND_RATE)\n    3. Mines d'or (MINE_RATE) \n    4. Nuages d\u00e9coratifs (CLOUD_RATE)\n    \"\"\"\n\ndef afficher_grille(window: pygame.Surface, grid: list[list[int]], \n                   images: dict, camera: Camera) -&gt; None:\n\"\"\"Rendu optimis\u00e9 de la carte avec viewport culling.\"\"\"\n</code></pre> <p>Int\u00e9gration UI : Voir Syst\u00e8me de carte et vue du monde pour le rendu complet.</p>"},{"location":"dev/02-systeme/modules/components/#composants-devenements-events","title":"Composants d'\u00e9v\u00e9nements (events/)","text":""},{"location":"dev/02-systeme/modules/components/#stormcomponent-evenement-tempete","title":"StormComponent - \u00c9v\u00e9nement temp\u00eate","text":"<p>Fichier : <code>src/components/events/stormComponent.py</code></p> <pre><code>@component\nclass Storm:\n    def __init__(self, tempete_duree: float = 0, tempete_cooldown: float = 0):\n        self.tempete_duree: float = tempete_duree      # Dur\u00e9e de la temp\u00eate\n        self.tempete_cooldown: float = tempete_cooldown # Cooldown avant nouvelle temp\u00eate\n</code></pre> <p>Usage : \u00c9v\u00e9nement climatique qui affecte les unit\u00e9s sur la carte.</p>"},{"location":"dev/02-systeme/modules/components/#krakencomponent-evenement-kraken","title":"KrakenComponent - \u00c9v\u00e9nement Kraken","text":"<p>Fichier : <code>src/components/events/krakenComponent.py</code></p> <pre><code>@component\nclass Kraken:\n    def __init__(self, kraken_tentacules_min: int = 0, kraken_tentacules_max: int = 0):\n        self.kraken_tentacules_min: int = kraken_tentacules_min  # Min tentacules\n        self.kraken_tentacules_max: int = kraken_tentacules_max  # Max tentacules\n</code></pre> <p>Usage : Boss \u00e9v\u00e9nementiel avec tentacules multiples.</p>"},{"location":"dev/02-systeme/modules/components/#flychestcomponent-coffre-volant","title":"FlyChestComponent - Coffre volant","text":"<p>Fichier : <code>src/components/events/flyChestComponent.py</code></p> <pre><code>@component  \nclass FlyChest:\n    def __init__(self, chest_value: int = 0):\n        self.chest_value: int = chest_value  # Valeur en or du coffre\n        self.is_collected: bool = False      # \u00c9tat de collecte\n</code></pre> <p>Usage : \u00c9v\u00e9nement de collecte d'or temporaire.</p>"},{"location":"dev/02-systeme/modules/components/#composants-de-batiments-buildings","title":"Composants de b\u00e2timents (buildings/)","text":"<p>\ud83d\udcd6 Documentation compl\u00e8te : Voir Syst\u00e8me de Tours pour l'impl\u00e9mentation d\u00e9taill\u00e9e du syst\u00e8me de tours d\u00e9fensives.</p>"},{"location":"dev/02-systeme/modules/components/#towercomponent-composant-de-base-des-tours","title":"TowerComponent - Composant de base des tours","text":"<p>Fichier : <code>src/components/core/towerComponent.py</code></p> <pre><code>@dataclass\nclass TowerComponent:\n    tower_type: str              # Type de tour : \"defense\" ou \"heal\"\n    range: float                 # Port\u00e9e d'action en pixels\n    cooldown: float              # Temps entre deux actions (secondes)\n    current_cooldown: float = 0.0  # Temps restant avant prochaine action\n    target_entity: Optional[int] = None  # Entit\u00e9 actuellement cibl\u00e9e\n</code></pre> <p>Usage : Toutes les tours (d\u00e9fense et soin). G\u00e9r\u00e9 par le <code>TowerProcessor</code>.</p> <p>Propri\u00e9t\u00e9s : - <code>tower_type</code> : D\u00e9termine le comportement (attaque ou soin) - <code>range</code> : Distance de d\u00e9tection des cibles - <code>cooldown</code> : Fr\u00e9quence d'action de la tour - <code>current_cooldown</code> : Compteur d\u00e9cr\u00e9ment\u00e9 \u00e0 chaque frame - <code>target_entity</code> : ID de la cible en cours</p>"},{"location":"dev/02-systeme/modules/components/#defensetowercomponent-tours-dattaque","title":"DefenseTowerComponent - Tours d'attaque","text":"<p>Fichier : <code>src/components/core/defenseTowerComponent.py</code></p> <pre><code>@dataclass\nclass DefenseTowerComponent:\n    damage: float        # D\u00e9g\u00e2ts inflig\u00e9s par attaque (d\u00e9faut: 15.0)\n    attack_speed: float  # Multiplicateur de vitesse d'attaque (d\u00e9faut: 1.0)\n</code></pre> <p>Usage : Tours qui attaquent automatiquement les ennemis \u00e0 port\u00e9e.</p> <p>Cr\u00e9ation : Via <code>buildingFactory.create_defense_tower()</code> - Co\u00fbt : 150 gold - Port\u00e9e : 200 pixels - Cooldown : 2 secondes - D\u00e9g\u00e2ts : 15 par projectile</p>"},{"location":"dev/02-systeme/modules/components/#healtowercomponent-tours-de-soin","title":"HealTowerComponent - Tours de soin","text":"<p>Fichier : <code>src/components/core/healTowerComponent.py</code></p> <pre><code>@dataclass\nclass HealTowerComponent:\n    heal_amount: float   # Points de vie restaur\u00e9s par soin (d\u00e9faut: 10.0)\n    heal_speed: float    # Multiplicateur de vitesse de soin (d\u00e9faut: 1.0)\n</code></pre> <p>Usage : Tours qui soignent automatiquement les alli\u00e9s bless\u00e9s \u00e0 port\u00e9e.</p> <p>Cr\u00e9ation : Via <code>buildingFactory.create_heal_tower()</code> - Co\u00fbt : 120 gold - Port\u00e9e : 150 pixels - Cooldown : 3 secondes - Soin : 10 PV par cycle</p> <p>Note : Les tours n\u00e9cessitent qu'un Architecte soit s\u00e9lectionn\u00e9 et que le placement soit sur une \u00eele.</p>"},{"location":"dev/02-systeme/modules/components/#composants-de-rendu-et-interactions","title":"Composants de rendu et interactions","text":""},{"location":"dev/02-systeme/modules/components/#spritecomponent-affichage-visuel","title":"SpriteComponent - Affichage visuel","text":"<p>Fichier : <code>src/components/core/spriteComponent.py</code></p> <pre><code>@component\nclass SpriteComponent:\n    def __init__(self, image_path: str = \"\", width: float = 0.0, height: float = 0.0,\n                 image: pygame.Surface = None, surface: pygame.Surface = None):\n        self.image_path: str = image_path    # Chemin sprite assets\n        self.width: float = width            # Largeur affichage\n        self.height: float = height          # Hauteur affichage\n        self.original_width: float = width   # Dimensions originales\n        self.original_height: float = height # (pour collisions)\n        self.image: pygame.Surface = image   # Image source\n        self.surface: pygame.Surface = surface # Image redimensionn\u00e9e\n\n    def load_sprite(self) -&gt; None:\n\"\"\"Charge l'image depuis le chemin.\"\"\"\n\n    def scale_sprite(self, width: float, height: float) -&gt; None:\n\"\"\"Redimensionne le sprite.\"\"\"\n</code></pre> <p>Usage : Toutes les entit\u00e9s visibles (unit\u00e9s, projectiles, effets).</p>"},{"location":"dev/02-systeme/modules/components/#velocitycomponent-mouvement","title":"VelocityComponent - Mouvement","text":"<p>Fichier : <code>src/components/core/velocityComponent.py</code></p> <pre><code>@component\nclass VelocityComponent:\n    def __init__(self, vx: float = 0.0, vy: float = 0.0, speed: float = 0.0):\n        self.vx: float = vx              # Vitesse X\n        self.vy: float = vy              # Vitesse Y  \n        self.speed: float = speed        # Vitesse maximale\n        self.terrain_modifier: float = 1.0  # Modificateur terrain\n</code></pre> <p>Usage : Entit\u00e9s mobiles avec interaction terrain.</p>"},{"location":"dev/02-systeme/modules/components/#projectilecomponent-projectiles","title":"ProjectileComponent - Projectiles","text":"<p>Fichier : <code>src/components/core/projectileComponent.py</code></p> <pre><code>@component\nclass ProjectileComponent:\n    def __init__(self, damage: int = 0, target_entity: int = -1, \n                 speed: float = 0.0, range_max: float = 0.0):\n        self.damage: int = damage           # D\u00e9g\u00e2ts du projectile\n        self.target_entity: int = target_entity  # Entit\u00e9 cible\n        self.speed: float = speed           # Vitesse de d\u00e9placement\n        self.range_max: float = range_max   # Port\u00e9e maximale\n        self.distance_traveled: float = 0.0 # Distance parcourue\n</code></pre> <p>Usage : Projectiles d'attaque entre unit\u00e9s.</p>"},{"location":"dev/02-systeme/modules/components/#visioncomponent-portee-de-vision","title":"VisionComponent - Port\u00e9e de vision","text":"<p>Fichier : <code>src/components/core/visionComponent.py</code></p> <pre><code>@component\nclass VisionComponent:\n    def __init__(self, range: float):\n        self.range: float = range  # Port\u00e9e de vision en unit\u00e9s de grille\n</code></pre> <p>Usage : Unit\u00e9s avec capacit\u00e9 de vision.</p> <p>Tip</p> <p>Voir Syst\u00e8me de vision et brouillard de guerre pour les d\u00e9tails d'impl\u00e9mentation.</p>"},{"location":"dev/02-systeme/modules/components/#types-de-terrain-et-generation","title":"Types de terrain et g\u00e9n\u00e9ration","text":""},{"location":"dev/02-systeme/modules/components/#enumeration-tiletype","title":"\u00c9num\u00e9ration TileType","text":"<p>Fichier : <code>src/constants/map_tiles.py</code></p> <pre><code>class TileType(IntEnum):\n    SEA = 0                # Mer (navigable)\n    GENERIC_ISLAND = 1     # \u00cele g\u00e9n\u00e9rique (obstacle)\n    ALLY_BASE = 2          # Base alli\u00e9e (4x4)\n    ENEMY_BASE = 3         # Base ennemie (4x4)  \n    MINE = 4               # Mine d'or (ressource)\n    CLOUD = 5              # Nuage d\u00e9coratif\n</code></pre>"},{"location":"dev/02-systeme/modules/components/#algorithme-de-generation-procedurale","title":"Algorithme de g\u00e9n\u00e9ration proc\u00e9durale","text":"<pre><code>def placer_bloc_aleatoire(grid: list[list[int]], valeur: TileType, nombre: int,\n                         size: int = 1, min_dist: int = 2, avoid_bases: bool = True) -&gt; list[tuple[float, float]]:\n\"\"\"Algorithme de placement al\u00e9atoire avec contraintes :\n\n    1. \u00c9vitement des bases (avoid_bases=True)\n    2. Distance minimale entre \u00e9l\u00e9ments (min_dist)\n    3. V\u00e9rification d'espace libre (bloc_libre())\n    4. Placement par blocs de taille variable (size)\n\n    Returns:\n        list[tuple]: Centres des blocs plac\u00e9s\n    \"\"\"\n</code></pre> <p>Taux de g\u00e9n\u00e9ration configurables :</p> <ul> <li><code>GENERIC_ISLAND_RATE</code> : Nombre d'\u00eeles g\u00e9n\u00e9r\u00e9es</li> <li><code>MINE_RATE</code> : Nombre de mines d'or  </li> <li><code>CLOUD_RATE</code> : Nombre de nuages d\u00e9coratifs</li> </ul>"},{"location":"dev/02-systeme/modules/components/#utilisation-pratique","title":"Utilisation pratique","text":""},{"location":"dev/02-systeme/modules/components/#creer-une-entite-avec-composants","title":"Cr\u00e9er une entit\u00e9 avec composants","text":"<pre><code># Cr\u00e9er une unit\u00e9\nentity = esper.create_entity()\nesper.add_component(entity, PositionComponent(100, 200))\nesper.add_component(entity, TeamComponent(Team.ALLY))\nesper.add_component(entity, HealthComponent(100, 100))\nesper.add_component(entity, AttackComponent(25))\n</code></pre>"},{"location":"dev/02-systeme/modules/components/#rechercher-des-entites","title":"Rechercher des entit\u00e9s","text":"<pre><code># Toutes les unit\u00e9s avec position et sant\u00e9\nfor ent, (pos, health) in esper.get_components(PositionComponent, HealthComponent):\n    if health.currentHealth &lt;= 0:\n        esper.delete_entity(ent)\n</code></pre>"},{"location":"dev/02-systeme/modules/components/#verifier-la-presence-dun-composant","title":"V\u00e9rifier la pr\u00e9sence d'un composant","text":"<pre><code>if esper.has_component(entity, SpeArchitect):\n    architect = esper.component_for_entity(entity, SpeArchitect)\n    if architect.available and not architect.is_active:\n        # Activer la capacit\u00e9...\n</code></pre>"},{"location":"dev/02-systeme/modules/components/#bonnes-pratiques","title":"Bonnes pratiques","text":""},{"location":"dev/02-systeme/modules/components/#a-faire","title":"\u2705 \u00c0 faire","text":"<ul> <li>Donn\u00e9es pures uniquement dans les composants</li> <li>Type hints pour toutes les propri\u00e9t\u00e9s</li> <li>Valeurs par d\u00e9faut sens\u00e9es</li> <li>Noms explicites pour les propri\u00e9t\u00e9s</li> </ul>"},{"location":"dev/02-systeme/modules/components/#a-eviter","title":"\u274c \u00c0 \u00e9viter","text":"<ul> <li>Logique m\u00e9tier dans les composants</li> <li>R\u00e9f\u00e9rences directes entre entit\u00e9s</li> <li>M\u00e9thodes complexes</li> <li>\u00c9tat mutable partag\u00e9</li> </ul> <p>Cette organisation modulaire permet de cr\u00e9er des entit\u00e9s complexes en combinant des composants simples et r\u00e9utilisables.</p>"},{"location":"dev/02-systeme/modules/managers/","title":"Gestionnaires (Managers)","text":"<p>Les gestionnaires centralisent la gestion des ressources et comportements de haut niveau du jeu.</p>"},{"location":"dev/02-systeme/modules/managers/#liste-des-gestionnaires","title":"Liste des gestionnaires","text":"Gestionnaire Responsabilit\u00e9 Fichier <code>BaseComponent</code> Gestion int\u00e9gr\u00e9e des QG alli\u00e9s/ennemis <code>src/components/core/baseComponent.py</code> <code>FlyingChestManager</code> Gestion des coffres volants <code>src/managers/flying_chest_manager.py</code> <code>StormManager</code> Gestion des temp\u00eates <code>src/managers/storm_manager.py</code> <code>DisplayManager</code> Gestion de l'affichage <code>src/managers/display.py</code> <code>AudioManager</code> Gestion audio <code>src/managers/audio.py</code> <code>SpriteManager</code> Cache des sprites <code>src/systems/sprite_system.py</code>"},{"location":"dev/02-systeme/modules/managers/#gestionnaires-de-gameplay","title":"Gestionnaires de gameplay","text":""},{"location":"dev/02-systeme/modules/managers/#basemanager-basecomponent","title":"\u26a0\ufe0f BaseManager \u2192 BaseComponent","text":"<p>Note : <code>BaseManager</code> n'existe plus. Il a \u00e9t\u00e9 fusionn\u00e9 dans <code>BaseComponent</code> pour simplifier l'architecture.</p> <p>Migration :  - <code>get_base_manager().method()</code> \u2192 <code>BaseComponent.method()</code> - Toutes les fonctionnalit\u00e9s sont maintenant des m\u00e9thodes de classe dans <code>BaseComponent</code></p> <p>Documentation compl\u00e8te : Voir BaseComponent</p>"},{"location":"dev/02-systeme/modules/managers/#flyingchestmanager","title":"FlyingChestManager","text":"<p>Responsabilit\u00e9 : G\u00e8re l'apparition et le comportement des coffres volants.</p> <pre><code>class FlyingChestManager:\n    def update(self, dt: float):\n\"\"\"Met \u00e0 jour les timers et fait appara\u00eetre les coffres.\"\"\"\n\n    def handle_collision(self, entity: int, chest_entity: int):\n\"\"\"G\u00e8re la collision avec un coffre volant.\"\"\"\n</code></pre> <p>Fonctionnalit\u00e9s : - Apparition automatique toutes les 30 secondes - Donne de l'or au joueur (100 or par d\u00e9faut) - Spawn uniquement sur les cases d'eau</p>"},{"location":"dev/02-systeme/modules/managers/#audiomanager","title":"AudioManager","text":"<p>Responsabilit\u00e9 : Gestion centralis\u00e9e de l'audio.</p> <pre><code>class AudioManager:\n    def play_music(self, music_path: str, loop: bool = True):\n\"\"\"Joue une musique de fond.\"\"\"\n\n    def play_sound(self, sound_path: str):\n\"\"\"Joue un effet sonore.\"\"\"\n\n    def set_music_volume(self, volume: float):\n\"\"\"D\u00e9finit le volume de la musique.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/modules/managers/#spritesystem-spritemanager","title":"SpriteSystem (SpriteManager)","text":"<p>Responsabilit\u00e9 : Cache et gestion optimis\u00e9e des sprites.</p> <pre><code>class SpriteSystem:\n    def get_sprite(self, sprite_id: SpriteID) -&gt; pygame.Surface:\n\"\"\"R\u00e9cup\u00e8re un sprite depuis le cache.\"\"\"\n\n    def create_sprite_component(self, sprite_id: SpriteID, width: int, height: int):\n\"\"\"Cr\u00e9e un SpriteComponent optimis\u00e9.\"\"\"\n</code></pre> <p>Avantages : - Cache automatique des sprites - \u00c9vite les rechargements multiples - Syst\u00e8me d'IDs au lieu de chemins - Optimisation m\u00e9moire</p>"},{"location":"dev/02-systeme/modules/managers/#patterns-dutilisation","title":"Patterns d'utilisation","text":""},{"location":"dev/02-systeme/modules/managers/#architecture-ecs-integree","title":"Architecture ECS int\u00e9gr\u00e9e","text":"<pre><code># Utilisation directe des m\u00e9thodes de classe\nBaseComponent.initialize_bases()\nally_base = BaseComponent.get_ally_base()\nenemy_base = BaseComponent.get_enemy_base()\n\n# Reset lors des changements de niveau\nBaseComponent.reset()\n</code></pre>"},{"location":"dev/02-systeme/modules/managers/#manager-lifecycle","title":"Manager Lifecycle","text":"<pre><code># Dans GameEngine\ndef _initialize_managers(self):\n    self.flying_chest_manager = FlyingChestManager()\n    self.audio_manager = AudioManager()\n\ndef _update_managers(self, dt):\n    self.flying_chest_manager.update(dt)\n</code></pre>"},{"location":"dev/02-systeme/modules/managers/#bonnes-pratiques","title":"Bonnes pratiques","text":""},{"location":"dev/02-systeme/modules/managers/#gestionnaires-bien-concus","title":"\u2705 Gestionnaires bien con\u00e7us","text":"<ul> <li>Responsabilit\u00e9 unique : Un domaine clairement d\u00e9fini</li> <li>Interface claire : M\u00e9thodes publiques document\u00e9es</li> <li>Int\u00e9gration ECS : Travaille avec les composants/entit\u00e9s</li> </ul>"},{"location":"dev/02-systeme/modules/managers/#a-eviter","title":"\u274c \u00c0 \u00e9viter","text":"<ul> <li>Gestionnaires trop gros avec multiples responsabilit\u00e9s</li> <li>Couplage fort entre gestionnaires</li> <li>Logique m\u00e9tier dans les gestionnaires (doit \u00eatre dans les processeurs)</li> </ul>"},{"location":"dev/02-systeme/modules/processors/","title":"Processeurs ECS","text":"<p>Les processeurs contiennent la logique m\u00e9tier du jeu et agissent sur les entit\u00e9s ayant certains composants.</p>"},{"location":"dev/02-systeme/modules/processors/#liste-des-processeurs","title":"Liste des processeurs","text":""},{"location":"dev/02-systeme/modules/processors/#processeurs-de-base","title":"Processeurs de base","text":"Processeur Priorit\u00e9 Responsabilit\u00e9 <code>CollisionProcessor</code> 2 D\u00e9tection des collisions et gestion des impacts <code>MovementProcessor</code> 3 D\u00e9placement des entit\u00e9s avec v\u00e9locit\u00e9 <code>PlayerControlProcessor</code> 4 Contr\u00f4les joueur et activation des capacit\u00e9s <code>CapacitiesSpecialesProcessor</code> 5 Mise \u00e0 jour des cooldowns des capacit\u00e9s <code>LifetimeProcessor</code> 10 Suppression des entit\u00e9s temporaires <code>TowerProcessor</code> 15 Logique des tours d\u00e9fensives (attaque/soin)"},{"location":"dev/02-systeme/modules/processors/#processeur-de-rendu","title":"Processeur de rendu","text":"Processeur Description <code>RenderingProcessor</code> Affichage des sprites avec gestion cam\u00e9ra/zoom"},{"location":"dev/02-systeme/modules/processors/#detail-des-processeurs","title":"D\u00e9tail des processeurs","text":""},{"location":"dev/02-systeme/modules/processors/#collisionprocessor","title":"CollisionProcessor","text":"<p>Fichier : <code>src/processeurs/collisionProcessor.py</code></p> <p>Responsabilit\u00e9 : D\u00e9tecte et g\u00e8re les collisions entre entit\u00e9s.</p> <pre><code>class CollisionProcessor(esper.Processor):\n    def __init__(self, graph=None):\n        self.graph = graph  # Grille de la carte\n\n    def process(self):\n        # D\u00e9tection des collisions entre toutes les entit\u00e9s\n        for ent1, (pos1, collision1) in esper.get_components(PositionComponent, CanCollideComponent):\n            for ent2, (pos2, collision2) in esper.get_components(PositionComponent, CanCollideComponent):\n                if self._entities_collide(ent1, ent2):\n                    self._handle_entity_hit(ent1, ent2)\n</code></pre> <p>Composants requis : - <code>PositionComponent</code> - <code>CanCollideComponent</code></p> <p>Actions : - Calcule les distances entre entit\u00e9s - Dispatche l'\u00e9v\u00e9nement <code>entities_hit</code> pour les collisions - G\u00e8re les collisions avec les coffres volants - Nettoie les mines explos\u00e9es de la grille</p>"},{"location":"dev/02-systeme/modules/processors/#movementprocessor","title":"MovementProcessor","text":"<p>Fichier : <code>src/processeurs/movementProcessor.py</code></p> <p>Responsabilit\u00e9 : D\u00e9place les entit\u00e9s selon leur v\u00e9locit\u00e9.</p> <pre><code>class MovementProcessor(esper.Processor):\n    def process(self, dt=0.016):\n        for ent, (pos, vel) in esper.get_components(PositionComponent, VelocityComponent):\n            # Appliquer le mouvement\n            pos.x += vel.currentSpeed * dt * math.cos(pos.direction)\n            pos.y += vel.currentSpeed * dt * math.sin(pos.direction)\n</code></pre> <p>Composants requis : - <code>PositionComponent</code> - <code>VelocityComponent</code></p>"},{"location":"dev/02-systeme/modules/processors/#playercontrolprocessor","title":"PlayerControlProcessor","text":"<p>Fichier : <code>src/processeurs/playerControlProcessor.py</code></p> <p>Responsabilit\u00e9 : G\u00e8re les contr\u00f4les du joueur et les capacit\u00e9s sp\u00e9ciales.</p> <p>Contr\u00f4les g\u00e9r\u00e9s : - Clic droit : S\u00e9lection d'unit\u00e9 - Espace : Activation de la capacit\u00e9 sp\u00e9ciale - B : Ouverture de la boutique - F3 : Toggle debug - T : Changement de camp (debug)</p> <p>Capacit\u00e9s sp\u00e9ciales trait\u00e9es : - <code>SpeArchitect</code> : Boost de rechargement des alli\u00e9s - <code>SpeScout</code> : Invincibilit\u00e9 temporaire - <code>SpeMaraudeur</code> : Bouclier de mana - <code>SpeLeviathan</code> : Seconde salve de projectiles - <code>SpeBreaker</code> : Frappe puissante</p>"},{"location":"dev/02-systeme/modules/processors/#capacitiesspecialesprocessor","title":"CapacitiesSpecialesProcessor","text":"<p>Fichier : <code>src/processeurs/CapacitiesSpecialesProcessor.py</code></p> <p>Responsabilit\u00e9 : Met \u00e0 jour les cooldowns et effets des capacit\u00e9s sp\u00e9ciales.</p> <pre><code>def process(self, dt=0.016):\n    # Mise \u00e0 jour des timers de toutes les capacit\u00e9s\n    for ent, spe_comp in esper.get_component(SpeArchitect):\n        spe_comp.update(dt)\n\n    for ent, spe_comp in esper.get_component(SpeScout):\n        spe_comp.update(dt)\n    # ... autres capacit\u00e9s\n</code></pre>"},{"location":"dev/02-systeme/modules/processors/#lifetimeprocessor","title":"LifetimeProcessor","text":"<p>Fichier : <code>src/processeurs/lifetimeProcessor.py</code></p> <p>Responsabilit\u00e9 : Supprime les entit\u00e9s temporaires (projectiles, effets).</p> <pre><code>def process(self, dt=0.016):\n    for ent, lifetime in esper.get_component(LifetimeComponent):\n        lifetime.duration -= dt\n        if lifetime.duration &lt;= 0:\n            esper.delete_entity(ent)\n</code></pre>"},{"location":"dev/02-systeme/modules/processors/#towerprocessor","title":"TowerProcessor","text":"<p>Fichier : <code>src/processeurs/towerProcessor.py</code></p> <p>Responsabilit\u00e9 : G\u00e8re la logique automatique des tours (d\u00e9tection de cibles, attaque, soin).</p> <p>\ud83d\udcd6 Documentation compl\u00e8te : Voir Syst\u00e8me de Tours pour tous les d\u00e9tails.</p> <p>Composants utilis\u00e9s : - <code>TowerComponent</code> : Donn\u00e9es de base (type, port\u00e9e, cooldown) - <code>DefenseTowerComponent</code> : Propri\u00e9t\u00e9s d'attaque - <code>HealTowerComponent</code> : Propri\u00e9t\u00e9s de soin - <code>PositionComponent</code> : Position de la tour - <code>TeamComponent</code> : \u00c9quipe de la tour</p> <p>Fonctionnalit\u00e9s :</p> <ol> <li>Gestion du cooldown : D\u00e9cr\u00e9mente le timer entre chaque action</li> <li>D\u00e9tection de cibles :</li> <li>Tours de d\u00e9fense : Cherche ennemis \u00e0 port\u00e9e</li> <li>Tours de soin : Cherche alli\u00e9s bless\u00e9s \u00e0 port\u00e9e</li> <li>Actions automatiques :</li> <li>Tours de d\u00e9fense : Cr\u00e9e un projectile vers la cible</li> <li>Tours de soin : Applique des soins sur la cible</li> </ol> <pre><code>def process(self, dt: float):\n    for entity, (tower, pos, team) in esper.get_components(\n        TowerComponent, PositionComponent, TeamComponent\n    ):\n        # Mise \u00e0 jour cooldown\n        if tower.current_cooldown &gt; 0:\n            tower.current_cooldown -= dt\n            continue\n\n        # Recherche de cible\n        target = self._find_target(entity, tower, pos, team)\n\n        # Action selon le type de tour\n        if target:\n            if tower.tower_type == \"defense\":\n                self._attack_target(entity, target, pos)\n            elif tower.tower_type == \"heal\":\n                self._heal_target(entity, target)\n\n            tower.current_cooldown = tower.cooldown\n</code></pre> <p>Cr\u00e9ation de tours : Via <code>buildingFactory.create_defense_tower()</code> ou <code>create_heal_tower()</code>.</p>"},{"location":"dev/02-systeme/modules/processors/#renderingprocessor","title":"RenderingProcessor","text":"<p>Fichier : <code>src/processeurs/renderingProcessor.py</code></p> <p>Responsabilit\u00e9 : Affiche tous les sprites des entit\u00e9s \u00e0 l'\u00e9cran.</p> <p>Fonctionnalit\u00e9s : - Conversion coordonn\u00e9es monde \u2192 \u00e9cran via la cam\u00e9ra - Mise \u00e0 l'\u00e9chelle selon le zoom - Rotation des sprites selon la direction - Barres de vie pour les unit\u00e9s endommag\u00e9es - Gestion des effets visuels (invincibilit\u00e9, etc.)</p> <pre><code>def process(self):\n    for ent, (pos, sprite) in esper.get_components(PositionComponent, SpriteComponent):\n        # Calcul position \u00e9cran\n        screen_x, screen_y = self.camera.world_to_screen(pos.x, pos.y)\n\n        # Affichage du sprite avec rotation\n        rotated_image = pygame.transform.rotate(image, -pos.direction * 180 / math.pi)\n        self.screen.blit(rotated_image, (screen_x, screen_y))\n</code></pre>"},{"location":"dev/02-systeme/modules/processors/#ordre-dexecution","title":"Ordre d'ex\u00e9cution","text":"<p>Les processeurs s'ex\u00e9cutent selon leur priorit\u00e9 (plus petit = priorit\u00e9 plus haute) :</p> <ol> <li>CollisionProcessor (priorit\u00e9 2) - D\u00e9tecte les collisions</li> <li>MovementProcessor (priorit\u00e9 3) - Applique les mouvements  </li> <li>PlayerControlProcessor (priorit\u00e9 4) - Traite les inputs</li> <li>CapacitiesSpecialesProcessor (priorit\u00e9 5) - Met \u00e0 jour les capacit\u00e9s</li> <li>LifetimeProcessor (priorit\u00e9 10) - Nettoie les entit\u00e9s expir\u00e9es</li> </ol> <p>Le <code>RenderingProcessor</code> est appel\u00e9 s\u00e9par\u00e9ment dans la boucle de rendu.</p>"},{"location":"dev/02-systeme/modules/processors/#evenements","title":"\u00c9v\u00e9nements","text":"<p>Les processeurs communiquent via le syst\u00e8me d'\u00e9v\u00e9nements d'esper :</p> \u00c9v\u00e9nement \u00c9metteur R\u00e9cepteur Donn\u00e9es <code>entities_hit</code> CollisionProcessor functions.handleHealth entity1, entity2 <code>attack_event</code> PlayerControlProcessor functions.createProjectile attacker, target <code>special_vine_event</code> PlayerControlProcessor functions.createProjectile caster <code>flying_chest_collision</code> CollisionProcessor FlyingChestManager entity, chest"},{"location":"dev/02-systeme/modules/processors/#ajout-dun-nouveau-processeur","title":"Ajout d'un nouveau processeur","text":"<ol> <li>Cr\u00e9er la classe h\u00e9ritant de <code>esper.Processor</code></li> <li>Impl\u00e9menter <code>process(self, dt=0.016)</code></li> <li>Ajouter dans <code>GameEngine._initialize_ecs()</code></li> <li>D\u00e9finir la priorit\u00e9 appropri\u00e9e</li> </ol> <pre><code># Exemple de nouveau processeur\nclass ExampleProcessor(esper.Processor):\n    def process(self, dt=0.016):\n        for ent, (comp1, comp2) in esper.get_components(Component1, Component2):\n            # Logique du processeur...\n            pass\n\n# Dans GameEngine._initialize_ecs()\nself.example_processor = ExampleProcessor()\nes.add_processor(self.example_processor, priority=6)\n</code></pre>"},{"location":"dev/02-systeme/modules/special-capacity-system/","title":"Syst\u00e8me de capacit\u00e9s sp\u00e9ciales","text":"<p>Le syst\u00e8me de capacit\u00e9s sp\u00e9ciales permet aux unit\u00e9s d'avoir des pouvoirs uniques activables avec des cooldowns. Chaque type d'unit\u00e9 poss\u00e8de sa propre capacit\u00e9 sp\u00e9ciale impl\u00e9ment\u00e9e via des composants <code>Spe*</code>.</p>"},{"location":"dev/02-systeme/modules/special-capacity-system/#vue-densemble","title":"Vue d'ensemble","text":""},{"location":"dev/02-systeme/modules/special-capacity-system/#architecture-des-capacites","title":"Architecture des capacit\u00e9s","text":"<pre><code>src/components/special/\n\u251c\u2500\u2500 speScoutComponent.py      # Invincibilit\u00e9 temporaire\n\u251c\u2500\u2500 speMaraudeurComponent.py  # Bouclier de r\u00e9duction de d\u00e9g\u00e2ts\n\u251c\u2500\u2500 speLeviathanComponent.py  # Double attaque\n\u251c\u2500\u2500 speDruidComponent.py      # Lianes immobilisantes\n\u251c\u2500\u2500 speArchitectComponent.py  # Boost de rechargement alli\u00e9\n\u251c\u2500\u2500 isVinedComponent.py       # Effet d'immobilisation\n\u2514\u2500\u2500 VineComponent.py          # Composant visuel des lianes\n</code></pre>"},{"location":"dev/02-systeme/modules/special-capacity-system/#interface-commune","title":"Interface commune","text":"<p>Toutes les capacit\u00e9s sp\u00e9ciales partagent une API standard :</p> <pre><code>class SpeCapacity:\n    def can_activate(self) -&gt; bool:\n\"\"\"V\u00e9rifie si la capacit\u00e9 peut \u00eatre activ\u00e9e.\"\"\"\n\n    def activate(self) -&gt; bool:\n\"\"\"Active la capacit\u00e9 si possible.\"\"\"\n\n    def update(self, dt: float) -&gt; None:\n\"\"\"Met \u00e0 jour les timers de la capacit\u00e9.\"\"\"\n</code></pre>"},{"location":"dev/02-systeme/modules/special-capacity-system/#capacites-par-unite","title":"Capacit\u00e9s par unit\u00e9","text":""},{"location":"dev/02-systeme/modules/special-capacity-system/#spescout-invincibilite-zasper","title":"SpeScout - Invincibilit\u00e9 (Zasper)","text":"<p>Fichier : <code>src/components/special/speScoutComponent.py</code></p> <p>Effet : Invincibilit\u00e9 temporaire pour esquiver attaques et mines.</p> <pre><code>@component\nclass SpeScout:\n    def __init__(self):\n        self.is_active: bool = False                    # \u00c9tat d'activation\n        self.duration: float = ZASPER_INVINCIBILITY_DURATION  # 3 secondes\n        self.timer: float = 0.0                         # Temps restant\n        self.cooldown: float = SPECIAL_ABILITY_COOLDOWN # Cooldown standard\n        self.cooldown_timer: float = 0.0                # Timer de cooldown\n</code></pre> <p>M\u00e9thodes sp\u00e9cifiques : - <code>is_invincible() -&gt; bool</code> : Retourne l'\u00e9tat d'invincibilit\u00e9</p> <p>Int\u00e9grations : - <code>CollisionProcessor</code> v\u00e9rifie <code>is_invincible()</code> avant d'appliquer les d\u00e9g\u00e2ts - <code>processHealth</code> ignore les d\u00e9g\u00e2ts si l'unit\u00e9 est invincible</p>"},{"location":"dev/02-systeme/modules/special-capacity-system/#spemaraudeur-bouclier-de-mana-barhamusmaraudeur","title":"SpeMaraudeur - Bouclier de mana (Barhamus/Maraudeur)","text":"<p>Fichier : <code>src/components/special/speMaraudeurComponent.py</code></p> <p>Effet : R\u00e9duit les d\u00e9g\u00e2ts re\u00e7us pendant une dur\u00e9e d\u00e9termin\u00e9e.</p> <pre><code>@component\nclass SpeMaraudeur:\n    def __init__(self):\n        self.is_active: bool = False\n        self.reduction_min: float = MARAUDEUR_SHIELD_REDUCTION_MIN\n        self.reduction_max: float = MARAUDEUR_SHIELD_REDUCTION_MAX  \n        self.reduction_value: float = 0.0               # Pourcentage de r\u00e9duction\n        self.duration: float = MARAUDEUR_SHIELD_DURATION\n        self.timer: float = 0.0\n        self.cooldown: float = SPECIAL_ABILITY_COOLDOWN\n        self.cooldown_timer: float = 0.0\n</code></pre> <p>M\u00e9thodes sp\u00e9cifiques : - <code>apply_damage_reduction(damage: float) -&gt; float</code> : Applique la r\u00e9duction - <code>is_shielded() -&gt; bool</code> : V\u00e9rifie l'\u00e9tat du bouclier</p> <p>Param\u00e8tres configurables : - R\u00e9duction personnalisable entre <code>reduction_min</code> et <code>reduction_max</code> - Dur\u00e9e optionnelle lors de l'activation</p>"},{"location":"dev/02-systeme/modules/special-capacity-system/#spearchitect-boost-de-rechargement-architect","title":"SpeArchitect - Boost de rechargement (Architect)","text":"<p>Fichier : <code>src/components/special/speArchitectComponent.py</code></p> <p>Effet : Acc\u00e9l\u00e8re le rechargement des unit\u00e9s alli\u00e9es dans un rayon.</p> <pre><code>@component\nclass SpeArchitect:\n    def __init__(self):\n        self.is_active: bool = False\n        self.available: bool = True                     # Disponibilit\u00e9\n        self.radius: float = 0.0                        # Rayon d'effet\n        self.reload_factor: float = 0.0                 # Facteur de division\n        self.affected_units: List[int] = []             # Unit\u00e9s affect\u00e9es\n        self.duration: float = 0.0                      # Dur\u00e9e (0 = permanent)\n        self.timer: float = 0.0\n</code></pre> <p>Activation avec cibles : <pre><code>def activate(self, affected_units: List[int], duration: float = 0.0):\n\"\"\"Active le boost sur les unit\u00e9s sp\u00e9cifi\u00e9es.\"\"\"\n</code></pre></p> <p>Fonctionnement : - Trouve les unit\u00e9s alli\u00e9es dans le rayon - Applique un boost de rechargement (divise les cooldowns) - Peut \u00eatre permanent (<code>duration=0</code>) ou temporaire</p>"},{"location":"dev/02-systeme/modules/special-capacity-system/#spedruid-lianes-immobilisantes-druid","title":"SpeDruid - Lianes immobilisantes (Druid)","text":"<p>Fichier : <code>src/components/special/speDruidComponent.py</code></p> <p>Effet : Lance un projectile qui immobilise la cible avec des lianes.</p> <p>Composants associ\u00e9s : - <code>VineComponent</code> : Visuel des lianes - <code>isVinedComponent</code> : Effet d'immobilisation sur la cible</p> <p>M\u00e9canisme : 1. Activation lance un projectile sp\u00e9cial 2. \u00c0 l'impact, ajoute <code>isVinedComponent</code> \u00e0 la cible 3. La cible est immobilis\u00e9e pendant la dur\u00e9e 4. Effet visuel avec <code>VineComponent</code></p>"},{"location":"dev/02-systeme/modules/special-capacity-system/#speleviathan-double-attaque-draupnirleviathan","title":"SpeLeviathan - Double attaque (Draupnir/Leviathan)","text":"<p>Fichier : <code>src/components/special/speLeviathanComponent.py</code></p> <p>Effet : D\u00e9clenche une seconde attaque imm\u00e9diatement apr\u00e8s la premi\u00e8re.</p> <p>M\u00e9canisme : - Flag d'activation (<code>is_active = True</code>) - Lors de l'attaque, v\u00e9rifie le flag - Si actif, d\u00e9clenche une seconde salve instantan\u00e9ment - Consomme le flag (<code>is_active = False</code>)</p>"},{"location":"dev/02-systeme/modules/special-capacity-system/#constantes-de-configuration","title":"Constantes de configuration","text":""},{"location":"dev/02-systeme/modules/special-capacity-system/#fichier-srcconstantsgameplaypy","title":"Fichier : <code>src/constants/gameplay.py</code>","text":"<pre><code># Cooldowns universels\nSPECIAL_ABILITY_COOLDOWN = 15.0         # Cooldown standard (15 secondes)\n\n# SpeScout (Zasper)\nZASPER_INVINCIBILITY_DURATION = 3.0     # Dur\u00e9e d'invincibilit\u00e9\n\n# SpeMaraudeur (Barhamus/Maraudeur)  \nMARAUDEUR_SHIELD_REDUCTION_MIN = 0.2    # 20% r\u00e9duction minimum\nMARAUDEUR_SHIELD_REDUCTION_MAX = 0.5    # 50% r\u00e9duction maximum\nMARAUDEUR_SHIELD_DURATION = 8.0         # Dur\u00e9e du bouclier\n\n# Autres capacit\u00e9s...\n</code></pre>"},{"location":"dev/02-systeme/modules/special-capacity-system/#integration-avec-les-systemes","title":"Int\u00e9gration avec les syst\u00e8mes","text":""},{"location":"dev/02-systeme/modules/special-capacity-system/#capacitiesspecialesprocessor","title":"CapacitiesSpecialesProcessor","text":"<p>Responsabilit\u00e9 : Mise \u00e0 jour des timers et gestion des effets sp\u00e9ciaux.</p> <pre><code>def process(self):\n\"\"\"Met \u00e0 jour toutes les capacit\u00e9s sp\u00e9ciales actives.\"\"\"\n\n    # Update des timers pour chaque type de capacit\u00e9\n    for entity, spe_scout in esper.get_components(SpeScout):\n        spe_scout.update(dt)\n\n    for entity, spe_maraudeur in esper.get_components(SpeMaraudeur):\n        spe_maraudeur.update(dt)\n\n    # Gestion des effets temporaires (lianes, etc.)\n    self._process_vine_effects()\n</code></pre>"},{"location":"dev/02-systeme/modules/special-capacity-system/#integration-ui-actionbar","title":"Int\u00e9gration UI - ActionBar","text":"<p>Affichage des cooldowns :</p> <pre><code>def _draw_special_ability_button(self, surface):\n\"\"\"Dessine le bouton de capacit\u00e9 sp\u00e9ciale avec cooldown.\"\"\"\n\n    if self.selected_unit.has_special:\n        # R\u00e9cup\u00e9rer le composant de capacit\u00e9\n        if esper.has_component(entity, SpeScout):\n            scout = esper.component_for_entity(entity, SpeScout)\n            cooldown_ratio = scout.cooldown_timer / scout.cooldown\n\n        # Dessiner le bouton avec overlay de cooldown\n        if cooldown_ratio &gt; 0:\n            self._draw_cooldown_overlay(surface, cooldown_ratio)\n</code></pre>"},{"location":"dev/02-systeme/modules/special-capacity-system/#integration-avec-les-degats","title":"Int\u00e9gration avec les d\u00e9g\u00e2ts","text":"<p>Dans <code>processHealth</code> :</p> <pre><code>def apply_damage(entity, damage):\n\"\"\"Applique les d\u00e9g\u00e2ts en tenant compte des capacit\u00e9s.\"\"\"\n\n    # V\u00e9rifier invincibilit\u00e9 (SpeScout)\n    if esper.has_component(entity, SpeScout):\n        scout = esper.component_for_entity(entity, SpeScout)\n        if scout.is_invincible():\n            return  # Ignorer les d\u00e9g\u00e2ts\n\n    # Appliquer r\u00e9duction (SpeMaraudeur)\n    if esper.has_component(entity, SpeMaraudeur):\n        maraudeur = esper.component_for_entity(entity, SpeMaraudeur)\n        if maraudeur.is_shielded():\n            damage = maraudeur.apply_damage_reduction(damage)\n\n    # Appliquer les d\u00e9g\u00e2ts finaux\n    health.currentHealth -= damage\n</code></pre>"},{"location":"dev/02-systeme/modules/special-capacity-system/#tests-et-validation","title":"Tests et validation","text":""},{"location":"dev/02-systeme/modules/special-capacity-system/#exemples-de-tests-unitaires","title":"Exemples de tests unitaires","text":"<pre><code># Test SpeScout\nfrom src.components.special.speScoutComponent import SpeScout\n\ndef test_spe_scout_invincibility():\n    scout = SpeScout()\n    assert scout.can_activate()\n    assert scout.activate() is True\n    assert scout.is_invincible()\n\n    # Similer le temps qui passe\n    scout.update(scout.duration + 0.1)\n    assert not scout.is_invincible()\n    assert not scout.is_active\n\n# Test SpeMaraudeur\nfrom src.components.special.speMaraudeurComponent import SpeMaraudeur\n\ndef test_maraudeur_damage_reduction():\n    maraudeur = SpeMaraudeur()\n    maraudeur.activate(reduction=0.5)  # 50% de r\u00e9duction\n\n    original_damage = 100\n    reduced_damage = maraudeur.apply_damage_reduction(original_damage)\n\n    assert reduced_damage == 50\n    assert maraudeur.is_shielded()\n</code></pre>"},{"location":"dev/02-systeme/modules/special-capacity-system/#tests-dintegration","title":"Tests d'int\u00e9gration","text":"<pre><code>def test_scout_collision_immunity():\n\"\"\"Test que le Scout \u00e9vite les d\u00e9g\u00e2ts quand invincible.\"\"\"\n\n    # Cr\u00e9er entit\u00e9 avec SpeScout\n    entity = esper.create_entity()\n    scout = SpeScout()\n    health = HealthComponent(100, 100)\n\n    esper.add_component(entity, scout)\n    esper.add_component(entity, health)\n\n    # Activer invincibilit\u00e9\n    scout.activate()\n\n    # Simuler d\u00e9g\u00e2ts - ne devrais pas affecter la sant\u00e9\n    apply_damage(entity, 50)\n\n    assert health.currentHealth == 100  # Sant\u00e9 inchang\u00e9e\n</code></pre>"},{"location":"dev/02-systeme/modules/special-capacity-system/#bonnes-pratiques","title":"Bonnes pratiques","text":""},{"location":"dev/02-systeme/modules/special-capacity-system/#recommandations","title":"\u2705 Recommandations","text":"<ul> <li>Interface unifi\u00e9e : Toutes les capacit\u00e9s impl\u00e9mentent <code>can_activate()</code>, <code>activate()</code>, <code>update()</code></li> <li>Gestion d\u00e9fensive : V\u00e9rifier <code>esper.has_component()</code> avant d'acc\u00e9der aux capacit\u00e9s</li> <li>S\u00e9paration des responsabilit\u00e9s : Donn\u00e9es dans les composants, logique dans les processeurs</li> <li>Configuration centralis\u00e9e : Constantes dans <code>gameplay.py</code> pour faciliter l'\u00e9quilibrage</li> <li>Tests exhaustifs : Couvrir activation, dur\u00e9e, expiration et interactions</li> </ul>"},{"location":"dev/02-systeme/modules/special-capacity-system/#a-eviter","title":"\u274c \u00c0 \u00e9viter","text":"<ul> <li>Logique m\u00e9tier complexe dans les composants</li> <li>Modification directe des timers depuis l'ext\u00e9rieur</li> <li>Oubli de v\u00e9rifier les cooldowns avant activation</li> <li>\u00c9tats incoh\u00e9rents (<code>is_active=True</code> mais <code>timer=0</code>)</li> </ul>"},{"location":"dev/02-systeme/modules/special-capacity-system/#extension-du-systeme","title":"Extension du syst\u00e8me","text":""},{"location":"dev/02-systeme/modules/special-capacity-system/#ajouter-une-nouvelle-capacite","title":"Ajouter une nouvelle capacit\u00e9","text":"<ol> <li>Cr\u00e9er le composant :</li> </ol> <pre><code># src/components/special/speNewUnitComponent.py\n@component\nclass SpeNewUnit:\n    def __init__(self):\n        self.is_active: bool = False\n        self.cooldown: float = SPECIAL_ABILITY_COOLDOWN\n        self.cooldown_timer: float = 0.0\n        # Attributs sp\u00e9cifiques...\n\n    def can_activate(self) -&gt; bool:\n        return not self.is_active and self.cooldown_timer &lt;= 0\n\n    def activate(self) -&gt; bool:\n        if self.can_activate():\n            self.is_active = True\n            self.cooldown_timer = self.cooldown\n            return True\n        return False\n\n    def update(self, dt: float) -&gt; None:\n        if self.cooldown_timer &gt; 0:\n            self.cooldown_timer -= dt\n</code></pre> <ol> <li>Int\u00e9grer dans le processeur :</li> </ol> <pre><code># Dans CapacitiesSpecialesProcessor\nfor entity, new_capacity in esper.get_components(SpeNewUnit):\n    new_capacity.update(dt)\n</code></pre> <ol> <li>Ajouter \u00e0 l'UI :</li> </ol> <pre><code># Dans ActionBar\nif esper.has_component(entity, SpeNewUnit):\n    capacity = esper.component_for_entity(entity, SpeNewUnit) \n    self._draw_capacity_button(surface, capacity)\n</code></pre> <p>Cette architecture modulaire permet d'ajouter facilement de nouvelles capacit\u00e9s tout en maintenant la coh\u00e9rence du syst\u00e8me.</p>"},{"location":"dev/02-systeme/modules/sprite-manager/","title":"Sprite Manager","text":""},{"location":"dev/02-systeme/modules/sprite-manager/#vue-densemble","title":"Vue d'ensemble","text":"<p>Le Sprite Manager est un syst\u00e8me centralis\u00e9 de gestion des sprites qui remplace l'utilisation directe des chemins de fichiers par un syst\u00e8me bas\u00e9 sur des IDs. Il am\u00e9liore les performances gr\u00e2ce \u00e0 la mise en cache et simplifie la maintenance du code.</p>"},{"location":"dev/02-systeme/modules/sprite-manager/#architecture","title":"Architecture","text":""},{"location":"dev/02-systeme/modules/sprite-manager/#spriteid-enumeration","title":"SpriteID (\u00c9num\u00e9ration)","text":"<pre><code>class SpriteID(Enum):\n    # Unit\u00e9s alli\u00e9es\n    ALLY_SCOUT = \"ally_scout\"\n    ALLY_MARAUDEUR = \"ally_maraudeur\"\n    # Unit\u00e9s ennemies  \n    ENEMY_SCOUT = \"enemy_scout\"\n    # Projectiles\n    PROJECTILE_BULLET = \"ball\"\n    # Effets\n    EXPLOSION = \"explosion\"\n    # Buildings, Events, UI...\n</code></pre>"},{"location":"dev/02-systeme/modules/sprite-manager/#spritedata-classe-de-donnees","title":"SpriteData (Classe de donn\u00e9es)","text":"<pre><code>class SpriteData:\n    def __init__(self, sprite_id: SpriteID, file_path: str, \n                 default_width: int, default_height: int, description: str):\n        # Donn\u00e9es de configuration pour chaque sprite\n</code></pre>"},{"location":"dev/02-systeme/modules/sprite-manager/#spritemanager-gestionnaire-principal","title":"SpriteManager (Gestionnaire principal)","text":"<pre><code>class SpriteManager:\n    def __init__(self):\n        self._sprites_registry: Dict[SpriteID, SpriteData] = {}\n        self._loaded_images: Dict[SpriteID, pygame.Surface] = {}\n</code></pre>"},{"location":"dev/02-systeme/modules/sprite-manager/#fonctionnalites-principales","title":"Fonctionnalit\u00e9s principales","text":""},{"location":"dev/02-systeme/modules/sprite-manager/#1-enregistrement-centralise","title":"1. Enregistrement centralis\u00e9","text":"<ul> <li>Tous les sprites sont enregistr\u00e9s dans un registre unique</li> <li>Chaque sprite a un ID, un chemin, des dimensions par d\u00e9faut et une description</li> <li>Support de multiples cat\u00e9gories : unit\u00e9s, projectiles, effets, b\u00e2timents, \u00e9v\u00e9nements, UI</li> </ul>"},{"location":"dev/02-systeme/modules/sprite-manager/#2-chargement-et-mise-en-cache","title":"2. Chargement et mise en cache","text":"<pre><code># Chargement automatique avec mise en cache\nsprite_manager.load_sprite(SpriteID.ALLY_SCOUT)\n\n# Pr\u00e9chargement pour optimiser les performances\nsprite_manager.preload_sprites([SpriteID.ALLY_SCOUT, SpriteID.ENEMY_SCOUT])\nsprite_manager.preload_all_sprites()\n</code></pre>"},{"location":"dev/02-systeme/modules/sprite-manager/#3-creation-de-composants","title":"3. Cr\u00e9ation de composants","text":"<pre><code># Cr\u00e9ation directe de SpriteComponent\ncomponent = sprite_manager.create_sprite_component(\n    SpriteID.ALLY_SCOUT, \n    width=100, \n    height=120\n)\n</code></pre>"},{"location":"dev/02-systeme/modules/sprite-manager/#4-utilitaires-de-haut-niveau","title":"4. Utilitaires de haut niveau","text":"<p>Le module <code>sprite_utils.py</code> fournit des fonctions de convenance :</p> <pre><code># Cr\u00e9ation de sprites d'unit\u00e9s\nsprite = create_unit_sprite_component(UnitType.SCOUT, is_enemy=False)\n\n# Cr\u00e9ation de sprites de projectiles\nsprite = create_projectile_sprite_component(\"explosion\", 32, 32)\n\n# Cr\u00e9ation de sprites d'\u00e9v\u00e9nements\nsprite = create_event_sprite_component(\"kraken\", 200, 200)\n\n# Cr\u00e9ation de sprites de b\u00e2timents\nsprite = create_building_sprite_component(\"attack_tower\", 80, 120)\n</code></pre>"},{"location":"dev/02-systeme/modules/sprite-manager/#integration-dans-le-code-existant","title":"Int\u00e9gration dans le code existant","text":""},{"location":"dev/02-systeme/modules/sprite-manager/#avant-ancien-systeme","title":"Avant (ancien syst\u00e8me)","text":"<pre><code># Utilisation directe des chemins\nsprite = SpriteComponent(\"assets/sprites/units/ally/Scout.png\", 80.0, 100.0)\n</code></pre>"},{"location":"dev/02-systeme/modules/sprite-manager/#apres-nouveau-systeme","title":"Apr\u00e8s (nouveau syst\u00e8me)","text":"<pre><code># Utilisation du syst\u00e8me centralis\u00e9\nsprite = create_unit_sprite_component(UnitType.SCOUT, is_enemy=False)\n</code></pre>"},{"location":"dev/02-systeme/modules/sprite-manager/#initialisation","title":"Initialisation","text":"<p>Le syst\u00e8me s'initialise automatiquement au d\u00e9marrage du jeu :</p> <pre><code># Dans game.py\nfrom src.initialization.sprite_init import initialize_sprite_system\n\ndef _initialize_game_map(self):\n    # ... initialisation de la carte ...\n    initialize_sprite_system()  # Pr\u00e9charge les sprites communs\n</code></pre>"},{"location":"dev/02-systeme/modules/sprite-manager/#avantages","title":"Avantages","text":"<ol> <li>Performance : Mise en cache des images, pr\u00e9chargement possible</li> <li>Maintenabilit\u00e9 : Centralisation des r\u00e9f\u00e9rences de sprites</li> <li>Flexibilit\u00e9 : Dimensions personnalisables, fallbacks automatiques</li> <li>Debugging : Logging d\u00e9taill\u00e9, informations sur les sprites</li> <li>Robustesse : Gestion d'erreur int\u00e9gr\u00e9e, validation des fichiers</li> </ol>"},{"location":"dev/02-systeme/modules/sprite-manager/#categories-de-sprites-supportees","title":"Cat\u00e9gories de sprites support\u00e9es","text":"<ul> <li>Unit\u00e9s : Alli\u00e9es et ennemies (Scout, Maraudeur, L\u00e9viathan, Druide, Architecte, etc.)</li> <li>Projectiles : Balles, boulets de canon, fl\u00e8ches</li> <li>Effets : Explosions, impacts, effets sp\u00e9ciaux</li> <li>B\u00e2timents : Tours d'attaque, tours de soin, constructions</li> <li>\u00c9v\u00e9nements : Coffres, Kraken, navires pirates, temp\u00eates  </li> <li>Interface : Ic\u00f4nes, boutons, \u00e9l\u00e9ments UI</li> <li>Terrain : Eau, \u00eeles, nuages (pr\u00e9vu pour extension future)</li> </ul>"},{"location":"dev/02-systeme/modules/sprite-manager/#api-de-debugging","title":"API de debugging","text":"<pre><code># Informations sur un sprite\ninfo = sprite_manager.get_sprite_info(SpriteID.ALLY_SCOUT)\n\n# Liste de tous les sprites\nall_sprites = sprite_manager.list_all_sprites()\n\n# Nettoyage du cache\nsprite_manager.clear_cache()\n</code></pre>"},{"location":"dev/02-systeme/modules/sprite-manager/#exemple-dutilisation-complete","title":"Exemple d'utilisation compl\u00e8te","text":"<pre><code># 1. Obtenir le gestionnaire global\nfrom src.managers.sprite_manager import sprite_manager\n\n# 2. Cr\u00e9er un composant sprite pour une unit\u00e9\nsprite_component = create_unit_sprite_component(\n    UnitType.SCOUT, \n    is_enemy=False, \n    width=90, \n    height=110\n)\n\n# 3. Ajouter le composant \u00e0 une entit\u00e9\nif sprite_component:\n    esper.add_component(entity, sprite_component)\n\n# 4. Le rendu se fait automatiquement via le syst\u00e8me existant\n</code></pre>"},{"location":"dev/02-systeme/modules/sprite-manager/#structure-des-fichiers","title":"Structure des fichiers","text":"<pre><code>src/\n\u251c\u2500\u2500 managers/\n\u2502   \u2514\u2500\u2500 sprite_manager.py          # Gestionnaire principal et \u00e9num\u00e9ration SpriteID\n\u251c\u2500\u2500 utils/\n\u2502   \u2514\u2500\u2500 sprite_utils.py            # Fonctions utilitaires de convenance\n\u251c\u2500\u2500 initialization/\n\u2502   \u2514\u2500\u2500 sprite_init.py             # Initialisation et pr\u00e9chargement\n\u2514\u2500\u2500 components/properties/\n    \u2514\u2500\u2500 spriteComponent.py         # Composant sprite (inchang\u00e9)\n</code></pre>"},{"location":"dev/02-systeme/modules/sprite-manager/#migration-depuis-lancien-systeme","title":"Migration depuis l'ancien syst\u00e8me","text":""},{"location":"dev/02-systeme/modules/sprite-manager/#etapes-de-migration","title":"\u00c9tapes de migration","text":"<ol> <li>Identifier les sprites : R\u00e9pertorier tous les chemins de sprites utilis\u00e9s</li> <li>Ajouter aux \u00e9num\u00e9rations : Cr\u00e9er des IDs dans <code>SpriteID</code> </li> <li>Enregistrer les sprites : Ajouter les <code>SpriteData</code> dans le registre</li> <li>Remplacer les appels : Utiliser les fonctions utilitaires</li> <li>Tester : V\u00e9rifier que tous les sprites s'affichent correctement</li> </ol>"},{"location":"dev/02-systeme/modules/sprite-manager/#checklist-de-migration-par-fichier","title":"Checklist de migration par fichier","text":"<ul> <li>[x] <code>unitFactory.py</code> - Migration vers <code>create_unit_sprite_component()</code></li> <li>[x] <code>projectileCreator.py</code> - Migration vers <code>create_projectile_sprite_component()</code></li> <li>[x] <code>game.py</code> - Int\u00e9gration de l'initialisation sprite</li> <li>[ ] Autres cr\u00e9ateurs d'entit\u00e9s (si existants)</li> </ul>"},{"location":"dev/02-systeme/modules/sprite-manager/#troubleshooting","title":"Troubleshooting","text":""},{"location":"dev/02-systeme/modules/sprite-manager/#problemes-courants","title":"Probl\u00e8mes courants","text":"<p>Sprite non trouv\u00e9 <pre><code>Warning: Sprite ID ALLY_SCOUT not found in registry\n</code></pre> \u2192 V\u00e9rifier que le sprite est enregistr\u00e9 dans <code>_initialize_sprite_registry()</code></p> <p>Fichier non trouv\u00e9 <pre><code>Error loading sprite ally_scout from assets/sprites/units/ally/Scout.png: FileNotFoundError\n</code></pre> \u2192 V\u00e9rifier que le fichier existe et que le chemin est correct</p> <p>Mauvaises dimensions <pre><code>Sprite s'affiche trop petit/grand\n</code></pre> \u2192 Ajuster les <code>default_width/height</code> dans <code>SpriteData</code> ou passer des dimensions custom</p>"},{"location":"dev/02-systeme/modules/sprite-manager/#debug-tips","title":"Debug tips","text":"<pre><code># V\u00e9rifier qu'un sprite est enregistr\u00e9\nsprite_data = sprite_manager.get_sprite_data(SpriteID.ALLY_SCOUT)\nprint(f\"Sprite enregistr\u00e9: {sprite_data is not None}\")\n\n# Lister tous les sprites charg\u00e9s\nloaded_sprites = [sid for sid in sprite_manager._loaded_images.keys()]\nprint(f\"Sprites en cache: {loaded_sprites}\")\n\n# Forcer le rechargement d'un sprite\nsprite_manager._loaded_images.pop(SpriteID.ALLY_SCOUT, None)\nsprite_manager.load_sprite(SpriteID.ALLY_SCOUT)\n</code></pre>"},{"location":"dev/02-systeme/modules/vision-system/","title":"Syst\u00e8me de Vision et Brouillard de Guerre","text":""},{"location":"dev/02-systeme/modules/vision-system/#vue-densemble","title":"Vue d'ensemble","text":"<p>Le Syst\u00e8me de Vision g\u00e8re la visibilit\u00e9 des unit\u00e9s et applique un brouillard de guerre immersif inspir\u00e9 de Civilization. Il contr\u00f4le quelles parties de la carte sont visibles pour chaque \u00e9quipe et rend les zones non explor\u00e9es avec des sprites de nuages vari\u00e9s.</p>"},{"location":"dev/02-systeme/modules/vision-system/#architecture","title":"Architecture","text":""},{"location":"dev/02-systeme/modules/vision-system/#visionsystem-classe-principale","title":"VisionSystem (Classe principale)","text":"<pre><code>class VisionSystem:\n    def __init__(self):\n        self.visible_tiles: dict[int, Set[Tuple[int, int]]] = {}  # Par \u00e9quipe\n        self.explored_tiles: dict[int, Set[Tuple[int, int]]] = {}  # Par \u00e9quipe\n        self.current_team = 1  # \u00c9quipe actuelle\n        self.cloud_image = None  # Image des nuages charg\u00e9e dynamiquement\n</code></pre>"},{"location":"dev/02-systeme/modules/vision-system/#etats-de-visibilite","title":"\u00c9tats de visibilit\u00e9","text":"<ul> <li>Visible : Tuiles actuellement dans le champ de vision des unit\u00e9s de l'\u00e9quipe</li> <li>Explor\u00e9 : Tuiles d\u00e9j\u00e0 vues au moins une fois (persistent)</li> <li>Non d\u00e9couvert : Tuiles jamais vues, couvertes de nuages</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#fonctionnalites-principales","title":"Fonctionnalit\u00e9s principales","text":""},{"location":"dev/02-systeme/modules/vision-system/#1-gestion-multi-equipes","title":"1. Gestion multi-\u00e9quipes","text":"<ul> <li>Chaque \u00e9quipe maintient ses propres ensembles de tuiles visibles et explor\u00e9es</li> <li>Changement automatique lors du switch d'\u00e9quipe dans l'interface</li> <li>S\u00e9paration compl\u00e8te des donn\u00e9es de visibilit\u00e9</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#2-calcul-de-visibilite","title":"2. Calcul de visibilit\u00e9","text":"<pre><code>def update_visibility(self, current_team: Optional[int] = None):\n\"\"\"Met \u00e0 jour les zones visibles pour l'\u00e9quipe actuelle.\"\"\"\n    # Parcourt toutes les unit\u00e9s de l'\u00e9quipe avec VisionComponent\n    # Calcule les tuiles dans leur port\u00e9e de vision\n    # Met \u00e0 jour visible_tiles et explored_tiles\n</code></pre>"},{"location":"dev/02-systeme/modules/vision-system/#3-rendu-du-brouillard","title":"3. Rendu du brouillard","text":""},{"location":"dev/02-systeme/modules/vision-system/#nuages-pour-zones-non-decouvertes","title":"Nuages pour zones non d\u00e9couvertes","text":"<ul> <li>Sprites de nuages 2x plus gros que les tuiles</li> <li>Centr\u00e9s sur chaque tuile pour un effet de chevauchement naturel</li> <li>D\u00e9coupes vari\u00e9es de l'image source pour plus de diversit\u00e9</li> <li>Alpha blending \u00e0 160 pour une transparence optimale</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#brouillard-leger-pour-zones-explorees","title":"Brouillard l\u00e9ger pour zones explor\u00e9es","text":"<ul> <li>Couleur noire semi-transparente (alpha 40)</li> <li>Appliqu\u00e9 aux tuiles d\u00e9j\u00e0 vues mais hors de port\u00e9e</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#4-optimisations-de-performance","title":"4. Optimisations de performance","text":"<ul> <li>Chargement diff\u00e9r\u00e9 de l'image cloud (apr\u00e8s initialisation Pygame)</li> <li>Utilisation du SpriteManager pour la gestion centralis\u00e9e des assets</li> <li>Calcul d\u00e9terministe des d\u00e9coupes pour \u00e9viter les calculs al\u00e9atoires co\u00fbteux</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#composants-associes","title":"Composants associ\u00e9s","text":""},{"location":"dev/02-systeme/modules/vision-system/#visioncomponent","title":"VisionComponent","text":"<pre><code>@dataclass\nclass VisionComponent:\n    range: float  # Port\u00e9e de vision en unit\u00e9s de grille\n</code></pre> <ul> <li>Attach\u00e9 \u00e0 toutes les unit\u00e9s et b\u00e2timents</li> <li>Valeurs d\u00e9finies dans <code>constants/gameplay.py</code></li> <li>Port\u00e9es typiques : 4-8 unit\u00e9s de grille selon le type d'unit\u00e9</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#integration-dans-le-rendu","title":"Int\u00e9gration dans le rendu","text":"<p>Le syst\u00e8me s'int\u00e8gre dans <code>GameRenderer._render_fog_of_war()</code> :</p> <pre><code>def _render_fog_of_war(self, window, camera):\n    vision_system.update_visibility(current_team)\n    fog_rects = vision_system.get_visibility_overlay(camera)\n    # Rendu des rectangles de brouillard\n</code></pre>"},{"location":"dev/02-systeme/modules/vision-system/#constantes-de-configuration","title":"Constantes de configuration","text":"<pre><code># Dans constants/gameplay.py\nBASE_VISION_RANGE = 8.0      # Vision des bases\nUNIT_VISION_SCOUT = 6.0      # Vision des \u00e9claireurs\nUNIT_VISION_MARAUDEUR = 5.0  # Vision des maraudeurs\n# ... autres unit\u00e9s\n</code></pre>"},{"location":"dev/02-systeme/modules/vision-system/#interface-utilisateur","title":"Interface utilisateur","text":""},{"location":"dev/02-systeme/modules/vision-system/#cercle-de-vision","title":"Cercle de vision","text":"<ul> <li>Cercle blanc affich\u00e9 uniquement autour de l'unit\u00e9 s\u00e9lectionn\u00e9e</li> <li>Diam\u00e8tre proportionnel \u00e0 la port\u00e9e de vision</li> <li>\u00c9paisseur configurable (2 pixels par d\u00e9faut)</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#controles","title":"Contr\u00f4les","text":"<ul> <li>Changement d'\u00e9quipe : Met automatiquement \u00e0 jour la visibilit\u00e9</li> <li>S\u00e9lection d'unit\u00e9 : Affiche le cercle de vision correspondant</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#optimisations-et-performances","title":"Optimisations et performances","text":""},{"location":"dev/02-systeme/modules/vision-system/#gestion-memoire","title":"Gestion m\u00e9moire","text":"<ul> <li>Images mises en cache par le SpriteManager</li> <li>D\u00e9coupes cr\u00e9\u00e9es \u00e0 la demande et non stock\u00e9es</li> <li>Ensembles de tuiles par \u00e9quipe pour \u00e9viter les conflits</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#performance-de-rendu","title":"Performance de rendu","text":"<ul> <li>Un sprite par tuile non visible (optimis\u00e9 pour les GPUs modernes)</li> <li>Calcul de visibilit\u00e9 uniquement lors des changements d'\u00e9quipe</li> <li>Clipping automatique des sprites hors \u00e9cran</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#debogage","title":"D\u00e9bogage","text":""},{"location":"dev/02-systeme/modules/vision-system/#messages-de-debug","title":"Messages de debug","text":"<ul> <li>\"Cloud requested but cloud_image is None\" : Image non charg\u00e9e</li> <li>Comptage des cercles de vision rendus par \u00e9quipe</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#outils-de-developpement","title":"Outils de d\u00e9veloppement","text":"<ul> <li>Vision \u00e9tendue disponible en mode debug</li> <li>Possibilit\u00e9 de r\u00e9v\u00e9ler toute la carte temporairement</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#evolutions-futures","title":"\u00c9volutions futures","text":""},{"location":"dev/02-systeme/modules/vision-system/#ameliorations-possibles","title":"Am\u00e9liorations possibles","text":"<ul> <li>Animation des nuages pour plus d'immersion</li> <li>Effets de particules pour les transitions de visibilit\u00e9</li> <li>Ligne de vue (line-of-sight) plus sophistiqu\u00e9e</li> <li>Brouillard dynamique r\u00e9agissant aux \u00e9v\u00e9nements</li> </ul>"},{"location":"dev/02-systeme/modules/vision-system/#integration","title":"Int\u00e9gration","text":"<ul> <li>Support des b\u00e2timents avec vision \u00e9tendue</li> <li>Capacit\u00e9s sp\u00e9ciales affectant la visibilit\u00e9</li> <li>Effets m\u00e9t\u00e9orologiques impactant le brouillard /home/lieserl/Documents/GitHub/Galad-Islands/docs/dev/modules/vision-system.md"},{"location":"dev/03-installation/requirements/","title":"Configuration d\u00e9veloppement","text":""},{"location":"dev/03-installation/requirements/#ce-quil-faut-pour-developper-galad-islands","title":"Ce qu'il faut pour d\u00e9velopper Galad Islands","text":""},{"location":"dev/03-installation/requirements/#prerequis-minimum","title":"Pr\u00e9requis minimum","text":"<ul> <li>Python 3.9+ </li> <li>2 GB RAM minimum (4 GB recommand\u00e9s)</li> <li>500 MB d'espace disque</li> </ul>"},{"location":"dev/03-installation/requirements/#installation-rapide","title":"Installation rapide","text":""},{"location":"dev/03-installation/requirements/#linux-ubuntudebian","title":"Linux (Ubuntu/Debian)","text":"<pre><code>sudo apt install python3 python3-pip python3-venv\nsudo apt install libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev\n</code></pre>"},{"location":"dev/03-installation/requirements/#windows","title":"Windows","text":"<ul> <li>Installer Python 3.9+ depuis python.org</li> </ul>"},{"location":"dev/03-installation/requirements/#macos","title":"macOS","text":"<pre><code>brew install python@3.9\nbrew install sdl2 sdl2_image sdl2_mixer\n</code></pre>"},{"location":"dev/03-installation/requirements/#setup-du-projet","title":"Setup du projet","text":"<pre><code># Cloner le projet\ngit clone https://github.com/Fydyr/Galad-Islands.git\ncd Galad-Islands\n\n# Cr\u00e9er l'environnement virtuel\npython3 -m venv venv\nsource venv/bin/activate  # Linux/macOS\n# ou venv\\Scripts\\activate  # Windows\n\n# Installer les d\u00e9pendances\npip install -r requirements.txt\n# Installer les d\u00e9pendances de d\u00e9veloppement\npip install -r requirements-dev.txt\n\n# Lancer le jeu\npython main.py\n</code></pre>"},{"location":"dev/03-installation/requirements/#dependances-python-principales","title":"D\u00e9pendances Python principales","text":"<pre><code># requirements.txt (version de production)\nesper==3.4\nllvmlite==0.44.0\nnumba==0.61.2\nnumpy==2.2.6\npygame==2.6.1\nPillow==10.4.0\ntomli==1.2.0\n\n# requirements-dev.txt (d\u00e9veloppement)\nmarkdown==3.9.0\ntkhtmlview==0.3.1\ncommitizen==4.9.1\nmkdocs==1.5.2\nmkdocs-material==9.1.15\nmkdocs-static-i18n==1.2.3\n</code></pre>"},{"location":"dev/03-installation/requirements/#verifier-que-tout-fonctionne","title":"V\u00e9rifier que tout fonctionne","text":"<pre><code>python -c \"import pygame, esper; print('\u2705 Setup OK')\"\n</code></pre> <p>C'est tout ! Si \u00e7a marche, tu peux d\u00e9velopper.</p>"},{"location":"dev/04-configuration/configuration/","title":"Configuration du projet","text":""},{"location":"dev/04-configuration/configuration/#creation-dun-environnement-virtuel","title":"Cr\u00e9ation d'un environnement virtuel","text":"<p>Un environnement virtuel permet d'ex\u00e9cuter un programme avec des d\u00e9pendences, ainsi que leur versions pr\u00e9cises, peut importe celles d\u00e9j\u00e0 install\u00e9es sur le syst\u00e8me. Cela permet d'emp\u00eacher tout probl\u00e8me d'incompatibilit\u00e9.</p> <p><code>cd emplacement/du/dossier</code> <code>bash python -m venv myenv</code> 'myenv' est le nom du fichier contenant l'environnement virtuel.(venv) est maintenant afficher dans l'invit\u00e9 de commande</p> <p>Pour activer le venv, il existe plusieurs moyens en fonction de l'invit\u00e9 de commande utilis\u00e9.</p> <ul> <li> <p>Windows (Command Prompt) <code>myenv\\Scripts\\activate.bat</code></p> </li> <li> <p>Windows (PowerShell) <code>\\myenv\\Scripts\\Activate.ps1</code></p> </li> <li> <p>macOS/Linux (Bash) <code>source myenv/bin/activate</code></p> </li> </ul> <p>Pour quitter l'environnement virtuel et revenir \u00e0 l'invit\u00e9 de commande de base, il faut simplement entrer <code>exit</code></p>"},{"location":"dev/04-configuration/configuration/#fichier-de-dependences","title":"Fichier de d\u00e9pendences","text":"<p>Le fichier requirements.txt contient toutes les d\u00e9pendances n\u00e9cessaires au bon fonctionnement du jeu. Pour installer celle-ci, il faut simplement entrer cette commande dans l'invit\u00e9 de commande \u00e0 l'emplacement de la racine du jeu: <code>cd emplacement/du/dossier</code> <code>pip install -r requirements.txt</code></p>"},{"location":"dev/04-configuration/configuration/#configuration-du-jeu","title":"Configuration du jeu","text":""},{"location":"dev/04-configuration/configuration/#fichier-de-configuration","title":"Fichier de configuration","text":"<p>Le jeu utilise un fichier <code>galad_config.json</code> pour stocker les pr\u00e9f\u00e9rences utilisateur :</p> <pre><code>{\n\"language\": \"french\",\n\"fullscreen\": false,\n\"resolution\": [1280, 720],\n\"volume\": 0.7,\n\"dev_mode\": false\n}\n</code></pre>"},{"location":"dev/04-configuration/configuration/#mode-developpeur","title":"Mode d\u00e9veloppeur","text":"<p>Le param\u00e8tre <code>dev_mode</code> contr\u00f4le l'activation des fonctionnalit\u00e9s de debug et de d\u00e9veloppement.</p> <p>\ud83d\udcd6 Documentation compl\u00e8te : Voir Mode Debug pour tous les d\u00e9tails sur le mode d\u00e9veloppeur.</p> <p>Activation :</p> <ul> <li>Modifier <code>\"dev_mode\": false</code> en <code>\"dev_mode\": true</code> dans <code>galad_config.json</code></li> <li>Relancer le jeu</li> </ul> <p>Fonctionnalit\u00e9s activ\u00e9es :</p> <ul> <li>Bouton debug dans l'ActionBar</li> <li>Modale de triche (gold, heal, spawn)</li> <li>Logs de d\u00e9veloppement suppl\u00e9mentaires</li> </ul>"},{"location":"dev/04-configuration/configuration/#configmanager","title":"ConfigManager","text":"<p>Fichier : <code>src/managers/config_manager.py</code></p> <p>Gestionnaire de configuration centralis\u00e9 pour lire et modifier les param\u00e8tres :</p> <pre><code>from src.managers.config_manager import ConfigManager\n\n# Lecture\ncfg = ConfigManager()\ndev_mode = cfg.get('dev_mode', False)\nlanguage = cfg.get('language', 'french')\n\n# \u00c9criture\ncfg.set('volume', 0.8)\ncfg.save()\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/","title":"Mode Debug / Mode D\u00e9veloppeur","text":""},{"location":"dev/04-configuration/debug-mode/#vue-densemble","title":"Vue d'ensemble","text":"<p>Le mode debug (ou mode d\u00e9veloppeur) est un syst\u00e8me permettant d'activer des fonctionnalit\u00e9s de d\u00e9veloppement et de d\u00e9bogage dans Galad Islands. Il est contr\u00f4l\u00e9 par le param\u00e8tre <code>dev_mode</code> dans la configuration du jeu.</p>"},{"location":"dev/04-configuration/debug-mode/#configuration","title":"Configuration","text":""},{"location":"dev/04-configuration/debug-mode/#activation-du-mode-debug","title":"Activation du mode debug","text":"<p>Fichier de configuration : <code>galad_config.json</code> ou configuration utilisateur</p> <pre><code>{\n\"language\": \"french\",\n\"fullscreen\": false,\n\"resolution\": [1280, 720],\n\"volume\": 0.7,\n\"dev_mode\": true,  // \u2190 Activer le mode d\u00e9veloppeur\n// ... autres param\u00e8tres\n}\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#valeur-par-defaut","title":"Valeur par d\u00e9faut","text":"<p>Fichier : <code>src/settings/settings.py</code></p> <pre><code>DEFAULT_CONFIG = {\n    \"language\": \"french\",\n    \"fullscreen\": False,\n    \"resolution\": [1280, 720],\n    \"volume\": 0.7,\n    \"dev_mode\": False,  # D\u00e9sactiv\u00e9 par d\u00e9faut en production\n    # ... autres param\u00e8tres\n}\n</code></pre> <p>Important : Le mode debug est d\u00e9sactiv\u00e9 par d\u00e9faut pour \u00e9viter que les joueurs n'aient acc\u00e8s aux fonctionnalit\u00e9s de triche.</p>"},{"location":"dev/04-configuration/debug-mode/#fonctionnalites-activees-en-mode-debug","title":"Fonctionnalit\u00e9s activ\u00e9es en mode debug","text":""},{"location":"dev/04-configuration/debug-mode/#1-bouton-debug-dans-lactionbar","title":"1. Bouton \"Debug\" dans l'ActionBar","text":"<p>Fichier : <code>src/ui/action_bar.py</code></p> <p>Le bouton debug appara\u00eet dans la barre d'action globale uniquement si <code>dev_mode</code> est activ\u00e9.</p>"},{"location":"dev/04-configuration/debug-mode/#creation-conditionnelle-du-bouton","title":"Cr\u00e9ation conditionnelle du bouton","text":"<pre><code>def _initialize_buttons(self):\n\"\"\"Initialise les boutons de la barre d'action.\"\"\"\n    # ... autres boutons\n\n    global_buttons = [\n        ActionButton(...),  # Autres boutons globaux\n    ]\n\n    # V\u00e9rifier si le mode debug ou dev_mode est activ\u00e9\n    if ConfigManager().get('dev_mode', False):\n        global_buttons.append(\n            ActionButton(\n                action_type=ActionType.DEV_GIVE_GOLD,\n                text=t(\"actionbar.debug_menu\"),\n                cost=0,\n                hotkey=\"\",\n                tooltip=t(\"debug.modal.title\"),\n                is_global=True,\n                callback=self._toggle_debug_menu\n            )\n        )\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#visibilite-dynamique","title":"Visibilit\u00e9 dynamique","text":"<p>Le bouton v\u00e9rifie \u00e9galement le flag <code>show_debug</code> du moteur de jeu :</p> <pre><code>def _update_button_positions(self):\n\"\"\"Met \u00e0 jour les positions et la visibilit\u00e9 des boutons.\"\"\"\n    # ... positionnement des boutons\n\n    cfg = ConfigManager()\n    dev_mode = cfg.get('dev_mode', False)\n\n    for btn in global_buttons:\n        if btn.action_type == ActionType.DEV_GIVE_GOLD:\n            # Visible si dev_mode OU si le moteur est en debug\n            is_debug = hasattr(self, 'game_engine') and \\\n                       self.game_engine and \\\n                       getattr(self.game_engine, 'show_debug', False)\n            btn.visible = bool(dev_mode or is_debug)\n</code></pre> <p>R\u00e9sultat :</p> <ul> <li>\u2705 <code>dev_mode: true</code> \u2192 Bouton visible</li> <li>\u274c <code>dev_mode: false</code> \u2192 Bouton cach\u00e9</li> </ul>"},{"location":"dev/04-configuration/debug-mode/#2-modal-de-debug","title":"2. Modal de debug","text":"<p>Fichier : <code>src/ui/debug_modal.py</code></p> <p>Lorsque le bouton debug est cliqu\u00e9, une modale s'ouvre avec plusieurs options :</p>"},{"location":"dev/04-configuration/debug-mode/#fonctionnalites-de-la-modale","title":"Fonctionnalit\u00e9s de la modale","text":"<pre><code>class DebugModal:\n\"\"\"Interface de debug pour les d\u00e9veloppeurs.\"\"\"\n\n    def __init__(self, game_engine):\n        self.game_engine = game_engine\n        self.visible = False\n        self.options = [\n            {\"label\": \"Donner 1000 gold\", \"action\": self._give_gold},\n            {\"label\": \"Cr\u00e9er une temp\u00eate\", \"action\": self._spawn_storm},\n            {\"label\": \"Cr\u00e9er des coffres\", \"action\": self._spawn_chest},\n            {\"label\": \"Cr\u00e9er un kraken\", \"action\": self._spawn_kraken},\n            {\"label\": \"Cr\u00e9er des ressources d'\u00eeles\", \"action\": self._spawn_island_resources},\n            {\"label\": \"Nettoyer les \u00e9v\u00e9nements\", \"action\": self._clear_events},\n        ]\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#actions-disponibles","title":"Actions disponibles","text":"<p>Le modal de debug offre maintenant plusieurs actions pour faciliter le d\u00e9veloppement et les tests :</p> <ol> <li>Donner de l'or : Ajoute 500 gold au joueur actif</li> </ol> <pre><code>def _handle_give_gold(self):\n    # Donne de l'or \u00e0 la team active (alli\u00e9s ou ennemis)\n    active_team = self.game_engine.action_bar.current_camp\n    for entity, (player_comp, team_comp) in esper.get_components(PlayerComponent, TeamComponent):\n        if team_comp.team_id == active_team:\n            player_comp.add_gold(500)\n</code></pre> <ol> <li>Cr\u00e9er une temp\u00eate : Force l'apparition d'une temp\u00eate \u00e0 une position al\u00e9atoire</li> </ol> <pre><code>def _handle_spawn_storm(self):\n    storm_manager = getStormManager()\n    position = storm_manager.findValidSpawnPosition()\n    if position:\n        storm_entity = storm_manager.createStormEntity(position)\n</code></pre> <ol> <li>Cr\u00e9er des coffres : Force l'apparition de 2-4 coffres volants</li> </ol> <pre><code>def _handle_spawn_chest(self):\n    chest_manager = self.game_engine.flying_chest_manager\n    num_chests = random.randint(2, 4)\n    for _ in range(num_chests):\n        position = chest_manager._choose_spawn_position()\n        if position:\n            chest_manager._create_chest_entity(position)\n</code></pre> <ol> <li>Cr\u00e9er un kraken : Force l'apparition d'un kraken avec 2-6 tentacules</li> </ol> <pre><code>def _handle_spawn_kraken(self):\n    kraken_entity = esper.create_entity()\n    esper.add_component(kraken_entity, KrakenComponent(2, 6, 1))\n    esper.add_component(kraken_entity, EventsComponent(0.0, 20.0, 20.0))\n</code></pre> <ol> <li>Cr\u00e9er des ressources d'\u00eeles : Force l'apparition de 2-3 ressources d'or sur les \u00eeles</li> </ol> <pre><code>def _handle_spawn_island_resources(self):\n    resource_manager = self.game_engine.island_resource_manager\n    num_resources = random.randint(2, 3)\n    for _ in range(num_resources):\n        position = resource_manager._choose_spawn_position()\n        if position:\n            resource_manager._create_resource_entity(position)\n</code></pre> <ol> <li>Nettoyer les \u00e9v\u00e9nements : Supprime tous les \u00e9v\u00e9nements actifs (temp\u00eates, coffres, krakens, ressources)</li> </ol> <pre><code>def _handle_clear_events(self):\n    # Nettoie les temp\u00eates\n    storm_manager.clearAllStorms()\n    # Supprime les coffres volants, krakens, tentacules et ressources d'\u00eeles\n    for entity, component in esper.get_component(EventComponent):\n        esper.delete_entity(entity)\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#utilisation-du-configmanager","title":"Utilisation du ConfigManager","text":""},{"location":"dev/04-configuration/debug-mode/#lecture-de-la-configuration","title":"Lecture de la configuration","text":"<p>Fichier : <code>src/managers/config_manager.py</code></p> <pre><code>from src.managers.config_manager import ConfigManager\n\n# V\u00e9rifier si le mode debug est activ\u00e9\ncfg = ConfigManager()\nis_dev_mode = cfg.get('dev_mode', False)\n\nif is_dev_mode:\n    print(\"Mode d\u00e9veloppeur activ\u00e9\")\n    # Activer fonctionnalit\u00e9s de debug\nelse:\n    print(\"Mode production\")\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#modification-de-la-configuration","title":"Modification de la configuration","text":"<pre><code># Activer le mode debug\ncfg = ConfigManager()\ncfg.set('dev_mode', True)\ncfg.save()  # Sauvegarder dans galad_config.json\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#architecture-de-verification","title":"Architecture de v\u00e9rification","text":""},{"location":"dev/04-configuration/debug-mode/#double-verification-de-securite","title":"Double v\u00e9rification de s\u00e9curit\u00e9","text":"<p>Le syst\u00e8me utilise deux m\u00e9thodes pour contr\u00f4ler l'affichage des fonctionnalit\u00e9s de debug :</p> <ol> <li>V\u00e9rification \u00e0 la cr\u00e9ation (<code>_initialize_buttons()</code>)</li> <li>V\u00e9rifie <code>dev_mode</code> une seule fois au d\u00e9marrage</li> <li> <p>Cr\u00e9e ou non le bouton debug</p> </li> <li> <p>V\u00e9rification dynamique (<code>_update_button_positions()</code>)</p> </li> <li>V\u00e9rifie <code>dev_mode</code> ET <code>show_debug</code> \u00e0 chaque mise \u00e0 jour</li> <li>Permet de cacher/montrer le bouton sans red\u00e9marrer</li> </ol> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502       D\u00e9marrage du jeu                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                 \u2502\n                 \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  ConfigManager.get('dev_mode')           \u2502\n\u2502  V\u00e9rification dans galad_config.json    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                 \u2502\n         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n         \u2502                \u2502\n         \u25bc                \u25bc\n    dev_mode=true    dev_mode=false\n         \u2502                \u2502\n         \u2502                \u2502\n         \u25bc                \u25bc\n   Bouton cr\u00e9\u00e9      Bouton NON cr\u00e9\u00e9\n         \u2502\n         \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  _update_button_positions()              \u2502\n\u2502  V\u00e9rification continue                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                 \u2502\n         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n         \u2502                \u2502\n         \u25bc                \u25bc\n    Visible=True    Visible=False\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#bonnes-pratiques","title":"Bonnes pratiques","text":""},{"location":"dev/04-configuration/debug-mode/#pour-les-developpeurs","title":"Pour les d\u00e9veloppeurs","text":""},{"location":"dev/04-configuration/debug-mode/#a-faire","title":"\u2705 \u00c0 faire","text":"<pre><code># Utiliser ConfigManager pour v\u00e9rifier le mode debug\nif ConfigManager().get('dev_mode', False):\n    # Code de debug\n    print(f\"Debug: Position = {pos.x}, {pos.y}\")\n</code></pre> <pre><code># Toujours avoir une valeur par d\u00e9faut False\ndev_mode = cfg.get('dev_mode', False)\n</code></pre> <pre><code># Utiliser des fonctionnalit\u00e9s conditionnelles\ndef spawn_enemy(self):\n\"\"\"Spawne un ennemi.\"\"\"\n    enemy = create_enemy(...)\n\n    # Log uniquement en mode debug\n    if ConfigManager().get('dev_mode', False):\n        print(f\"Enemy spawned: {enemy} at position {x}, {y}\")\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#a-eviter","title":"\u274c \u00c0 \u00e9viter","text":"<pre><code># NE PAS hard-coder True\nif True:  # \u274c Mauvais\n    show_debug_button()\n</code></pre> <pre><code># NE PAS utiliser get() sans valeur par d\u00e9faut\ndev_mode = cfg.get('dev_mode')  # \u274c Peut retourner None\n</code></pre> <pre><code># NE PAS oublier la v\u00e9rification\ndef _give_gold_cheat(self):\n    # \u274c Pas de v\u00e9rification dev_mode !\n    self.player.add_gold(9999)\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#pour-les-joueurs","title":"Pour les joueurs","text":"<ol> <li>Activer le mode debug :</li> <li>Ouvrir <code>galad_config.json</code></li> <li>Changer <code>\"dev_mode\": false</code> en <code>\"dev_mode\": true</code></li> <li> <p>Relancer le jeu</p> </li> <li> <p>Utiliser les fonctionnalit\u00e9s :</p> </li> <li>Le bouton \"Debug\" appara\u00eet en haut \u00e0 droite de l'ActionBar</li> <li> <p>Cliquer dessus pour ouvrir le menu debug</p> </li> <li> <p>D\u00e9sactiver le mode debug :</p> </li> <li>Remettre <code>\"dev_mode\": false</code> dans la config</li> <li>Relancer le jeu</li> </ol>"},{"location":"dev/04-configuration/debug-mode/#ajout-de-nouvelles-fonctionnalites-debug","title":"Ajout de nouvelles fonctionnalit\u00e9s debug","text":""},{"location":"dev/04-configuration/debug-mode/#exemple-ajouter-un-toggle-pour-afficher-la-grille","title":"Exemple : Ajouter un toggle pour afficher la grille","text":""},{"location":"dev/04-configuration/debug-mode/#1-ajouter-laction-dans-la-modale-debug","title":"1. Ajouter l'action dans la modale debug","text":"<p>Fichier : <code>src/ui/debug_modal.py</code></p> <pre><code>def __init__(self, game_engine):\n    self.game_engine = game_engine\n    self.show_grid = False  # Nouvel \u00e9tat\n    self.options = [\n        # ... autres options\n        {\n            \"label\": \"Toggle Grid\", \n            \"action\": self._toggle_grid\n        },\n    ]\n\ndef _toggle_grid(self):\n\"\"\"Active/d\u00e9sactive l'affichage de la grille.\"\"\"\n    self.show_grid = not self.show_grid\n    print(f\"Grid display: {self.show_grid}\")\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#2-utiliser-letat-dans-le-rendu","title":"2. Utiliser l'\u00e9tat dans le rendu","text":"<p>Fichier : <code>src/processeurs/renderingProcessor.py</code></p> <pre><code>def process(self):\n    # Rendu normal\n    # ...\n\n    # Afficher la grille si debug activ\u00e9\n    if ConfigManager().get('dev_mode', False):\n        debug_modal = getattr(self.game_engine, 'debug_modal', None)\n        if debug_modal and debug_modal.show_grid:\n            self._render_debug_grid()\n\ndef _render_debug_grid(self):\n\"\"\"Affiche une grille de debug.\"\"\"\n    for x in range(0, WORLD_WIDTH, 32):\n        pygame.draw.line(self.screen, (50, 50, 50), \n                        (x, 0), (x, WORLD_HEIGHT))\n    for y in range(0, WORLD_HEIGHT, 32):\n        pygame.draw.line(self.screen, (50, 50, 50), \n                        (0, y), (WORLD_WIDTH, y))\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#securite","title":"S\u00e9curit\u00e9","text":""},{"location":"dev/04-configuration/debug-mode/#protection-en-production","title":"Protection en production","text":"<p>Le mode debug est automatiquement d\u00e9sactiv\u00e9 en production gr\u00e2ce \u00e0 :</p> <ol> <li>Valeur par d\u00e9faut : <code>dev_mode: False</code> dans <code>DEFAULT_CONFIG</code></li> <li>Pas d'interface : Aucun moyen d'activer le mode debug depuis le jeu</li> <li>Configuration externe : N\u00e9cessite modification manuelle du fichier config</li> </ol>"},{"location":"dev/04-configuration/debug-mode/#distribution-du-jeu","title":"Distribution du jeu","text":"<p>Lors de la distribution finale :</p> <pre><code># Dans settings.py, s'assurer que :\nDEFAULT_CONFIG = {\n    # ... autres param\u00e8tres\n    \"dev_mode\": False,  # \u2190 TOUJOURS False en production\n}\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#logs-de-developpement","title":"Logs de d\u00e9veloppement","text":"<p>Utiliser le mode debug pour contr\u00f4ler les logs :</p> <pre><code>def log_debug(message: str):\n\"\"\"Affiche un message uniquement en mode debug.\"\"\"\n    if ConfigManager().get('dev_mode', False):\n        print(f\"[DEBUG] {message}\")\n\n# Utilisation\nlog_debug(\"Position de l'unit\u00e9 mise \u00e0 jour\")  # Visible seulement si dev_mode=True\n</code></pre>"},{"location":"dev/04-configuration/debug-mode/#resume","title":"R\u00e9sum\u00e9","text":"Aspect D\u00e9tail Param\u00e8tre <code>dev_mode</code> dans <code>galad_config.json</code> Valeur par d\u00e9faut <code>False</code> (d\u00e9sactiv\u00e9) Activation Modifier manuellement le fichier config Fonctionnalit\u00e9s Bouton debug, modale avec cheats, logs additionnels S\u00e9curit\u00e9 Aucun moyen d'activer depuis l'interface du jeu V\u00e9rification <code>ConfigManager().get('dev_mode', False)</code>"},{"location":"dev/04-configuration/debug-mode/#fichiers-concernes","title":"Fichiers concern\u00e9s","text":"Fichier R\u00f4le <code>src/settings/settings.py</code> D\u00e9finition de <code>DEFAULT_CONFIG</code> avec <code>dev_mode: False</code> <code>src/managers/config_manager.py</code> Lecture/\u00e9criture de la configuration <code>src/ui/action_bar.py</code> Cr\u00e9ation conditionnelle du bouton debug <code>src/ui/debug_modal.py</code> Interface de debug avec fonctionnalit\u00e9s de triche <code>galad_config.json</code> Configuration utilisateur (o\u00f9 activer <code>dev_mode</code>)"},{"location":"dev/04-configuration/debug-mode/#voir-aussi","title":"Voir aussi","text":"<ul> <li>UI System - Syst\u00e8me d'interface utilisateur</li> <li>Configuration - Param\u00e8tres du jeu</li> </ul> <p>Version : 1.0.0 Derni\u00e8re mise \u00e0 jour : Octobre 2025</p>"},{"location":"dev/04-configuration/galad-config-tool-technical/","title":"Galad Config Tool - Documentation technique","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#architecture-generale","title":"\ud83d\udccb Architecture g\u00e9n\u00e9rale","text":"<p>Le Galad Config Tool (<code>tools/galad_config.py</code>) est un utilitaire Tkinter autonome de 546 lignes qui r\u00e9plique et \u00e9tend l'interface d'options du jeu principal. Il fonctionne en lecture/\u00e9criture directe des fichiers de configuration JSON.</p>"},{"location":"dev/04-configuration/galad-config-tool-technical/#structure-du-code","title":"\ud83c\udfd7\ufe0f Structure du code","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#classes-principales","title":"Classes principales","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#galadconfigapptktk","title":"<code>GaladConfigApp(tk.Tk)</code>","text":"<p>Classe principale h\u00e9ritant de <code>tk.Tk</code>, g\u00e8re l'application compl\u00e8te.</p> <p>M\u00e9thodes d'initialisation : <pre><code>def __init__(self):\n    # Initialisation de la fen\u00eatre principale\n    # Chargement de la configuration\n    # Construction de l'UI\n    # Gestion des fichiers manquants avec popups messagebox\n</code></pre></p> <p>Attributs cl\u00e9s :</p> <ul> <li><code>self.config</code> : Dict contenant la configuration charg\u00e9e</li> <li><code>self.config_path</code> : Path vers galad_config.json</li> <li><code>self.resolutions_path</code> : Path vers galad_resolutions.json</li> <li><code>self.notebook</code> : Widget ttk.Notebook pour les onglets</li> </ul>"},{"location":"dev/04-configuration/galad-config-tool-technical/#configuration-et-persistance","title":"Configuration et persistance","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#chargement-de-configuration","title":"Chargement de configuration","text":"<pre><code>def load_config(self):\n\"\"\"Charge le fichier galad_config.json avec gestion d'erreurs\"\"\"\n    try:\n        # Lecture JSON avec fallback sur valeurs par d\u00e9faut\n        # Gestion des fichiers manquants avec messagebox.showwarning\n        # Cr\u00e9ation automatique si n\u00e9cessaire\n    except Exception as e:\n        messagebox.showerror(\"Erreur\", f\"Erreur de chargement: {e}\")\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#sauvegarde","title":"Sauvegarde","text":"<pre><code>def save_config(self):\n\"\"\"Sauvegarde imm\u00e9diate dans galad_config.json\"\"\"\n    # \u00c9criture JSON avec indentation\n    # Gestion d'erreurs avec messagebox.showerror\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#interface-utilisateur-architecture-par-onglets","title":"Interface utilisateur - Architecture par onglets","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#onglet-display-_build_display_tab","title":"Onglet Display (<code>_build_display_tab</code>)","text":"<p>Widgets principaux : - <code>ttk.Combobox</code> pour s\u00e9lection r\u00e9solution avec <code>bind(\"&lt;&lt;ComboboxSelected&gt;&gt;\")</code> - <code>ttk.Checkbutton</code> pour mode fen\u00eatre avec <code>command=self._on_windowed_changed</code> - <code>ttk.Scale</code> pour sensibilit\u00e9 cam\u00e9ra avec <code>command=self._on_camera_changed</code> - <code>ttk.Combobox</code> pour langue avec callback imm\u00e9diat</p> <p>Gestion des r\u00e9solutions :</p> <pre><code>def _refresh_resolutions(self):\n\"\"\"Met \u00e0 jour la liste des r\u00e9solutions (builtin + custom)\"\"\"\n    # Combine r\u00e9solutions pr\u00e9d\u00e9finies et personnalis\u00e9es\n    # Marque les customs avec text du locale\n    # Met \u00e0 jour le combobox values\n</code></pre> <p>Ajout de r\u00e9solutions :</p> <pre><code>def _add_resolution(self):\n\"\"\"Ajoute une r\u00e9solution personnalis\u00e9e\"\"\"\n    # Validation des entr\u00e9es largeur/hauteur\n    # \u00c9vite les doublons\n    # Sauvegarde imm\u00e9diate dans galad_resolutions.json\n    # Refresh de l'interface\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#onglet-audio-_build_audio_tab","title":"Onglet Audio (<code>_build_audio_tab</code>)","text":"<p>Widgets principaux :</p> <ul> <li><code>ttk.Scale</code> avec <code>command=self._on_volume_changed</code></li> <li><code>ttk.Label</code> pour affichage pourcentage en temps r\u00e9el</li> </ul> <p>Mise \u00e0 jour en temps r\u00e9el :</p> <pre><code>def _on_volume_changed(self, value):\n\"\"\"Callback slider volume\"\"\"\n    # Conversion float et mise \u00e0 jour config\n    # Update imm\u00e9diat du label pourcentage\n    # Pas de sauvegarde (fait au clic Apply)\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#onglet-controls-_build_controls_tab","title":"Onglet Controls (<code>_build_controls_tab</code>)","text":"<p>Architecture scrollable :</p> <pre><code># Canvas + Scrollbar pour navigation fluide\ncontrols_canvas = tk.Canvas(controls_frame)\nscrollbar = ttk.Scrollbar(controls_frame, orient=\"vertical\", command=controls_canvas.yview)\nscrollable_frame = ttk.Frame(controls_canvas)\n\n# Configuration du scrolling\ncontrols_canvas.configure(yscrollcommand=scrollbar.set)\ncontrols_canvas.bind('&lt;Configure&gt;', lambda e: controls_canvas.configure(scrollregion=controls_canvas.bbox(\"all\")))\n</code></pre> <p>Groupes de contr\u00f4les :</p> <pre><code>control_groups = {\n    \"Commandes d'unit\u00e9\": [\"unit_move_forward\", \"unit_move_backward\", ...],\n    \"Contr\u00f4les cam\u00e9ra\": [\"camera_move_up\", \"camera_move_down\", ...],\n    \"S\u00e9lection\": [\"select_all_units\", \"target_unit\", ...],\n    \"Syst\u00e8me\": [\"toggle_pause\", \"show_help\", ...],\n    \"Groupes de contr\u00f4le\": [\"assign_group_1\", \"select_group_1\", ...]\n}\n</code></pre> <p>Widgets dynamiques :</p> <pre><code>for group_name, keys in control_groups.items():\n    # Cr\u00e9ation LabelFrame pour chaque groupe\n    # G\u00e9n\u00e9ration ttk.Combobox pour chaque touche\n    # Bind sur &lt;&lt;ComboboxSelected&gt;&gt; pour sauvegarde imm\u00e9diate\n    # Utilisation de lambda avec default parameter pour closure\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#onglet-configuration-_build_config_tab","title":"Onglet Configuration (<code>_build_config_tab</code>)","text":"<p>S\u00e9lection de fichiers :</p> <pre><code>def _browse_config_file(self):\n\"\"\"Dialog s\u00e9lection galad_config.json\"\"\"\n    filename = filedialog.askopenfilename(\n        title=\"S\u00e9lectionner le fichier de configuration\",\n        filetypes=[(\"Fichiers JSON\", \"*.json\"), (\"Tous les fichiers\", \"*.*\")],\n        initialdir=str(CONFIG_PATH.parent)\n    )\n    # Validation du fichier s\u00e9lectionn\u00e9\n    # Mise \u00e0 jour des Entry widgets\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#localisation-et-changement-de-langue","title":"Localisation et changement de langue","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#systeme-de-traduction-extensible","title":"Syst\u00e8me de traduction extensible","text":"<pre><code># Import du syst\u00e8me de localisation centralis\u00e9\nfrom src.settings.localization import get_available_languages, get_current_language, set_language, t\n\n# Menu d\u00e9roulant extensible pour les langues\nself.langs_dict = get_available_languages()  # {\"fr\": \"Fran\u00e7ais\", \"en\": \"English\"}\nlang_names = list(self.langs_dict.values())  # [\"Fran\u00e7ais\", \"English\"]\nself.lang_combo = ttk.Combobox(frm, values=lang_names, state=\"readonly\")\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#ajout-dune-nouvelle-langue","title":"Ajout d'une nouvelle langue","text":"<p>\u00c9tape 1 - Cr\u00e9er le fichier de traductions :</p> <pre><code># assets/locales/spanish.py\nTRANSLATIONS = {\n    \"options.display\": \"Pantalla\",\n    \"options.audio\": \"Audio\",\n    # ... toutes les cl\u00e9s traduites\n}\n</code></pre> <p>\u00c9tape 2 - Mettre \u00e0 jour le LocalizationManager :</p> <pre><code># Dans src/settings/localization.py\nlanguage_modules = {\n    \"fr\": \"assets.locales.french\",\n    \"en\": \"assets.locales.english\", \n    \"es\": \"assets.locales.spanish\"  # Nouveau\n}\n\ndef get_available_languages(self):\n    return {\n        \"fr\": \"Fran\u00e7ais\",\n        \"en\": \"English\",\n        \"es\": \"Espa\u00f1ol\"  # Nouveau\n    }\n</code></pre> <p>\u00c9tape 3 - Le tool s'adapte automatiquement :</p> <ul> <li>Le combobox affiche \"Espa\u00f1ol\" dans la liste</li> <li>La s\u00e9lection fonctionne imm\u00e9diatement</li> <li>Aucune modification du code UI n\u00e9cessaire</li> </ul>"},{"location":"dev/04-configuration/galad-config-tool-technical/#mise-a-jour-dynamique-de-lui","title":"Mise \u00e0 jour dynamique de l'UI","text":"<pre><code>def _refresh_ui_texts(self):\n\"\"\"Met \u00e0 jour tous les textes de l'interface\"\"\"\n    try:\n        # Parcours r\u00e9cursif de tous les widgets\n        # Identification par winfo_name() ou attributs personnalis\u00e9s\n        # Mise \u00e0 jour des text/title selon le type de widget\n        for widget in self.winfo_children():\n            self._update_widget_texts(widget)\n    except Exception as e:\n        messagebox.showwarning(\"Avertissement\", f\"Erreur mise \u00e0 jour UI: {e}\")\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#gestion-des-fichiers-de-configuration","title":"\ud83d\udd27 Gestion des fichiers de configuration","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#chemins-et-resolution","title":"Chemins et r\u00e9solution","text":"<pre><code># Utilisation de pathlib pour gestion cross-platform\nCONFIG_PATH = Path(__file__).parent.parent / \"galad_config.json\"\nRES_PATH = Path(__file__).parent.parent / \"galad_resolutions.json\"\n\n# R\u00e9solution dynamique via onglet Configuration\ndef _apply_paths(self):\n\"\"\"Applique les nouveaux chemins de fichiers\"\"\"\n    # Validation d'existence des dossiers\n    # Mise \u00e0 jour des paths globaux\n    # Rechargement de la configuration\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#format-des-donnees","title":"Format des donn\u00e9es","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#galad_configjson","title":"<code>galad_config.json</code>","text":"<pre><code>DEFAULT_CONFIG = {\n    \"window_mode\": \"windowed\",\n    \"screen_width\": 1920,\n    \"screen_height\": 1080,\n    \"volume_music\": 0.7,\n    \"camera_sensitivity\": 1.5,\n    \"language\": \"fr\",\n    \"key_bindings\": {\n        # Mapping complet des touches par action\n        \"unit_move_forward\": [\"z\"],\n        \"camera_move_up\": [\"up\"],\n        # ... 40+ bindings\n    }\n}\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#galad_resolutionsjson","title":"<code>galad_resolutions.json</code>","text":"<pre><code># Format: Array de [width, height]\n[\n    [1920, 1011],\n    [2560, 1440],\n    [3840, 2160]\n]\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#fonctions-utilitaires","title":"Fonctions utilitaires","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#gestion-des-resolutions","title":"Gestion des r\u00e9solutions","text":"<pre><code>def load_custom_resolutions():\n\"\"\"Charge les r\u00e9solutions personnalis\u00e9es\"\"\"\n    # Lecture JSON avec fallback sur liste vide\n    # Validation du format [width, height]\n\ndef save_resolutions_list(res_list):\n\"\"\"Sauvegarde les r\u00e9solutions personnalis\u00e9es\"\"\"\n    # \u00c9criture JSON avec gestion d'erreurs\n    # Popup messagebox.showerror en cas d'\u00e9chec\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#integration-avec-le-systeme-de-resolutions-du-jeu","title":"Int\u00e9gration avec le syst\u00e8me de r\u00e9solutions du jeu","text":"<pre><code># Le jeu utilise src.settings.resolutions.get_all_resolutions()\n# qui combine automatiquement builtin + custom\ndef get_all_resolutions():\n    builtin = [(1920, 1080), (1366, 768), ...]  # R\u00e9solutions standard\n    custom = load_custom_resolutions()          # R\u00e9solutions ajout\u00e9es\n    return [(w, h, label) for w, h in builtin + custom]\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#compilation-et-distribution","title":"\ud83d\ude80 Compilation et distribution","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#pyinstaller","title":"PyInstaller","text":"<pre><code>pyinstaller --onefile --windowed tools/galad_config.py --name galad-config-tool \\\n--add-data \"assets/locales:assets/locales\" \\\n--add-data \"src:src\"\n</code></pre> <p>Param\u00e8tres critiques :</p> <ul> <li><code>--onefile</code> : Ex\u00e9cutable autonome</li> <li><code>--windowed</code> : Pas de console (GUI uniquement)</li> <li><code>--add-data</code> : Inclusion des d\u00e9pendances pour imports dynamiques</li> </ul>"},{"location":"dev/04-configuration/galad-config-tool-technical/#flux-de-donnees","title":"\ud83d\udcca Flux de donn\u00e9es","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#workflow-de-modification","title":"Workflow de modification","text":"<ol> <li>Chargement : <code>load_config()</code> \u2192 <code>self.config</code> dict</li> <li>Interface : Widgets bind\u00e9s aux valeurs config</li> <li>Modification : Callbacks mettent \u00e0 jour <code>self.config</code></li> <li>Persistance : <code>save_config()</code> au clic \"Apply\"</li> </ol>"},{"location":"dev/04-configuration/galad-config-tool-technical/#synchronisation-avec-le-jeu","title":"Synchronisation avec le jeu","text":"<ul> <li>Lecture partag\u00e9e : M\u00eame fichiers JSON</li> <li>Pas de communication runtime : Config au d\u00e9marrage du jeu</li> <li>Hot-reload : Non support\u00e9, red\u00e9marrage jeu requis</li> </ul>"},{"location":"dev/04-configuration/galad-config-tool-technical/#gestion-derreurs-et-robustesse","title":"\ud83e\uddea Gestion d'erreurs et robustesse","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#validation-des-entrees","title":"Validation des entr\u00e9es","text":"<pre><code># R\u00e9solutions : Validation num\u00e9rique avec try/except\n# Chemins de fichiers : V\u00e9rification Path.exists()\n# JSON : Fallback sur valeurs par d\u00e9faut si parsing \u00e9choue\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#messages-utilisateur","title":"Messages utilisateur","text":"<pre><code># Remplacement de tous les print() par messagebox\nmessagebox.showwarning()  # Avertissements non-bloquants\nmessagebox.showerror()    # Erreurs critiques\nmessagebox.showinfo()     # Informations utiles\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#fallbacks-et-recuperation","title":"Fallbacks et r\u00e9cup\u00e9ration","text":"<pre><code># Configuration corrompue \u2192 R\u00e9g\u00e9n\u00e9ration avec valeurs par d\u00e9faut\n# Fichiers manquants \u2192 Cr\u00e9ation automatique\n# Erreurs de traduction \u2192 Fallback sur cl\u00e9s brutes\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#points-dintegration-avec-le-jeu","title":"\ud83d\udd04 Points d'int\u00e9gration avec le jeu","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#modules-importes","title":"Modules import\u00e9s","text":"<pre><code># Configuration management\nfrom src.settings.settings import ConfigManager\nfrom src.settings.resolutions import get_all_resolutions\n\n# Localization\nfrom src.functions.localization import load_language\nfrom assets.locales.french import t as t_fr\nfrom assets.locales.english import t as t_en\n\n# Controls mapping  \nfrom src.settings.controls import DEFAULT_KEY_BINDINGS\n</code></pre>"},{"location":"dev/04-configuration/galad-config-tool-technical/#synchronisation-des-donnees","title":"Synchronisation des donn\u00e9es","text":"<ul> <li>Lecture : Tool lit les m\u00eames fichiers que le jeu</li> <li>\u00c9criture : Format identique, compatible hot-swap</li> <li>Validation : M\u00eames r\u00e8gles de validation que le syst\u00e8me de config du jeu</li> </ul>"},{"location":"dev/04-configuration/galad-config-tool-technical/#patterns-et-bonnes-pratiques","title":"\ud83d\udca1 Patterns et bonnes pratiques","text":""},{"location":"dev/04-configuration/galad-config-tool-technical/#separation-des-responsabilites","title":"S\u00e9paration des responsabilit\u00e9s","text":"<ul> <li>UI Logic : M\u00e9thodes <code>_build_*_tab()</code> </li> <li>Data Logic : M\u00e9thodes <code>load_*()</code> et <code>save_*()</code></li> <li>Event Handling : Callbacks <code>_on_*_changed()</code></li> </ul>"},{"location":"dev/04-configuration/galad-config-tool-technical/#performance","title":"Performance","text":"<ul> <li>Lazy Loading : R\u00e9solutions charg\u00e9es \u00e0 la demande</li> <li>Batch Updates : Sauvegarde group\u00e9e au lieu d'\u00e9criture individuelle</li> <li>UI Threading : Pas de blocking I/O sur le thread principal</li> </ul>"},{"location":"dev/04-configuration/galad-config-tool-technical/#maintenabilite","title":"Maintenabilit\u00e9","text":"<ul> <li>Configuration centralis\u00e9e : <code>DEFAULT_CONFIG</code> dict</li> <li>Traductions externalis\u00e9es : R\u00e9utilisation des modules du jeu</li> <li>Validation coh\u00e9rente : M\u00eames r\u00e8gles que le jeu principal</li> </ul>"},{"location":"dev/04-configuration/localization/","title":"Syst\u00e8me de localisation","text":"<p>Le syst\u00e8me de localisation de Galad Islands permet de supporter plusieurs langues avec une architecture modulaire et extensible.</p>"},{"location":"dev/04-configuration/localization/#vue-densemble","title":"Vue d'ensemble","text":""},{"location":"dev/04-configuration/localization/#architecture-du-systeme","title":"Architecture du syst\u00e8me","text":"<pre><code>src/settings/localization.py    # Gestionnaire principal\n\u251c\u2500\u2500 LocalizationManager         # Classe singleton\n\u251c\u2500\u2500 Fonctions utilitaires       # t(), set_language(), etc.\n\u2514\u2500\u2500 Int\u00e9gration config          # Persistance des pr\u00e9f\u00e9rences\n\nassets/locales/                 # Fichiers de traduction\n\u251c\u2500\u2500 french.py                   # Traductions fran\u00e7aises\n\u251c\u2500\u2500 english.py                  # Traductions anglaises\n\u2514\u2500\u2500 [nouvelle_langue].py        # Futures langues\n</code></pre>"},{"location":"dev/04-configuration/localization/#gestionnaire-de-localisation","title":"Gestionnaire de localisation","text":""},{"location":"dev/04-configuration/localization/#localizationmanager-singleton","title":"LocalizationManager (Singleton)","text":"<p>Fichier : <code>src/settings/localization.py</code></p> <pre><code>class LocalizationManager:\n\"\"\"Gestionnaire singleton pour les traductions.\"\"\"\n\n    def __init__(self):\n        self._current_language = \"fr\"       # Langue par d\u00e9faut\n        self._translations = {}             # Cache des traductions\n        self._load_translations()           # Chargement initial\n\n    def translate(self, key: str, **kwargs) -&gt; str:\n\"\"\"Traduit une cl\u00e9 avec param\u00e8tres optionnels.\"\"\"\n        translation = self._translations.get(key, key)\n\n        # Support des param\u00e8tres dynamiques\n        if kwargs:\n            translation = translation.format(**kwargs)\n\n        return translation\n\n    def set_language(self, language_code: str) -&gt; bool:\n\"\"\"Change la langue et recharge les traductions.\"\"\"\n        if language_code in [\"fr\", \"en\"]:\n            self._current_language = language_code\n            config_manager.set(\"language\", language_code)\n            self._load_translations()\n            return True\n        return False\n</code></pre>"},{"location":"dev/04-configuration/localization/#fonctions-utilitaires-globales","title":"Fonctions utilitaires globales","text":"<pre><code># Importation simple depuis n'importe o\u00f9\nfrom src.settings.localization import t, set_language, get_current_language\n\n# Usage dans le code\ntitle = t(\"menu.play\")                           # \"Jouer\" ou \"Play\"\nvolume_text = t(\"options.volume_music_label\", volume=75)  # Avec param\u00e8tres\n</code></pre>"},{"location":"dev/04-configuration/localization/#structure-des-fichiers-de-traduction","title":"Structure des fichiers de traduction","text":""},{"location":"dev/04-configuration/localization/#format-standard","title":"Format standard","text":"<p>Exemple : <code>assets/locales/french.py</code></p> <pre><code># -*- coding: utf-8 -*-\n\"\"\"\nTraductions fran\u00e7aises pour Galad Islands\n\"\"\"\n\nTRANSLATIONS = {\n    # Organisation par cat\u00e9gories avec pr\u00e9fixes\n\n    # Menu principal\n    \"menu.play\": \"Jouer\",\n    \"menu.options\": \"Options\",\n    \"menu.quit\": \"Quitter\",\n\n    # Interface de jeu\n    \"game.gold\": \"Or : {amount}\",              # Avec param\u00e8tre dynamique\n    \"game.unit_selected\": \"Unit\u00e9 s\u00e9lectionn\u00e9e : {name}\",\n    \"game.health\": \"Vie : {current}/{max}\",\n\n    # Messages syst\u00e8me\n    \"system.loading\": \"Chargement...\",\n    \"system.error\": \"Erreur : {message}\",\n\n    # Raccourcis clavier\n    \"options.binding.unit_attack\": \"Attaque principale\",\n    \"options.binding.camera_move_left\": \"Cam\u00e9ra vers la gauche\",\n\n    # Tips et conseils\n    \"tip.0\": \"Utilisez les capacit\u00e9s sp\u00e9ciales au bon moment !\",\n    \"tip.1\": \"Les mines d'or vous donnent des ressources suppl\u00e9mentaires.\",\n    \"tip.2\": \"Explorez la carte pour d\u00e9couvrir des coffres cach\u00e9s.\",\n}\n</code></pre>"},{"location":"dev/04-configuration/localization/#conventions-de-nommage","title":"Conventions de nommage","text":"Pr\u00e9fixe Usage Exemple <code>menu.</code> Menus et navigation <code>menu.play</code>, <code>menu.options</code> <code>game.</code> Interface de jeu <code>game.gold</code>, <code>game.unit_selected</code> <code>options.</code> Param\u00e8tres et configuration <code>options.volume</code>, <code>options.language</code> <code>system.</code> Messages syst\u00e8me <code>system.loading</code>, <code>system.error</code> <code>tip.</code> Conseils et astuces <code>tip.0</code>, <code>tip.1</code>, <code>tip.2</code> <code>unit.</code> Noms et descriptions d'unit\u00e9s <code>unit.zasper</code>, <code>unit.druid</code> <code>error.</code> Messages d'erreur <code>error.save_failed</code>, <code>error.connection</code>"},{"location":"dev/04-configuration/localization/#utilisation-dans-le-code","title":"Utilisation dans le code","text":""},{"location":"dev/04-configuration/localization/#traduction-simple","title":"Traduction simple","text":"<pre><code>from src.settings.localization import t\n\n# Dans les menus\nbutton_text = t(\"menu.play\")            # \"Jouer\" ou \"Play\"\noptions_title = t(\"options.title\")      # \"Options\"\n\n# Dans l'interface de jeu\nloading_msg = t(\"system.loading\")       # \"Chargement...\" ou \"Loading...\"\n</code></pre>"},{"location":"dev/04-configuration/localization/#traduction-avec-parametres","title":"Traduction avec param\u00e8tres","text":"<pre><code># Affichage dynamique des ressources\ngold_display = t(\"game.gold\", amount=player.gold)\n# R\u00e9sultat : \"Or : 150\" ou \"Gold: 150\"\n\n# Informations d'unit\u00e9\nunit_info = t(\"game.unit_selected\", name=unit.name)\n# R\u00e9sultat : \"Unit\u00e9 s\u00e9lectionn\u00e9e : Zasper\"\n\n# Barres de vie\nhealth_text = t(\"game.health\", current=75, max=100)\n# R\u00e9sultat : \"Vie : 75/100\" ou \"Health: 75/100\"\n</code></pre>"},{"location":"dev/04-configuration/localization/#integration-dans-linterface-utilisateur","title":"Int\u00e9gration dans l'interface utilisateur","text":"<pre><code># Dans l'ActionBar\nclass ActionBar:\n    def _draw_gold_display(self, surface):\n        gold_text = t(\"game.gold\", amount=self.get_player_gold())\n        gold_surface = self.font.render(gold_text, True, UIColors.GOLD)\n        surface.blit(gold_surface, self.gold_rect)\n\n    def _draw_unit_info(self, surface):\n        if self.selected_unit:\n            name_text = t(\"game.unit_selected\", name=self.selected_unit.name)\n            health_text = t(\"game.health\", \n                          current=self.selected_unit.health,\n                          max=self.selected_unit.max_health)\n</code></pre>"},{"location":"dev/04-configuration/localization/#systeme-de-tips-aleatoires","title":"Syst\u00e8me de tips al\u00e9atoires","text":"<pre><code>from src.settings.localization import get_random_tip, get_all_tips\n\n# Tip al\u00e9atoire pour \u00e9cran de chargement\nloading_tip = get_random_tip()\n\n# Toutes les tips pour interface d'aide\nall_tips = get_all_tips()\nfor i, tip in enumerate(all_tips):\n    print(f\"{i+1}. {tip}\")\n</code></pre>"},{"location":"dev/04-configuration/localization/#ajouter-une-nouvelle-langue","title":"Ajouter une nouvelle langue","text":""},{"location":"dev/04-configuration/localization/#etape-1-creer-le-fichier-de-traduction","title":"\u00c9tape 1 : Cr\u00e9er le fichier de traduction","text":"<p>Cr\u00e9ez un nouveau fichier dans <code>assets/locales/</code> :</p> <p>Exemple : <code>assets/locales/spanish.py</code></p> <pre><code># -*- coding: utf-8 -*-\n\"\"\"\nTraducciones espa\u00f1olas para Galad Islands\n\"\"\"\n\nTRANSLATIONS = {\n    # Menu principal\n    \"menu.play\": \"Jugar\",\n    \"menu.options\": \"Opciones\", \n    \"menu.credits\": \"Cr\u00e9ditos\",\n    \"menu.help\": \"Ayuda\",\n    \"menu.scenario\": \"Escenario\",\n    \"menu.quit\": \"Salir\",\n\n    # Interface de jeu\n    \"game.gold\": \"Oro: {amount}\",\n    \"game.unit_selected\": \"Unidad seleccionada: {name}\",\n    \"game.health\": \"Vida: {current}/{max}\",\n\n    # Messages syst\u00e8me\n    \"system.loading\": \"Cargando...\",\n    \"system.error\": \"Error: {message}\",\n\n    # Tips\n    \"tip.0\": \"\u00a1Usa las habilidades especiales en el momento adecuado!\",\n    \"tip.1\": \"Las minas de oro te dan recursos adicionales.\",\n\n    # Toutes les autres cl\u00e9s doivent \u00eatre traduites...\n}\n</code></pre>"},{"location":"dev/04-configuration/localization/#etape-2-mettre-a-jour-le-gestionnaire","title":"\u00c9tape 2 : Mettre \u00e0 jour le gestionnaire","text":"<p>Modifiez <code>src/settings/localization.py</code> :</p> <pre><code>def _load_translations(self):\n\"\"\"Charge les traductions pour la langue actuelle\"\"\"\n    try:\n        # Ajouter la nouvelle langue au mapping\n        language_modules = {\n            \"fr\": \"assets.locales.french\", \n            \"en\": \"assets.locales.english\",\n            \"es\": \"assets.locales.spanish\"  # Nouvelle langue\n        }\n\n        module_name = language_modules.get(self._current_language, \"assets.locales.french\")\n        translation_module = importlib.import_module(module_name)\n        self._translations = translation_module.TRANSLATIONS\n\ndef get_available_languages(self):\n\"\"\"Retourne la liste des langues disponibles\"\"\"\n    return {\n        \"fr\": \"Fran\u00e7ais\",\n        \"en\": \"English\", \n        \"es\": \"Espa\u00f1ol\"  # Nouvelle langue\n    }\n</code></pre>"},{"location":"dev/04-configuration/localization/#etape-3-validation-et-test","title":"\u00c9tape 3 : Validation et test","text":"<pre><code># Script de validation des traductions\ndef validate_translations():\n\"\"\"V\u00e9rifie que toutes les cl\u00e9s sont traduites.\"\"\"\n\n    from assets.locales import french, english, spanish\n\n    fr_keys = set(french.TRANSLATIONS.keys())\n    en_keys = set(english.TRANSLATIONS.keys())\n    es_keys = set(spanish.TRANSLATIONS.keys())\n\n    # Cl\u00e9s manquantes\n    missing_en = fr_keys - en_keys\n    missing_es = fr_keys - es_keys\n\n    if missing_en:\n        print(f\"Cl\u00e9s manquantes en anglais : {missing_en}\")\n\n    if missing_es:\n        print(f\"Cl\u00e9s manquantes en espagnol : {missing_es}\")\n\n    print(f\"Fran\u00e7ais : {len(fr_keys)} cl\u00e9s\")\n    print(f\"Anglais : {len(en_keys)} cl\u00e9s\")\n    print(f\"Espagnol : {len(es_keys)} cl\u00e9s\")\n</code></pre>"},{"location":"dev/04-configuration/localization/#bonnes-pratiques","title":"Bonnes pratiques","text":""},{"location":"dev/04-configuration/localization/#structure-et-organisation","title":"Structure et organisation","text":"<p>\u2705 \u00c0 faire :</p> <ul> <li>Pr\u00e9fixes coh\u00e9rents pour regrouper les traductions</li> <li>Cl\u00e9s descriptives en anglais (<code>unit_attack</code> plut\u00f4t que <code>ua</code>)</li> <li>Param\u00e8tres nomm\u00e9s pour les valeurs dynamiques (<code>{amount}</code>, <code>{name}</code>)</li> <li>Fichiers par langue avec structure identique</li> <li>Commentaires pour organiser les sections</li> </ul> <p>\u274c \u00c0 \u00e9viter :</p> <ul> <li>Traductions directes dans le code (<code>\"Jouer\"</code> vs <code>t(\"menu.play\")</code>)</li> <li>Cl\u00e9s trop longues ou peu claires</li> <li>M\u00e9lange de langues dans un m\u00eame fichier</li> <li>Param\u00e8tres non nomm\u00e9s (<code>{0}</code>, <code>{1}</code> au lieu de <code>{name}</code>)</li> </ul>"},{"location":"dev/04-configuration/localization/#gestion-des-parametres","title":"Gestion des param\u00e8tres","text":"<pre><code># \u2705 Bon usage avec param\u00e8tres nomm\u00e9s\n\"game.unit_health\": \"Vie : {current}/{max}\",\n\"options.volume_label\": \"Volume {type} : {level}%\",\n\n# \u274c \u00c0 \u00e9viter - param\u00e8tres positionnels\n\"game.unit_health\": \"Vie : {}/{}\", \n\"options.volume_label\": \"Volume {} : {}%\",\n</code></pre>"},{"location":"dev/04-configuration/localization/#test-et-validation","title":"Test et validation","text":"<pre><code># Script de test pour nouvelle langue\ndef test_language(lang_code):\n\"\"\"Test complet d'une langue.\"\"\"\n\n    from src.settings.localization import set_language, t\n\n    # Changer vers la nouvelle langue\n    set_language(lang_code)\n\n    # Tester les traductions essentielles\n    essential_keys = [\n        \"menu.play\", \"menu.options\", \"menu.quit\",\n        \"system.loading\", \"system.error\",\n        \"game.gold\", \"game.health\"\n    ]\n\n    for key in essential_keys:\n        translation = t(key, amount=100, current=75, max=100)\n        print(f\"{key}: {translation}\")\n</code></pre>"},{"location":"dev/04-configuration/localization/#integration-avec-lui","title":"Int\u00e9gration avec l'UI","text":"<p>Le syst\u00e8me de localisation s'int\u00e8gre parfaitement avec le syst\u00e8me UI document\u00e9 dans Interface utilisateur :</p> <ul> <li>Menu d'options : S\u00e9lection de langue avec persistance automatique</li> <li>ActionBar : Affichage dynamique des ressources et informations</li> <li>Modales : Contenu traduit des fen\u00eatres d'aide et cr\u00e9dits</li> <li>Messages syst\u00e8me : Notifications et erreurs localis\u00e9es</li> </ul> <p>Cette architecture permet d'ajouter facilement de nouvelles langues tout en maintenant la coh\u00e9rence de l'interface utilisateur.</p>"},{"location":"dev/05-exploitation/deployment/","title":"D\u00e9ploiement en production","text":""},{"location":"dev/05-exploitation/deployment/#compilation-pour-la-production","title":"Compilation pour la production","text":""},{"location":"dev/05-exploitation/deployment/#methode-1-executable-autonome-recommandee","title":"M\u00e9thode 1 : Ex\u00e9cutable autonome (recommand\u00e9e)","text":""},{"location":"dev/05-exploitation/deployment/#compilation-du-jeu","title":"Compilation du jeu","text":"<pre><code># Installation de PyInstaller\npip install pyinstaller\n\n# Compilation en fichier unique\npyinstaller --onefile --windowed \\\n--add-data \"assets:assets\" \\\n--name \"GaladIslands\" \\\nmain.py\n\n# L'ex\u00e9cutable se trouve dans dist/GaladIslands\n# Penser \u00e0 copier les dossiers d'assets n\u00e9cessaires\n</code></pre>"},{"location":"dev/05-exploitation/deployment/#compilation-de-loutil-de-configuration","title":"Compilation de l'outil de configuration","text":"<pre><code>pyinstaller --onefile --windowed \\\n--add-data \"assets:assets\" \\\n--add-data \"assets/locales:assets/locales\" \\\n--name \"GaladConfigTool\" \\\nsrc/tools/galad_config_tool.py\n\n\n### M\u00e9thode 2 : Distribution Python\n\n```bash\n# Pr\u00e9parer l'environnement\npython3 -m venv venv_prod\nsource venv_prod/bin/activate\npip install -r requirements.txt\n\n# Cr\u00e9er un script de lancement\ncat &gt; start_game.sh &lt;&lt; 'EOF'\n#!/bin/bash\ncd \"$(dirname \"$0\")\"\n./venv_prod/bin/python main.py\nEOF\nchmod +x start_game.sh\n</code></pre>"},{"location":"dev/05-exploitation/deployment/#structure-du-package-de-production","title":"Structure du package de production","text":"<pre><code>galad-islands-prod/\n\u251c\u2500\u2500 GaladIslands.exe        # Ex\u00e9cutable (Windows)\n\u251c\u2500\u2500 GaladIslands            # Ex\u00e9cutable (Linux/Mac)\n\u251c\u2500\u2500 GaladConfigTool.exe    # Outil de config (Windows)\n\u251c\u2500\u2500 GaladConfigTool        # Outil de config (Linux/Mac)\n\u251c\u2500\u2500 assets/                 # Ressources du jeu\n\u251c\u2500\u2500 README.txt              # Instructions\n\u2514\u2500\u2500 galad_config.json       # Configuration, il se cr\u00e9e automatiquement si absent\n</code></pre>"},{"location":"dev/05-exploitation/deployment/#instructions-de-deploiement","title":"Instructions de d\u00e9ploiement","text":""},{"location":"dev/05-exploitation/deployment/#pour-les-utilisateurs-finaux","title":"Pour les utilisateurs finaux","text":"<ol> <li>T\u00e9l\u00e9charger le package complet</li> <li>Extraire dans un dossier</li> <li>Lancer l'ex\u00e9cutable <code>GaladIslands</code></li> </ol>"},{"location":"dev/05-exploitation/operations/","title":"Maintenance et op\u00e9rations","text":""},{"location":"dev/05-exploitation/operations/#cele-fichier-galad_configjson-est-gere-automatiquement","title":"CeLe fichier <code>galad_config.json</code> est g\u00e9r\u00e9 automatiquement :","text":"<pre><code>{\n\"resolution\": [1280, 720],\n\"framerate\": 30,\n\"volume_music\": 0.7,\n\"volume_sound\": 0.8,\n\"window_mode\": \"windowed\",\n\"camera_sensitivity\": 1.0\n}\n</code></pre> <p>Actions de maintenance basiques :</p> <ol> <li> <p>Sauvegarder la config :    <pre><code>cp galad_config.json galad_config_backup.json\n</code></pre></p> </li> <li> <p>R\u00e9initialiser si probl\u00e8me :    <pre><code>rm galad_config.json  # Le jeu recr\u00e9era les param\u00e8tres par d\u00e9faut\n</code></pre></p> </li> <li> <p>Nettoyer les fichiers temporaires :    <pre><code># Supprimer les .pyc et __pycache__\nfind . -name \"__pycache__\" -type d -exec rm -rf {} +\nfind . -name \"*.pyc\" -delete\n</code></pre></p> </li> </ol>"},{"location":"dev/05-exploitation/operations/#gestion-des-versions-avec-git","title":"Gestion des versions avec Git","text":"<p>Le projet utilise des hooks Git automatiques pour les commits :</p> <p>Scripts disponibles : - <code>setup_dev.py</code> - Installation automatique de l'environnement de developpement (d\u00e9pendances, hooks, etc.) - <code>setup/install_hooks_with_bump.py</code> - Installation automatique des hooks (commit message, bump version) [D\u00e9conseill\u00e9 car le bump automatique est pas fonctionnel] - <code>setup/install_commitizen_universel.py</code> - Installation de commitizen pour les commit conventionnels - <code>scripts/clean-changelog.py</code> - Nettoyage du changelog  - Hooks pre-commit et post-checkout</p> <p>Format de commit requis : <pre><code>feat: nouvelle fonctionnalit\u00e9\nfix: correction de bug  \ndocs: documentation\nstyle: formatage\nrefactor: refactorisation\n</code></pre></p>"},{"location":"dev/05-exploitation/operations/#outils-de-developpement-simples","title":"Outils de d\u00e9veloppement simples","text":"<p>Tests et v\u00e9rifications : <pre><code># Tester l'installation des hooks\npython setup/test_hooks.py\n\n# V\u00e9rifier que le jeu d\u00e9marre\npython main.py\n\n# Mode debug (F3 dans le jeu)\n# Affiche FPS, position cam\u00e9ra, zoom, r\u00e9solution\n</code></pre></p> <p>C'est tout ! Pas de monitoring complexe, juste les bases pour maintenir le projet.t dans le jeu</p>"},{"location":"dev/05-exploitation/operations/#systeme-de-logs-basique","title":"Syst\u00e8me de logs basique","text":"<p>Le jeu utilise le logging Python standard : <pre><code># Dans main.py (ligne 7)\nimport logging\nlogging.basicConfig(level=logging.INFO)\n</code></pre></p> <p>Logs disponibles : - Messages console pendant l'ex\u00e9cution - Erreurs de chargement d'assets - Informations de d\u00e9marrage</p> <p>Pour sauvegarder les logs : <pre><code>python main.py &gt; game.log 2&gt;&amp;1\n</code></pre></p>"},{"location":"dev/05-exploitation/operations/#debug-et-monitoring-simple","title":"Debug et monitoring simple","text":"<p>Mode debug int\u00e9gr\u00e9 : - Appuyer sur F3 pour afficher les infos de debug - Position cam\u00e9ra, zoom, FPS, r\u00e9solution</p> <p>Fichiers de configuration : - <code>galad_config.json</code> - Configuration principale du jeu - R\u00e9solution, volumes, param\u00e8tres graphiques - Sauvegard\u00e9 automatiquement quand on change les options</p>"},{"location":"dev/05-exploitation/operations/#sauvegarde-de-configuration","title":"Sauvegarde de configuration","text":""},{"location":"dev/05-exploitation/operations/#sauvegarde-des-donnees-de-jeu","title":"Sauvegarde des donn\u00e9es de jeu","text":""},{"location":"dev/05-exploitation/operations/#structure-des-sauvegardes","title":"Structure des sauvegardes","text":"<p>Il n'a pas de syst\u00e8me de sauvegarde \u00e0 part celui des param\u00e8tres utilisateur.</p>"},{"location":"dev/05-exploitation/systeme/","title":"Param\u00e8tres syst\u00e8me critiques - Galad Islands","text":"<p>Ces param\u00e8tres d\u00e9finissent les contraintes minimales et optimales du moteur de jeu bas\u00e9 sur Pygame. Ils garantissent un fonctionnement stable, une r\u00e9activit\u00e9 correcte et une exp\u00e9rience fluide.</p> Param\u00e8tre Description Valeur par d\u00e9faut Impact critique R\u00e9solution d'affichage Dimensions de la fen\u00eatre de jeu (largeur \u00d7 hauteur en pixels). <code>1168 \u00d7 629</code> Affecte directement la charge GPU/CPU et la lisibilit\u00e9 de l'interface. Framerate cible Nombre d'images par seconde vis\u00e9. <code>30 FPS</code> D\u00e9termine la fluidit\u00e9 du gameplay et la consommation CPU. Taille de la carte Dimensions logiques du monde (en cases). <code>30 \u00d7 30 cases</code> Impact m\u00e9moire (900 cases = tileset, collisions, pathfinding). Taille des tuiles Dimension d'une tuile de carte en pixels (calcul\u00e9e dynamiquement). <code>16-64 px</code> (adaptatif) Impact sur les performances de rendu et la m\u00e9moire texture. VSync Synchronisation verticale. <code>true</code> Limite le framerate \u00e0 la fr\u00e9quence du moniteur, r\u00e9duit le tearing et la consommation CPU/GPU. Syst\u00e8me audio Fr\u00e9quence d'\u00e9chantillonnage et gestion des canaux. Pygame d\u00e9faut Influence la qualit\u00e9 sonore et l'utilisation m\u00e9moire. Vitesse cam\u00e9ra D\u00e9placement de la cam\u00e9ra en pixels par seconde. <code>200 px/s</code> D\u00e9termine la r\u00e9activit\u00e9 du scrolling et charge les calculs de rendu. Zoom Plage de zoom disponible. <code>0.5 - 2.5</code> (step: <code>0.1</code>) Impact direct sur le nombre d'entit\u00e9s \u00e0 rendre et la charge GPU."},{"location":"dev/05-exploitation/systeme/#contraintes-daffichage-adaptatif","title":"Contraintes d'affichage adaptatif","text":"<p>Le moteur calcule automatiquement la taille optimale des tuiles pour garantir une visibilit\u00e9 minimale et des performances stables:</p> Contrainte Valeur Impact syst\u00e8me Cases visibles min (largeur) <code>15</code> Garantit lisibilit\u00e9 et limite le nombre d'objets rendus simultan\u00e9ment. Cases visibles min (hauteur) <code>10</code> Idem verticalement. Ratio optimal pour \u00e9crans 16:9. Taille tuile min <code>16 px</code> Limite inf\u00e9rieure pour \u00e9viter illisibilit\u00e9 et aliasing excessif. Taille tuile max <code>64 px</code> Limite sup\u00e9rieure pour contr\u00f4ler l'usage m\u00e9moire texture et taille des sprites."},{"location":"dev/05-exploitation/systeme/#generation-procedurale-de-la-carte","title":"G\u00e9n\u00e9ration proc\u00e9durale de la carte","text":"<p>Ces taux contr\u00f4lent la densit\u00e9 d'entit\u00e9s et impactent les performances (collisions, pathfinding, IA):</p> \u00c9l\u00e9ment Taux Nombre d'instances (30\u00d730) Impact syst\u00e8me Mines 2% <code>18</code> Collisions statiques, zone de danger. \u00celes g\u00e9n\u00e9riques 3% <code>27</code> Obstacles de navigation, calculs de pathfinding. Nuages 3% <code>27</code> \u00c9l\u00e9ments visuels, faible impact (pas de collision). <p>Total entit\u00e9s statiques: ~72 objets sur 900 cases (8%)</p>"},{"location":"dev/05-exploitation/systeme/#resolutions-supportees","title":"R\u00e9solutions support\u00e9es","text":"<p>Le moteur supporte nativement ces r\u00e9solutions sans recalcul co\u00fbteux:</p> R\u00e9solution Tile size calcul\u00e9e Ratio 800\u00d7600 40 px 4:3 1024\u00d7768 62 px 4:3 1280\u00d7720 62 px 16:9 1366\u00d7768 62 px ~16:9 1920\u00d71080 64 px (max) 16:9 2560\u00d71440 64 px (max) 16:9 <p>Les r\u00e9solutions \u22651920\u00d71080 atteignent la limite max de 64px par tuile, optimisant ainsi l'usage GPU.  Il est \u00e9galement possible de modifier les r\u00e9solutions dans les param\u00e8tres pour avoir des r\u00e9solutions personnalis\u00e9.</p>"},{"location":"dev/05-exploitation/systeme/#caracteristiques-techniques","title":"Caract\u00e9ristiques techniques","text":"<ul> <li>Encodage: UTF-8 (support multilingue)</li> <li>Validation: Plages min/max appliqu\u00e9es au chargement</li> <li>Fallback: Valeurs par d\u00e9faut si fichier corrompu/absent</li> <li>Fusion: Merge intelligent avec defaults pour \u00e9viter perte de config</li> </ul>"},{"location":"dev/05-exploitation/systeme/#plages-de-valeurs-autorisees","title":"Plages de valeurs autoris\u00e9es","text":"<p>Ces limites pr\u00e9viennent les configurations instables:</p> Param\u00e8tre Min Max Unit\u00e9 screen_width 200 10000 pixels screen_height 200 10000 pixels volume_* 0.0 1.0 ratio camera_sensitivity 0.1 5.0 multiplicateur camera_fast_multiplier 1.0 \u221e multiplicateur"},{"location":"dev/05-exploitation/systeme/#notes-doptimisation","title":"Notes d'optimisation","text":"<ol> <li> <p>Framerate 30 FPS : Choix d\u00e9lib\u00e9r\u00e9 pour \u00e9quilibrer fluidit\u00e9 et consommation CPU sur hardware modeste.</p> </li> <li> <p>Tile size adaptatif : \u00c9vite le sur-rendu en haute r\u00e9solution et maintient la lisibilit\u00e9 en basse r\u00e9solution.</p> </li> <li> <p>VSync par d\u00e9faut : R\u00e9duit la charge inutile en limitant le framerate \u00e0 la capacit\u00e9 du moniteur (g\u00e9n\u00e9ralement 60Hz).</p> </li> <li> <p>Carte 30\u00d730 : Taille modeste (900 cases) pour garantir des performances stables sur le pathfinding et les collisions.</p> </li> <li> <p>Densit\u00e9 d'objets 8% : \u00c9quilibre entre richesse visuelle et performance des algorithmes spatiaux.</p> </li> </ol>"},{"location":"dev/06-maintenance/maintenance/","title":"\ud83d\udee0\ufe0f Maintenance du projet","text":"<p>Cette page d\u00e9crit les bonnes pratiques et proc\u00e9dures pour assurer la p\u00e9rennit\u00e9 et la qualit\u00e9 du projet Galad Islands.</p>"},{"location":"dev/06-maintenance/maintenance/#strategie-de-maintenance","title":"\ud83d\udea6 Strat\u00e9gie de maintenance","text":"<ul> <li>Mises \u00e0 jour fr\u00e9quentes\u202f: chaque nouvelle fonctionnalit\u00e9 ou correction de bug doit donner lieu \u00e0 un commit. Privil\u00e9giez de petits commits fr\u00e9quents pour faciliter le suivi et la restauration.</li> <li>Branches d\u00e9di\u00e9es\u202f: pour toute fonctionnalit\u00e9 majeure, cr\u00e9ez une branche d\u00e9di\u00e9e avant de fusionner dans la branche principale.</li> <li>Commits clairs\u202f: les messages de commit doivent \u00eatre explicites et suivre la convention de commit.</li> </ul>"},{"location":"dev/06-maintenance/maintenance/#gestion-des-dependances","title":"\ud83d\udce6 Gestion des d\u00e9pendances","text":"<ul> <li>Les d\u00e9pendances sont g\u00e9r\u00e9es via le fichier <code>requirements.txt</code>. Maintenez-le \u00e0 jour avec les versions compatibles.</li> <li>Avant d\u2019ajouter une nouvelle d\u00e9pendance, v\u00e9rifiez sa n\u00e9cessit\u00e9 et l\u2019absence de conflit avec les d\u00e9pendances existantes.</li> <li> <p>Utilisez un environnement virtuel pour isoler les d\u00e9pendances du projet\u202f:</p> <pre><code>python -m venv env\nsource env/bin/activate  # Sur Windows : env\\Scripts\\activate\npip install -r requirements.txt\n</code></pre> <p>\ud83d\udca1 Les IDE comme VSCode ou PyCharm peuvent automatiser la cr\u00e9ation et l\u2019activation de l\u2019environnement virtuel.</p> </li> </ul> <p>Mise \u00e0 jour des d\u00e9pendances</p> <p>Pour mettre \u00e0 jour les d\u00e9pendances, modifiez le fichier requirements.txt puis ex\u00e9cutez\u202f: <pre><code>pip install -r requirements.txt\n</code></pre></p>"},{"location":"dev/06-maintenance/maintenance/#sauvegarde-et-restauration","title":"\ud83d\udcbe Sauvegarde et restauration","text":"<ul> <li>Sauvegardes r\u00e9guli\u00e8res\u202f: utilisez Git pour versionner le code source et les ressources.</li> <li>Restauration\u202f: en cas de probl\u00e8me, revenez \u00e0 une version stable avec\u202f:     <pre><code>git checkout &lt;commit_id&gt;\n# ou pour annuler un commit\ngit revert &lt;commit_id&gt;\n</code></pre></li> <li>Configuration\u202f: le fichier galad_config.json contient la configuration du jeu. Sauvegardez-le ou supprimez-le avant des modifications majeures.</li> </ul>"},{"location":"dev/06-maintenance/maintenance/#bonnes-pratiques-de-maintenance","title":"\u2705 Bonnes pratiques de maintenance","text":"<ul> <li>Communiquez avec l\u2019\u00e9quipe pour coordonner la maintenance et \u00e9viter les conflits.</li> <li>Automatisez les t\u00e2ches r\u00e9p\u00e9titives avec des scripts ou outils adapt\u00e9s.</li> <li>Int\u00e9gration continue\u202f: utilisez des outils de CI pour automatiser tests et d\u00e9ploiements.</li> <li>Documentation \u00e0 jour\u202f: assurez-vous que la documentation refl\u00e8te toujours l\u2019\u00e9tat du projet.</li> </ul> <p>Pour toute question ou suggestion, n\u2019h\u00e9sitez pas \u00e0 ouvrir une issue ou une pull request sur le d\u00e9p\u00f4t GitHub.</p>"},{"location":"dev/06-maintenance/versioning/","title":"Gestion des versions","text":""},{"location":"dev/06-maintenance/versioning/#objectif","title":"\ud83c\udfaf Objectif","text":"<p>Ce document explique comment g\u00e9rer les versions du projet Galad Islands avec un syst\u00e8me de gestion manuelle des versions.</p>"},{"location":"dev/06-maintenance/versioning/#comment-gerer-les-versions-manuellement","title":"Comment g\u00e9rer les versions manuellement","text":"<ol> <li>Activer l'environnement virtuel :</li> </ol> <pre><code>source venv/bin/activate  # Unix/Linux/macOS\n# ou\nvenv\\Scripts\\activate     # Windows\n</code></pre> <ol> <li>S'assurer d'\u00eatre \u00e0 jour :</li> </ol> <pre><code>git checkout main &amp;&amp; git pull origin main\n</code></pre> <ol> <li>Effectuer le bump :</li> </ol> <pre><code>python -m commitizen bump --increment patch --yes --changelog\n</code></pre> <ol> <li>Pousser les changements :</li> </ol> <pre><code>git push origin main &amp;&amp; git push origin --tags\n</code></pre>"},{"location":"dev/06-maintenance/versioning/#types-de-commits-et-leur-impact","title":"Types de commits et leur impact","text":"<ul> <li>\u2705 feat: nouvelle fonctionnalit\u00e9 \u2192 bump minor</li> <li>\u2705 fix: correction de bug \u2192 bump patch</li> <li>\u2705 perf: am\u00e9lioration performances \u2192 bump patch</li> <li>\u2705 refactor: refactorisation \u2192 bump patch</li> <li>\u274c docs, style, test, chore, ci : pas de bump</li> </ul>"},{"location":"dev/06-maintenance/versioning/#workflow-recommande","title":"\ud83d\udd04 Workflow recommand\u00e9","text":"<ol> <li>Installation initiale : <code>python setup_dev.py</code> (une seule fois)</li> <li>D\u00e9veloppement normal : Commits avec messages conventionnels</li> <li>Bump manuel : Utiliser Commitizen pour g\u00e9rer les versions</li> <li>Push avec tags : <code>git push origin main &amp;&amp; git push origin --tags</code></li> </ol>"},{"location":"dev/06-maintenance/versioning/#suppression-des-hooks-pre-commit","title":"\ud83d\udeab Suppression des hooks pre-commit","text":"<p>\u26a0\ufe0f Attention : Hooks supprim\u00e9s</p> <p>Le syst\u00e8me de bump automatique via hooks pre-commit a \u00e9t\u00e9 d\u00e9sactiv\u00e9. Les versions doivent d\u00e9sormais \u00eatre g\u00e9r\u00e9es manuellement.</p> <ul> <li>\u2705 Nouveau : Gestion manuelle des versions</li> <li>\ud83d\udd04 Legacy : Les hooks ne sont plus install\u00e9s par d\u00e9faut </li> </ul>"},{"location":"dev/06-maintenance/versioning/#avantages-de-cette-approche","title":"\ud83c\udfaf Avantages de cette approche","text":"<ul> <li>\u2705 Contr\u00f4le total : Vous d\u00e9cidez quand faire une release</li> <li>\u2705 Pas de probl\u00e8me de sync : Tags cr\u00e9\u00e9s et pouss\u00e9s ensemble</li> <li>\u2705 Changelog coh\u00e9rent : G\u00e9n\u00e9r\u00e9 localement avec tout l'historique</li> <li>\u2705 Confirmation : Possibilit\u00e9 de v\u00e9rifier avant publication</li> <li>\u2705 Rollback facile : Annulation possible avant push</li> </ul>"},{"location":"dev/06-maintenance/versioning/#depannage","title":"\ud83d\udd0d D\u00e9pannage","text":""},{"location":"dev/06-maintenance/versioning/#installation-et-tests","title":"Installation et tests","text":"<pre><code># R\u00e9installer Commitizen\npython -m pip install commitizen\n\n# V\u00e9rifier Commitizen\npython -m commitizen version\n</code></pre>"},{"location":"dev/06-maintenance/versioning/#problemes-courants","title":"Probl\u00e8mes courants","text":"<pre><code># Environnement virtuel non activ\u00e9\nsource venv/bin/activate  # Unix/Linux/macOS\n# ou\nvenv\\Scripts\\activate     # Windows\n</code></pre>"},{"location":"dev/07-annexes/contributing/","title":"Guide de contribution","text":""},{"location":"dev/07-annexes/contributing/#table-des-matieres","title":"Table des mati\u00e8res","text":"<ol> <li>Conventions de commit</li> <li>Workflow de contribution</li> <li>Standards de code</li> <li>Processus de revue</li> <li>Contact</li> </ol>"},{"location":"dev/07-annexes/contributing/#guide-de-contribution_1","title":"Guide de contribution","text":""},{"location":"dev/07-annexes/contributing/#conventions-de-commit","title":"Conventions de commit","text":"<p>Le projet utilise la sp\u00e9cification Conventional Commits 1.0.0 pour garantir un historique de commits lisible et exploitable par des outils automatis\u00e9s.</p>"},{"location":"dev/07-annexes/contributing/#structure-du-message-de-commit","title":"Structure du message de commit","text":"<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n\n&lt;body&gt;\n\n&lt;footer&gt;\n</code></pre> <p>Composants obligatoires :</p> <ul> <li><code>type</code> : Type de modification</li> <li><code>subject</code> : Description courte (72 caract\u00e8res maximum)</li> </ul> <p>Composants optionnels :</p> <ul> <li><code>scope</code> : Port\u00e9e de la modification (composant, module, fichier)</li> <li><code>body</code> : Description d\u00e9taill\u00e9e de la modification</li> <li><code>footer</code> : M\u00e9tadonn\u00e9es (r\u00e9f\u00e9rences d'issues, breaking changes)</li> </ul>"},{"location":"dev/07-annexes/contributing/#types-de-commit","title":"Types de commit","text":"Type Description Impact sur versioning <code>feat</code> Ajout d'une nouvelle fonctionnalit\u00e9 MINOR <code>fix</code> Correction d'un bug PATCH <code>docs</code> Modification de la documentation uniquement - <code>style</code> Modification n'affectant pas la logique (formatage, espaces, indentation) - <code>refactor</code> Refactorisation sans modification de fonctionnalit\u00e9 - <code>perf</code> Am\u00e9lioration des performances PATCH <code>test</code> Ajout ou modification de tests - <code>build</code> Modification du syst\u00e8me de build ou des d\u00e9pendances - <code>ci</code> Modification de la configuration CI/CD - <code>chore</code> T\u00e2ches de maintenance (ne modifie ni src ni test) - <code>revert</code> Annulation d'un commit pr\u00e9c\u00e9dent D\u00e9pend du commit annul\u00e9"},{"location":"dev/07-annexes/contributing/#regles-de-redaction","title":"R\u00e8gles de r\u00e9daction","text":"<p>Info</p> <ul> <li>Utiliser l'imp\u00e9ratif pr\u00e9sent (\"add\" et non \"added\" ou \"adds\")</li> <li>Ne pas commencer par une majuscule</li> <li>Ne pas terminer par un point</li> <li>Maximum 72 caract\u00e8res</li> </ul> <p>Info</p> <ul> <li>S\u00e9parer du subject par une ligne vide</li> <li>Expliquer le \"quoi\" et le \"pourquoi\", pas le \"comment\"</li> <li>Maximum 100 caract\u00e8res par ligne</li> </ul> <p>Info</p> <ul> <li>R\u00e9f\u00e9rences aux issues : <code>Refs: #123, #456</code></li> <li>Fermeture d'issues : <code>Closes: #123</code></li> <li>Breaking changes : <code>BREAKING CHANGE: description</code></li> </ul>"},{"location":"dev/07-annexes/contributing/#exemples","title":"Exemples","text":"Nouvelle unit\u00e9Correction de bug de combatRefactorisation de la boutique <pre><code>feat(units): add Leviathan unit with siege capabilities\n\nAdd the Leviathan unit with high health and powerful attacks.\nIncludes new sprite assets and unit factory integration.\n\nCloses: #156\n</code></pre> <pre><code>fix(combat): prevent units from attacking through obstacles\n\nFixed pathfinding issue where units could attack targets\nthrough solid terrain. Added line-of-sight validation.\n\nRefs: #203\n</code></pre> <pre><code>refactor(shop): extract unit pricing logic to gameplay constants\n\nMoved hardcoded unit costs to centralized constants in gameplay.py.\nImproves maintainability and prevents pricing inconsistencies.\n</code></pre>"},{"location":"dev/07-annexes/contributing/#workflow-de-contribution","title":"Workflow de contribution","text":""},{"location":"dev/07-annexes/contributing/#prerequis","title":"Pr\u00e9requis","text":"<ul> <li>Git 2.0+</li> <li>Compte GitHub avec acc\u00e8s au d\u00e9p\u00f4t</li> <li>Environnement de d\u00e9veloppement configur\u00e9 selon le README</li> </ul>"},{"location":"dev/07-annexes/contributing/#processus-standard","title":"Processus standard","text":""},{"location":"dev/07-annexes/contributing/#1-preparation","title":"1. Pr\u00e9paration","text":"<pre><code># Fork le d\u00e9p\u00f4t via l'interface GitHub\n\n# Clone le fork\ngit clone https://github.com/Fydyr/Galad-Islands.git\ncd &lt;repository&gt;\n\n# Configure le d\u00e9p\u00f4t upstream\ngit remote add upstream https://github.com/Fydyr/Galad-Islands.git\n\n# Synchronise avec upstream\ngit fetch upstream\ngit checkout main\ngit merge upstream/main\n</code></pre>"},{"location":"dev/07-annexes/contributing/#2-creation-dune-branche","title":"2. Cr\u00e9ation d'une branche","text":"<p>Tip</p> <pre><code>&lt;type&gt;/&lt;issue-number&gt;-&lt;short-description&gt;\n</code></pre> <p>Exemples :</p> <pre><code>git checkout -b feat/123-oauth-integration\ngit checkout -b fix/456-null-pointer-exception\ngit checkout -b docs/789-api-documentation\n</code></pre> <p>Types de branches :</p> <ul> <li><code>feat/</code> : Nouvelle fonctionnalit\u00e9</li> <li><code>fix/</code> : Correction de bug</li> <li><code>docs/</code> : Documentation</li> <li><code>refactor/</code> : Refactorisation</li> <li><code>test/</code> : Tests</li> <li><code>chore/</code> : Maintenance</li> </ul>"},{"location":"dev/07-annexes/contributing/#3-commit","title":"3. Commit","text":"<pre><code># Ajout des fichiers modifi\u00e9s\ngit add &lt;files&gt;\n\n# Commit avec message conventionnel\ngit commit -m \"type(scope): description\"\n\n# V\u00e9rification\ngit log --oneline\n</code></pre>"},{"location":"dev/07-annexes/contributing/#4-synchronisation","title":"4. Synchronisation","text":"<pre><code># R\u00e9cup\u00e9ration des derni\u00e8res modifications\ngit fetch upstream\ngit rebase upstream/main\n\n# R\u00e9solution des conflits si n\u00e9cessaire\n# Puis continuer le rebase\ngit rebase --continue\n</code></pre>"},{"location":"dev/07-annexes/contributing/#5-push-et-pull-request","title":"5. Push et Pull Request","text":"<pre><code># Push vers le fork\ngit push origin &lt;branch-name&gt;\n</code></pre> <p>Note</p> <p>V\u00e9rifier si vos modifications ne risquent pas d'\u00e9craser des changements des autres contributeurs.</p> <p>Note</p> <ol> <li>Ouvrir l'interface GitHub</li> <li>Cr\u00e9er une Pull Request depuis la branche du fork vers <code>main</code> d'upstream</li> <li>Remplir le template de PR avec :<ul> <li>Titre : R\u00e9sum\u00e9 clair de la modification</li> <li>Description : Contexte et d\u00e9tails techniques</li> <li>Type de changement : Feature, Bug fix, etc.</li> <li>Issues li\u00e9es : R\u00e9f\u00e9rences (#123)</li> </ul> </li> </ol>"},{"location":"dev/07-annexes/contributing/#standards-de-code","title":"Standards de code","text":""},{"location":"dev/07-annexes/contributing/#principes-generaux","title":"Principes g\u00e9n\u00e9raux","text":"<p>Abstract</p> <ul> <li>Single Responsibility Principle</li> <li>Open/Closed Principle</li> <li>Liskov Substitution Principle</li> <li>Interface Segregation Principle</li> <li>Dependency Inversion Principle</li> </ul> <p>Abstract</p> <ul> <li>Noms explicites et significatifs</li> <li>Fonctions courtes (&lt; 20 lignes)</li> <li>Commentaires uniquement si n\u00e9cessaire</li> <li>Pas de code dupliqu\u00e9 (DRY)</li> <li>Gestion appropri\u00e9e des erreurs</li> </ul>"},{"location":"dev/07-annexes/contributing/#conventions-de-nommage","title":"Conventions de nommage","text":"Variables et fonctionsClasses et composantsConstantesFichiers <pre><code>// camelCase pour variables et fonctions\nconst userName = 'John';\nfunction getUserData() { }\n</code></pre> <pre><code>// PascalCase pour classes et composants\nclass UserService { }\nfunction UserProfile() { }\n</code></pre> <pre><code>// UPPER_SNAKE_CASE pour constantes\nconst MAX_RETRY_COUNT = 3;\nconst API_BASE_URL = 'https://api.example.com';\n</code></pre> <ul> <li>Utilitaires : <code>camelCase.py</code></li> </ul>"},{"location":"dev/07-annexes/contributing/#tests","title":"Tests","text":"<p>Success</p> <ul> <li>Minimum requis : 80%</li> <li>Objectif : 90%+</li> </ul>"},{"location":"dev/07-annexes/contributing/#processus-de-revue","title":"Processus de revue","text":""},{"location":"dev/07-annexes/contributing/#criteres-dacceptation","title":"Crit\u00e8res d'acceptation","text":"<p>Warning</p> <ul> <li>[ ] Au moins une revue approuv\u00e9e d'un mainteneur</li> <li>[ ] Aucun conflit avec la branche cible</li> <li>[ ] Documentation \u00e0 jour</li> <li>[ ] Couverture de tests satisfaisante</li> </ul> <p>Tip</p> <ul> <li>[ ] Performance \u00e9valu\u00e9e pour les modifications critiques</li> <li>[ ] Accessibilit\u00e9 v\u00e9rifi\u00e9e pour les modifications UI</li> <li>[ ] S\u00e9curit\u00e9 analys\u00e9e pour les modifications sensibles</li> </ul>"},{"location":"dev/07-annexes/contributing/#traitement-des-retours","title":"Traitement des retours","text":"<p>R\u00e9solution des commentaires :</p> <ol> <li>Lire et comprendre tous les commentaires</li> <li>Appliquer les modifications demand\u00e9es</li> <li>R\u00e9pondre aux commentaires pour expliquer les choix</li> <li>Marquer les commentaires comme r\u00e9solus</li> <li>Demander une nouvelle revue</li> </ol> <p>Modifications apr\u00e8s revue :</p> <pre><code># Modifier le code\ngit add &lt;files&gt;\n\n# Commit de correction\ngit commit -m \"fix(scope): address review comments\"\n\n# Push\ngit push origin &lt;branch-name&gt;\n</code></pre>"},{"location":"dev/07-annexes/contributing/#contact","title":"Contact","text":"<p>Question</p> <p>Ouvrir une issue avec le label <code>question</code></p>"},{"location":"dev/07-annexes/contributing/#mainteneurs","title":"Mainteneurs","text":"<ul> <li>Enzo Fournier</li> <li>Edouard Alluin</li> <li>Julien Behani</li> <li>Ethan Cailliau</li> <li>Alexandre Damman</li> <li>Romain Lambert</li> </ul> <p>Info</p> <p>Version : 1.0.0</p>"},{"location":"user/basics/getting-started/","title":"Guide de d\u00e9marrage","text":"<p>Bienvenue dans Galad Islands ! Ce guide vous accompagnera dans vos premiers pas dans l'archipel.</p> <p>Avant de commencer</p> <p>Nouveau joueur ? Assurez-vous d'avoir install\u00e9 le jeu en suivant le guide d'installation.</p>"},{"location":"user/basics/getting-started/#premiere-connexion","title":"\ud83d\ude80 Premi\u00e8re connexion","text":""},{"location":"user/basics/getting-started/#menu-principal","title":"Menu principal","text":"<p>Au lancement, vous arrivez sur le menu principal avec les options suivantes :</p> <ul> <li>\ud83c\udfae Jouer : Lancer une nouvelle partie</li> <li>\u2699\ufe0f Options : Configurer les param\u00e8tres du jeu</li> <li>\u2753 Aide : Consulter l'aide int\u00e9gr\u00e9e (F1)</li> <li>\ud83d\udc65 Cr\u00e9dits : D\u00e9couvrir l'\u00e9quipe de d\u00e9veloppement</li> <li>\ud83d\udeaa Quitter : Fermer le jeu</li> </ul> <p>Configuration recommand\u00e9e</p> <p>Avant votre premi\u00e8re partie, visitez le menu Options pour : - Ajuster la r\u00e9solution \u00e0 votre \u00e9cran - Configurer les volumes (musique/effets) - Choisir votre langue (fran\u00e7ais/anglais) - Tester les contr\u00f4les</p>"},{"location":"user/basics/getting-started/#decouverte-de-linterface","title":"\ud83d\uddfa\ufe0f D\u00e9couverte de l'interface","text":""},{"location":"user/basics/getting-started/#vue-densemble","title":"Vue d'ensemble","text":"<p>Quand vous lancez une partie, vous vous retrouvez dans l'archipel des Galad Islands avec :</p> <ul> <li>\ud83c\udf0a Carte oc\u00e9anique : Vue d'ensemble de l'archipel</li> <li>\ud83d\ude81 Cam\u00e9ra libre : Naviguez librement dans le monde</li> <li>\ud83d\udd0d Syst\u00e8me de zoom : Molette pour zoomer/d\u00e9zoomer</li> <li>\u26a1 Barre d'actions : Interface en bas d'\u00e9cran</li> <li>\ud83d\udcca Informations de debug : Appuyez sur F3 pour les afficher</li> </ul>"},{"location":"user/basics/getting-started/#controles-essentiels","title":"Contr\u00f4les essentiels","text":"Touche/Action Fonction \u2b05\ufe0f\u27a1\ufe0f\u2b06\ufe0f\u2b07\ufe0f D\u00e9placer la cam\u00e9ra Molette souris Zoom avant/arri\u00e8re Clic gauche S\u00e9lectionner une unit\u00e9 F1 Aide contextuelle F3 Informations de debug \u00c9chap Retour au menu <p>\ud83d\udcd6 Pour plus de d\u00e9tails, consultez le guide des contr\u00f4les</p>"},{"location":"user/basics/getting-started/#vos-premiers-pas-dans-le-jeu","title":"\u2694\ufe0f Vos premiers pas dans le jeu","text":""},{"location":"user/basics/getting-started/#phase-1-exploration-2-3-minutes","title":"Phase 1 : Exploration (2-3 minutes)","text":"<p>Objectifs d'exploration</p> <p>\ud83c\udfaf Ce qu'il faut faire : 1. Explorez la carte avec les fl\u00e8ches directionnelles 2. Localisez vos unit\u00e9s (votre \u00e9claireur \u00e0 cot\u00e9 de votre base) 3. Rep\u00e9rez les \u00eeles et points d'int\u00e9r\u00eat 4. Identifiez les ennemis 5. Trouvez les ressources (coffres volants et or sur les \u00eeles)</p>"},{"location":"user/basics/getting-started/#phase-2-premiers-combats-5-minutes","title":"Phase 2 : Premiers combats (5 minutes)","text":"<p>Strat\u00e9gie de base</p> <p>\u2694\ufe0f Comment engager le combat : - S\u00e9lectionnez votre unit\u00e9 (clic gauche) - Approchez-vous d'un ennemi isol\u00e9 - Engagez le combat en vous rapprochant suffisamment et tirer avec la touche <code>A</code>. - Surveillez la barre de vie (au-dessus des unit\u00e9s) - Reculez si n\u00e9cessaire pour \u00e9viter la destruction</p>"},{"location":"user/basics/getting-started/#phase-3-gestion-des-ressources","title":"Phase 3 : Gestion des ressources","text":"<p>Sources d'or</p> <p>\ud83d\udcb0 Comment collecter de l'or : - \ud83c\udf81 Coffres : D\u00e9truisez les coffres dispers\u00e9s sur les \u00eeles - \ud83c\udfdd\ufe0f Ressources d'\u00eeles : Explorez et r\u00e9coltez sur les diff\u00e9rentes \u00eeles - \u2694\ufe0f Combat : \u00c9liminez des unit\u00e9s ennemies pour gagner de l'or - \ud83d\udea8 Attention : \u00c9vitez les mines explosives (objets dangereux) !</p> <p>\u00c9conomie intelligente</p> <p>\ud83d\uded2 Conseils d'achat : - Boutique : Accessible via la barre d'actions en bas d'\u00e9cran - Prix variables : Chaque type d'unit\u00e9 a un co\u00fbt diff\u00e9rent - Investissement : Commencez par des unit\u00e9s polyvalentes - \u00c9quilibre : Alternez entre attaque et d\u00e9fense</p>"},{"location":"user/basics/getting-started/#objectifs-de-votre-premiere-partie","title":"\ud83c\udfaf Objectifs de votre premi\u00e8re partie","text":""},{"location":"user/basics/getting-started/#objectifs-immediats-10-premieres-minutes","title":"Objectifs imm\u00e9diats (10 premi\u00e8res minutes)","text":"<ul> <li>[ ] Survivre aux premiers affrontements</li> <li>[ ] Collecter au moins 100 pi\u00e8ces d'or</li> <li>[ ] Acheter une nouvelle unit\u00e9</li> <li>[ ] Explorer 50% de la carte</li> <li>[ ] \u00c9liminer 3 unit\u00e9s ennemies</li> </ul>"},{"location":"user/basics/getting-started/#objectifs-a-moyen-terme-20-30-minutes","title":"Objectifs \u00e0 moyen terme (20-30 minutes)","text":"<ul> <li>[ ] Contr\u00f4ler plusieurs \u00eeles strat\u00e9giques</li> <li>[ ] Constituer une flotte de 5+ unit\u00e9s</li> <li>[ ] Ma\u00eetriser les diff\u00e9rents types d'unit\u00e9s</li> <li>[ ] D\u00e9velopper une strat\u00e9gie coh\u00e9rente</li> </ul>"},{"location":"user/basics/getting-started/#conseils-strategiques","title":"\ud83e\udde0 Conseils strat\u00e9giques","text":""},{"location":"user/basics/getting-started/#pour-bien-debuter","title":"Pour bien d\u00e9buter","text":"<p>Strat\u00e9gies gagnantes</p> <p>\ud83c\udfc6 Techniques \u00e9prouv\u00e9es : - Reconnaissance d'abord : Explorez avant d'attaquer - Combat progressif : \u00c9liminez les unit\u00e9s isol\u00e9es - Gestion de l'or : Investissez intelligemment - Positionnement : Utilisez le terrain \u00e0 votre avantage - Diversification : Variez les types d'unit\u00e9s</p>"},{"location":"user/basics/getting-started/#erreurs-de-debutant-a-eviter","title":"Erreurs de d\u00e9butant \u00e0 \u00e9viter","text":"<p>Pi\u00e8ges courants</p> <p>\u274c \u00c0 ne pas faire : - Attaquer sans plan ni reconnaissance - D\u00e9penser tout son or d'un coup - N\u00e9gliger la d\u00e9fense de vos positions - Disperser ses forces sans coordination - Ignorer les capacit\u00e9s sp\u00e9ciales des unit\u00e9s</p>"},{"location":"user/basics/getting-started/#progression-et-apprentissage","title":"\ud83d\ude80 Progression et apprentissage","text":""},{"location":"user/basics/getting-started/#etapes-damelioration","title":"\u00c9tapes d'am\u00e9lioration","text":"<ol> <li>\ud83c\udfae Ma\u00eetrise des bases (1-2 parties)</li> <li>Contr\u00f4les fluides</li> <li>Compr\u00e9hension de l'interface</li> <li> <p>Combat simple</p> </li> <li> <p>\u2694\ufe0f Tactiques avanc\u00e9es (3-5 parties)</p> </li> <li>Coordination d'unit\u00e9s</li> <li>Gestion de ressources</li> <li> <p>Strat\u00e9gies de combat</p> </li> <li> <p>\ud83c\udfc6 Expertise (10+ parties)</p> </li> <li>Optimisation des builds</li> <li>Adaptation aux situations</li> <li>Ma\u00eetrise compl\u00e8te du gameplay</li> </ol> <p>\ud83d\udcda Ressources d'apprentissage :</p> <ul> <li>Types d'unit\u00e9s et leurs r\u00f4les</li> <li>Interface et barre d'actions</li> </ul>"},{"location":"user/basics/getting-started/#conseils-pour-debuter","title":"\ud83c\udfaf Conseils pour d\u00e9buter","text":"<p>Strat\u00e9gie d\u00e9butant</p> <p>Phase d'exploration (5 premi\u00e8res minutes) 1. Explorez toute la carte 2. Localisez les sources d'or 3. Identifiez les positions ennemies 4. Planifiez votre strat\u00e9gie</p> <p>Erreurs courantes</p> <p>\u00c0 \u00e9viter : - Attaquer sans reconnaissance - D\u00e9penser sans r\u00e9fl\u00e9chir - Oublier les capacit\u00e9s sp\u00e9ciales - Disperser ses forces</p>"},{"location":"user/basics/getting-started/#problemes-frequents","title":"\u2753 Probl\u00e8mes fr\u00e9quents","text":""},{"location":"user/basics/getting-started/#le-jeu-ne-se-lance-pas-ou-sarrete-immediatement","title":"Le jeu ne se lance pas ou s'arr\u00eate imm\u00e9diatement","text":"<p>Solutions rapides</p> <p>\ud83d\udd27 Actions imm\u00e9diates : 1. Red\u00e9marrez votre ordinateur 2. V\u00e9rifiez que vous avez t\u00e9l\u00e9charg\u00e9 la bonne version (Windows/Linux/macOS) 3. Testez en tant qu'administrateur (Windows) 4. Consultez le guide de r\u00e9solution de probl\u00e8mes</p>"},{"location":"user/basics/getting-started/#problemes-daffichage-ou-de-performance","title":"Probl\u00e8mes d'affichage ou de performance","text":"<p>Configuration optimale</p> <p>\ud83d\udcfa R\u00e9glages recommand\u00e9s :</p> <ul> <li>R\u00e9solution : Commencez par 1280x720 puis agrandissez la fen\u00eatre</li> <li>Mode : Fen\u00eatr\u00e9 pour d\u00e9buter et lire la documentation en m\u00eame temps</li> </ul>"},{"location":"user/basics/getting-started/#besoin-daide-supplementaire","title":"Besoin d'aide suppl\u00e9mentaire ?","text":"<p>Ressources d'aide</p> <p>\ud83d\udcda O\u00f9 trouver de l'aide : - FAQ : Questions les plus courantes - Issues GitHub : Signaler un bug - Aide int\u00e9gr\u00e9e : Appuyez sur F1 dans le jeu</p> <p>\ud83c\udfae Pr\u00eat \u00e0 jouer ? D\u00e9couvrez maintenant le guide de gameplay !</p>"},{"location":"user/basics/installation/","title":"\u2699\ufe0f Configuration &amp; Installation","text":""},{"location":"user/basics/installation/#prerequis-systeme","title":"Pr\u00e9requis syst\u00e8me","text":""},{"location":"user/basics/installation/#configuration-minimale","title":"Configuration minimale","text":"<ul> <li>OS : Windows 10/11, macOS 10.15+, Linux (Ubuntu 18.04+)</li> <li>Processeur : Intel Core i3 ou \u00e9quivalent AMD</li> <li>M\u00e9moire : 2 GB RAM</li> <li>Stockage : 500 MB d'espace libre</li> <li>Carte graphique : Compatible OpenGL 3.3+</li> </ul>"},{"location":"user/basics/installation/#installation","title":"Installation","text":"<ol> <li>T\u00e9l\u00e9charger GaladIslands.zip selon votre syst\u00e8me d'exploitation</li> <li>Extraire l'archive dans le dossier de votre choix</li> <li>Lancer <code>galad_islands.exe</code> (Windows) ou <code>galad_islands</code> (Linux/macOS)</li> <li>Profiter du jeu !</li> </ol>"},{"location":"user/basics/installation/#configuration-du-jeu","title":"Configuration du jeu","text":""},{"location":"user/basics/installation/#galad-config-tool","title":"Galad Config Tool","text":"<p>Le jeu inclut un outil de configuration <code>galad-config-tool</code> pour ajuster les param\u00e8tres avant de jouer :</p> <ul> <li>Lancement : Double-clic sur <code>galad-config-tool</code> (inclus dans les releases)</li> <li>Fonctions : R\u00e9solutions, audio, contr\u00f4les, langue</li> <li>Avantage : Configuration avant de jouer</li> </ul> <p>Pour en savoir plus, consultez le guide d\u00e9di\u00e9.</p>"},{"location":"user/basics/installation/#parametres-graphiques","title":"Param\u00e8tres graphiques","text":"<ul> <li>R\u00e9solution : Choix parmi les r\u00e9solutions disponibles ou r\u00e9solution personnalis\u00e9e</li> <li>Mode d'affichage : Fen\u00eatr\u00e9, Plein \u00e9cran</li> </ul>"},{"location":"user/basics/installation/#parametres-audio","title":"Param\u00e8tres audio","text":"<ul> <li>Volume musique : 0.0 \u00e0 1.0 (r\u00e9glable via slider)</li> </ul>"},{"location":"user/basics/installation/#parametres-de-controles","title":"Param\u00e8tres de contr\u00f4les","text":"<ul> <li>Sensibilit\u00e9 cam\u00e9ra : 0.1 \u00e0 5.0 (r\u00e9glable via slider)</li> <li>Raccourcis clavier : Personnalisation compl\u00e8te des touches</li> <li>Mouvement des unit\u00e9s (avancer, reculer, tourner)</li> <li>Contr\u00f4les cam\u00e9ra (d\u00e9placement, mode rapide, suivi)</li> <li>S\u00e9lection (tout s\u00e9lectionner, changer d'\u00e9quipe)</li> <li>Syst\u00e8me (pause, aide, debug, boutique)</li> <li>Groupes de contr\u00f4le (assignation et s\u00e9lection)</li> </ul>"},{"location":"user/basics/installation/#parametres-de-langue","title":"Param\u00e8tres de langue","text":"<ul> <li>Langue : Fran\u00e7ais, Anglais (et autres langues disponibles)</li> </ul>"},{"location":"user/basics/installation/#depannage-des-problemes-courants","title":"D\u00e9pannage des probl\u00e8mes courants","text":""},{"location":"user/basics/installation/#le-jeu-ne-demarre-pas","title":"Le jeu ne d\u00e9marre pas","text":"<ol> <li>V\u00e9rifier les pr\u00e9requis syst\u00e8me</li> <li>Mettre \u00e0 jour les pilotes graphiques</li> <li>R\u00e9installer le jeu</li> <li>V\u00e9rifier les logs d'erreur en le lan\u00e7ant dans un terminal/console</li> <li>Sur Windows : Ouvrir <code>cmd</code>, naviguer vers le dossier du jeu et ex\u00e9cuter <code>galad-islands.exe</code></li> <li>Sur macOS/Linux : Ouvrir un terminal, naviguer vers le dossier du jeu et ex\u00e9cuter <code>./galad-islands</code></li> <li>Consulter les messages d'erreur affich\u00e9s pour identifier le probl\u00e8me et cr\u00e9er une issue sur la page GitHub du projet</li> </ol>"},{"location":"user/basics/installation/#problemes-de-performance","title":"Probl\u00e8mes de performance","text":"<ol> <li>Baisser les param\u00e8tres graphiques</li> <li>Fermer les autres applications</li> <li>Mettre \u00e0 jour le syst\u00e8me d'exploitation</li> <li>V\u00e9rifier la temp\u00e9rature du mat\u00e9riel</li> </ol>"},{"location":"user/basics/installation/#problemes-audio","title":"Probl\u00e8mes audio","text":"<ol> <li>V\u00e9rifier les param\u00e8tres audio du syst\u00e8me</li> <li>Tester avec un autre p\u00e9riph\u00e9rique</li> <li>R\u00e9installer les pilotes audio</li> <li>V\u00e9rifier le volume dans le jeu</li> </ol>"},{"location":"user/basics/installation/#mise-a-jour-du-jeu","title":"Mise \u00e0 jour du jeu","text":"<p>Le jeu ne dispose pas encore d'un syst\u00e8me de mise \u00e0 jour automatique. Pour mettre \u00e0 jour le jeu, il faut  le ret\u00e9l\u00e9charger depuis la page officielle puis resuivez les \u00e9tapes d'installation sans supprimer le fichier de configuration <code>galad_config.json</code> pour conserver vos r\u00e9glages.</p>"},{"location":"user/basics/installation/#desinstallation","title":"D\u00e9sinstallation","text":"<p>Il suffit de supprimer le dossier o\u00f9 le jeu a \u00e9t\u00e9 extrait.</p> <p>Une configuration optimale garantit la meilleure exp\u00e9rience de jeu dans les Galad Islands !</p>"},{"location":"user/basics/introduction/","title":"Introduction &amp; Pr\u00e9sentation","text":""},{"location":"user/basics/introduction/#presentation-du-jeu","title":"\ud83c\udfae Pr\u00e9sentation du jeu","text":"<p>Galad Islands est un jeu de strat\u00e9gie en temps r\u00e9el (RTS) captivant qui se d\u00e9roule dans un archipel myst\u00e9rieux et hostile. Deux \u00e9quipes s'affrontent dans une lutte acharn\u00e9e pour la domination totale des \u00eeles, combinant strat\u00e9gie tactique, gestion des ressources et combats \u00e9piques.</p>"},{"location":"user/basics/introduction/#phrase-daccroche","title":"\ud83c\udf1f Phrase d'accroche","text":"<p>\"Dans les eaux tumultueuses des Galad Islands, seuls les plus strat\u00e9giques survivront. Ma\u00eetrisez vos unit\u00e9s, contr\u00f4lez les ressources et menez votre \u00e9quipe \u00e0 la victoire !\"</p>"},{"location":"user/basics/introduction/#concept-general-du-jeu","title":"\ud83d\udcd6 Concept g\u00e9n\u00e9ral du jeu","text":""},{"location":"user/basics/introduction/#larchipel-mystique","title":"L'archipel mystique","text":"<p>Vous \u00e9voluez dans un vaste archipel compos\u00e9 de nombreuses \u00eeles volants et de zones oc\u00e9aniques. Chaque \u00eele offre des ressources pr\u00e9cieuses, des points strat\u00e9giques et des opportunit\u00e9s de combat.</p>"},{"location":"user/basics/introduction/#systeme-de-brouillard-de-guerre","title":"Syst\u00e8me de brouillard de guerre","text":"<p>Explorez progressivement l'archipel gr\u00e2ce \u00e0 un syst\u00e8me de brouillard de guerre immersif :</p> <ul> <li>Nuages noirs : Zones jamais explor\u00e9es, cachant unit\u00e9s et ressources</li> <li>Brume grise : Zones d\u00e9j\u00e0 vues mais hors de port\u00e9e actuelle</li> <li>Vision claire : Zones sous contr\u00f4le o\u00f9 vous voyez tout en temps r\u00e9el</li> </ul>"},{"location":"user/basics/introduction/#visibilite-version-beta","title":"\ud83e\uddea Visibilit\u00e9 (Version B\u00eata)","text":"<p>\u26a0\ufe0f Cette fonctionnalit\u00e9 est actuellement en d\u00e9veloppement et disponible uniquement dans la version b\u00eata du jeu.</p> <p>Le syst\u00e8me de visibilit\u00e9 avanc\u00e9 apporte une couche strat\u00e9gique suppl\u00e9mentaire au gameplay avec des port\u00e9es de vision variables selon les unit\u00e9s et une vision partag\u00e9e par \u00e9quipe.</p> <p>Note : Pour les strat\u00e9gies d\u00e9taill\u00e9es et conseils tactiques, consultez la section Brouillard de guerre et vision du guide de gameplay.</p>"},{"location":"user/basics/introduction/#gestion-des-ressources","title":"Gestion des ressources","text":"<p>L'or est la ressource vitale qui d\u00e9termine votre puissance :</p> <ul> <li>Coffres volants : Apparitions al\u00e9atoires sur la carte</li> <li>D\u00e9p\u00f4ts d'or : Ressources fixes sur certaines \u00eeles</li> <li>R\u00e9compenses de combat : Or gagn\u00e9 en \u00e9liminant des unit\u00e9s ennemies</li> </ul>"},{"location":"user/basics/introduction/#unites-et-capacites","title":"Unit\u00e9s et capacit\u00e9s","text":"<p>Cinq types d'unit\u00e9s aux r\u00f4les distincts :</p> <ul> <li>Scout : \u00c9claireur rapide et mobile</li> <li>Marandeur : Tank d\u00e9fensif et r\u00e9sistant</li> <li>Leviathan : G\u00e9ant lent mais destructeur</li> <li>Druid : Support de soin et protection</li> <li>Architect : B\u00e2tisseur et constructeur de d\u00e9fenses</li> </ul>"},{"location":"user/basics/introduction/#objectifs-principaux","title":"\ud83c\udfaf Objectifs principaux","text":""},{"location":"user/basics/introduction/#mission-principale","title":"Mission principale","text":"<p>Votre objectif ultime est de d\u00e9truire la base ennemie pour remporter la victoire. Pour cela, vous devrez :</p> <ol> <li>Explorer l'archipel pour d\u00e9couvrir les ressources</li> <li>Trouver de l'or dans les coffres volants et l'or sur l'\u00eele pour financer vos op\u00e9rations</li> <li>Produire des unit\u00e9s pour renforcer votre arm\u00e9e</li> <li>\u00c9tablir des d\u00e9fenses strat\u00e9giques</li> <li>Lancer des offensives coordonn\u00e9es pour \u00e9liminer l'adversaire</li> </ol>"},{"location":"user/basics/introduction/#conditions-de-victoire","title":"Conditions de victoire","text":"<ul> <li>Destruction de la base ennemie : Victoire classique</li> <li>Sup\u00e9riorit\u00e9 \u00e9conomique totale : L'adversaire n'a plus les moyens de se d\u00e9fendre</li> <li>Capitulation : L'adversaire abandonne face \u00e0 une situation d\u00e9sesp\u00e9r\u00e9e</li> </ul>"},{"location":"user/basics/introduction/#style-de-jeu","title":"\ud83c\udfa8 Style de jeu","text":"<p>Galad Islands offre une exp\u00e9rience strat\u00e9gique riche et accessible :</p> <ul> <li>Approche tactique : Chaque d\u00e9cision compte dans le placement des unit\u00e9s</li> <li>Exploration progressive : D\u00e9couverte graduelle du monde et des strat\u00e9gies</li> <li>Combats dynamiques : Unit\u00e9s aux capacit\u00e9s uniques cr\u00e9ant des synergies</li> </ul> <p>Que vous soyez un strat\u00e8ge aguerri ou un novice curieux, Galad Islands saura vous captiver par sa profondeur strat\u00e9gique et son univers immersif !</p>"},{"location":"user/economy/buildings/","title":"B\u00e2timents et constructions","text":"<p>Note</p> <p>Cette partie demande v\u00e9rification et compl\u00e9tion. Certaines informations peuvent \u00eatre incompl\u00e8tes ou obsol\u00e8tes.</p>"},{"location":"user/economy/buildings/#systeme-de-construction","title":"\ud83c\udfd7\ufe0f Syst\u00e8me de construction","text":""},{"location":"user/economy/buildings/#mecaniques-de-base","title":"M\u00e9caniques de base","text":"<p>Pr\u00e9requis pour construire</p> <ul> <li>Avoir un Architect dans votre arm\u00e9e</li> <li>Contr\u00f4ler une \u00eele libre (sans b\u00e2timent existant)</li> <li>Disposer de l'or n\u00e9cessaire pour la construction</li> </ul> <p>Processus de construction</p> <ol> <li>S\u00e9lectionnez votre Architect</li> <li>D\u00e9placez-le sur l'\u00eele cible</li> <li>Cliquez sur l'icone <code>Tour de D\u00e9fense</code> (touche 'f') ou <code>Tour de Soin</code> (touche 'g') en bas \u00e0 gauche de l'\u00e9cran</li> <li>Confirmez avec <code>Entr\u00e9e</code></li> </ol>"},{"location":"user/economy/buildings/#types-de-batiments","title":"\ud83c\udff0 Types de b\u00e2timents","text":""},{"location":"user/economy/buildings/#batiments-defensifs","title":"B\u00e2timents d\u00e9fensifs","text":""},{"location":"user/economy/buildings/#tour-de-defense","title":"Tour de D\u00e9fense","text":"<p>Statistiques</p> <ul> <li>Co\u00fbt : 150 pi\u00e8ces d'or</li> <li>Points de vie : 300 PV</li> <li>D\u00e9g\u00e2ts : 25 par seconde</li> <li>Port\u00e9e d'attaque : 350 pixels</li> <li>Cadence de tir : 1 tir/seconde</li> </ul> <p>Comportement</p> <ul> <li>Cible automatiquement l'ennemi le plus proche</li> <li>Priorise les unit\u00e9s sur les b\u00e2timents</li> <li>Projectiles : Attaque automatique dans la port\u00e9e</li> <li>Animation : Rotation vers la cible avant tir</li> </ul> <p>Utilisation tactique</p> <ul> <li>D\u00e9fense de chokepoint : Placez aux passages \u00e9troits</li> <li>Protection de base : Encerclez vos positions strat\u00e9giques</li> <li>Contr\u00f4le de zone : Cr\u00e9ez des zones dangereuses pour l'ennemi</li> </ul>"},{"location":"user/economy/buildings/#batiments-de-soin","title":"B\u00e2timents de soin","text":""},{"location":"user/economy/buildings/#tour-de-soin","title":"Tour de Soin","text":"<p>Statistiques</p> <ul> <li>Co\u00fbt : 120 pi\u00e8ces d'or</li> <li>Points de vie : 200 PV</li> <li>Soin : 10 PV/seconde</li> <li>Port\u00e9e de soin : 200 pixels</li> <li>Cibles : Unit\u00e9s alli\u00e9es dans la port\u00e9e</li> </ul> <p>M\u00e9canique de soin</p> <ul> <li>Soin automatique et continu</li> <li>Priorise les unit\u00e9s les plus bless\u00e9es</li> <li>Effet visuel : R\u00e9g\u00e9n\u00e9ration des unit\u00e9s alli\u00e9es</li> <li>Zone de soin : Cercle de 200 pixels de rayon</li> </ul> <p>Synergies tactiques</p> <ul> <li>Avec L\u00e9viathan : Tank quasi-immortel</li> <li>Avec Druid : Soin cumul\u00e9 tr\u00e8s puissant</li> <li>En groupe : R\u00e9seau de soin pour arm\u00e9e enti\u00e8re</li> </ul> <p>Ma\u00eetrisez l'art de la construction pour dominer les Galad Islands !</p>"},{"location":"user/economy/shop/","title":"Boutique et \u00e9conomie","text":"<p>Warning</p> <p>Cette page contient des informations obsol\u00e8tes ou incorrectes. Veuillez contacter l'\u00e9quipe de d\u00e9veloppement pour plus de d\u00e9tails.</p>"},{"location":"user/economy/shop/#systeme-economique","title":"\ud83d\udcb0 Syst\u00e8me \u00e9conomique","text":""},{"location":"user/economy/shop/#sources-de-revenus","title":"Sources de revenus","text":""},{"location":"user/economy/shop/#coffres-volants","title":"Coffres volants","text":"<ul> <li>Les coffres volants peuvent appara\u00eetre al\u00e9atoirement sur la carte</li> <li>Contiennent entre 60-150 pi\u00e8ces d'or</li> <li>Strat\u00e9gie : Positionnez vos unit\u00e9s pour les intercepter rapidement</li> </ul>"},{"location":"user/economy/shop/#or-sur-les-iles","title":"Or sur les \u00eeles","text":"<ul> <li>Certaines \u00eeles peuvent voir appara\u00eetre des d\u00e9p\u00f4ts d'or</li> <li>Contient entre 200-500 pi\u00e8ces d'or</li> <li>Strat\u00e9gie : Explorez m\u00e9thodiquement pour d\u00e9couvrir les gisements</li> </ul> <p>Warning</p> <p>Les d\u00e9p\u00f4ts d'or et les coffres volants sont limit\u00e9s dans le temps et peuvent dispara\u00eetre.</p>"},{"location":"user/economy/shop/#recompenses-de-combat","title":"R\u00e9compenses de combat","text":"<ul> <li>Gagnez de l'or en \u00e9liminant des unit\u00e9s ennemies</li> <li>La quantit\u00e9 correspond \u00e0 la moiti\u00e9 du co\u00fbt de l'unit\u00e9 \u00e9limin\u00e9e</li> <li>Scout : 10 or \u2192 5 or</li> <li>Maraudeur : 20 or \u2192 10 or</li> <li>Leviathan : 40 or \u2192 20 or</li> <li>Druid : 30 or \u2192 15 or</li> <li>Architect : 30 or \u2192 15 or</li> <li>Strat\u00e9gie : Tuez des unit\u00e9s co\u00fbteuses pour maximiser les gains</li> </ul>"},{"location":"user/economy/shop/#gestion-des-ressources","title":"Gestion des ressources","text":"<p>Strat\u00e9gie \u00e9conomique</p> <p>Priorit\u00e9s en d\u00e9but de partie :</p> <ol> <li>Explorez pour trouver l'or facile</li> <li>Conservez toujours une r\u00e9serve d'urgence</li> <li>D\u00e9truisez les unit\u00e9s ennemies pour de l'or</li> <li>Ne pas perdre des unit\u00e9s inutilement (surtout dans des combats contre votre ennemi)</li> </ol>"},{"location":"user/economy/shop/#interface-de-la-boutique","title":"\ud83d\uded2 Interface de la boutique","text":""},{"location":"user/economy/shop/#ouvrir-la-boutique","title":"Ouvrir la boutique","text":"<ul> <li>Touche : <code>B</code></li> <li>Alternative : Clic sur l'ic\u00f4ne boutique</li> <li>Disponible : En permanence pendant le jeu</li> </ul>"},{"location":"user/economy/shop/#categorie-unites","title":"\ud83d\udc65 Cat\u00e9gorie : Unit\u00e9s","text":""},{"location":"user/economy/shop/#unites-de-combat","title":"Unit\u00e9s de combat","text":""},{"location":"user/economy/shop/#scout-leger","title":"Scout L\u00e9ger","text":"<ul> <li>Prix : 10 pi\u00e8ces d'or</li> <li>Description : \"Scout rapide et polyvalent\"</li> <li>Statistiques :</li> <li>Vie : 60 PV</li> <li>Attaque : 10 d\u00e9g\u00e2ts</li> <li>Vitesse : 5.0</li> <li>Port\u00e9e de vision : 6.0</li> </ul>"},{"location":"user/economy/shop/#maraudeur-moyen","title":"Maraudeur Moyen","text":"<ul> <li>Prix : 20 pi\u00e8ces d'or</li> <li>Description : \"Guerrier robuste avec bouclier\"</li> <li>Statistiques :</li> <li>Vie : 130 PV</li> <li>Attaque : 20 d\u00e9g\u00e2ts</li> <li>Vitesse : 3.5</li> <li>Port\u00e9e de vision : 5.0</li> </ul>"},{"location":"user/economy/shop/#leviathan-lourd","title":"L\u00e9viathan Lourd","text":"<ul> <li>Prix : 40 pi\u00e8ces d'or</li> <li>Description : \"L\u00e9viathan lourd destructeur\"  </li> <li>Statistiques :</li> <li>Vie : 300 PV</li> <li>Attaque : 30 d\u00e9g\u00e2ts</li> <li>Vitesse : 2.0</li> <li>Port\u00e9e de vision : 4.0</li> </ul>"},{"location":"user/economy/shop/#unites-de-support","title":"Unit\u00e9s de support","text":""},{"location":"user/economy/shop/#druid-soigneur","title":"Druid - Soigneur","text":"<ul> <li>Prix : 30 pi\u00e8ces d'or</li> <li>Description : \"Soigneur et support magique\"</li> <li>Statistiques :</li> <li>Vie : 130 PV</li> <li>Soin : 20 PV/seconde</li> <li>Vitesse : 3.5</li> <li>Port\u00e9e de vision : 5.0</li> </ul>"},{"location":"user/economy/shop/#architect-constructeur","title":"Architect - Constructeur","text":"<ul> <li>Prix : 30 pi\u00e8ces d'or</li> <li>Description : \"Constructeur de d\u00e9fenses\"</li> <li>Statistiques :</li> <li>Vie : 130 PV</li> <li>Attaque : 20 d\u00e9g\u00e2ts</li> <li>Vitesse : 3.5</li> <li>Port\u00e9e de vision : 4.0</li> </ul>"},{"location":"user/economy/shop/#categorie-batiments","title":"\ud83c\udff0 Cat\u00e9gorie : B\u00e2timents","text":""},{"location":"user/economy/shop/#defenses","title":"D\u00e9fenses","text":""},{"location":"user/economy/shop/#tour-de-defense","title":"Tour de D\u00e9fense","text":"<ul> <li>Prix : 100 pi\u00e8ces d'or</li> <li>Pr\u00e9requis : Architect sur une \u00eele</li> <li>Description : \"Tour d'attaque automatique\"</li> <li>Statistiques :</li> <li>Vie : 300 PV</li> <li>Attaque : 40 d\u00e9g\u00e2ts/seconde</li> <li>Port\u00e9e : 150 pixels</li> <li>Cibles : Unit\u00e9s ennemies</li> </ul>"},{"location":"user/economy/shop/#tour-de-soin","title":"Tour de Soin","text":"<ul> <li>Prix : 125 pi\u00e8ces d'or  </li> <li>Pr\u00e9requis : Architect sur une \u00eele</li> <li>Description : \"Tour de r\u00e9g\u00e9n\u00e9ration alli\u00e9e\"</li> <li>Statistiques :</li> <li>Vie : 250 PV</li> <li>Soin : 15 PV/seconde</li> <li>Port\u00e9e : 120 pixels</li> <li>Cibles : Unit\u00e9s alli\u00e9es</li> </ul>"},{"location":"user/economy/shop/#conseils-dachat","title":"\ud83d\udca1 Conseils d'achat","text":""},{"location":"user/economy/shop/#debut-de-partie-0-500-or","title":"D\u00e9but de partie (0-500 or)","text":"<p>Build d'exploration</p> <p>Achat recommand\u00e9 :</p> <ol> <li>2x Scout (100 or) - Reconnaissance</li> <li>1x Maraudeur (100 or) - Protection  </li> <li>1x Druid (150 or) - Soutien</li> <li>1x Architect (200 or) - Construction</li> <li>\u00c9conomiser le reste pour les opportunit\u00e9s</li> </ol>"},{"location":"user/economy/shop/#milieu-de-partie-500-1500-or","title":"Milieu de partie (500-1500 or)","text":"<p>Build \u00e9quilibr\u00e9</p> <p>D\u00e9veloppement recommand\u00e9 :</p> <ol> <li>1x Leviathan (300 or) - Puissance</li> <li>1x Architect (200 or) - D\u00e9fenses</li> <li>2x Tours de d\u00e9fense (200 or) - S\u00e9curit\u00e9</li> </ol>"},{"location":"user/economy/shop/#fin-de-partie-1500-or","title":"Fin de partie (1500+ or)","text":"<p>Build de domination</p> <p>Formation finale :</p> <ol> <li>2x Leviathan (600 or) - Destruction</li> <li>R\u00e9seau de tour de soin (400 or) - Soutien</li> <li>R\u00e9seau de tour de d\u00e9fense (300+ or) - Contr\u00f4le</li> </ol>"},{"location":"user/economy/shop/#erreurs-dachat-courantes","title":"\ud83d\udeab Erreurs d'achat courantes","text":""},{"location":"user/economy/shop/#a-eviter","title":"\u00c0 \u00e9viter","text":"<p>Pi\u00e8ges \u00e9conomiques</p> <p>Ne faites jamais \u00e7a :</p> <ul> <li>Acheter un Draupnir sans protection</li> <li>Construire des tours sans les d\u00e9fendre</li> <li>Oublier de diversifier son arm\u00e9e</li> </ul>"},{"location":"user/economy/shop/#gestion-des-priorites","title":"Gestion des priorit\u00e9s","text":"<p>Toujours priorit\u00e9 \u00e0 :</p> <ol> <li>La survie (avoir au moins 1 unit\u00e9)</li> <li>L'\u00e9conomie (s\u00e9curiser les mines)  </li> <li>L'exploration (conna\u00eetre la carte)</li> <li>La d\u00e9fense (avant l'attaque)</li> <li>L'expansion (contr\u00f4ler plus de territoire)</li> </ol>"},{"location":"user/gameplay/action-bar/","title":"Interface et barre d'action","text":""},{"location":"user/gameplay/action-bar/#vue-densemble-de-linterface","title":"\ud83c\udfae Vue d'ensemble de l'interface","text":""},{"location":"user/gameplay/action-bar/#elements-principaux","title":"\u00c9l\u00e9ments principaux","text":"<p>L'interface de Galad Islands est con\u00e7ue pour \u00eatre intuitive et accessible, avec tous les \u00e9l\u00e9ments essentiels visibles en permanence pendant le jeu.</p> <p>Disposition de l'\u00e9cran :</p> <ul> <li>Zone de jeu : Centre de l'\u00e9cran (vue de la carte)</li> <li>Barre d'action : En bas \u00e0 gauche de l'\u00e9cran</li> <li>Or : En bas au centre</li> <li>Informations des unit\u00e9s : En bas au centre (\u00e0 c\u00f4t\u00e9 de l'or)</li> </ul>"},{"location":"user/gameplay/action-bar/#barre-daction-detaillee","title":"\ud83d\udd27 Barre d'action d\u00e9taill\u00e9e","text":""},{"location":"user/gameplay/action-bar/#informations-de-ressources","title":"Informations de ressources","text":""},{"location":"user/gameplay/action-bar/#compteur-dor","title":"Compteur d'or","text":"<ul> <li>Position : Centre bas de l'\u00e9cran</li> <li>Format : Ic\u00f4ne pi\u00e8ce + nombre actuel</li> <li>Couleur : Dor\u00e9 brillant</li> <li>Mise \u00e0 jour : Temps r\u00e9el</li> </ul>"},{"location":"user/gameplay/action-bar/#boutons-daction-rapide","title":"Boutons d'action rapide","text":""},{"location":"user/gameplay/action-bar/#boutique-b","title":"Boutique (<code>B</code>)","text":"<ul> <li>Fonction : Ouvre l'interface d'achat</li> <li>Raccourci : Touche <code>B</code></li> <li>\u00c9tat : Toujours disponible</li> </ul>"},{"location":"user/gameplay/action-bar/#informations-de-selection","title":"Informations de s\u00e9lection","text":""},{"location":"user/gameplay/action-bar/#unite-selectionnee","title":"Unit\u00e9 s\u00e9lectionn\u00e9e","text":"<p>Panneau d'information (bas \u00e0 droite)</p> <ul> <li>Nom : Type d'unit\u00e9 (Scout, Maraudeur, etc.)</li> <li>Statistiques :</li> <li>Barre de vie (PV actuels/PV maximum)</li> </ul> <p>Capacit\u00e9s disponibles (bas \u00e0 gauche)</p> <ul> <li>Ic\u00f4nes : Capacit\u00e9s sp\u00e9ciales de l'unit\u00e9</li> <li>Cooldowns : Temps de recharge restant</li> </ul>"},{"location":"user/gameplay/action-bar/#gestion-de-la-selection","title":"Gestion de la s\u00e9lection","text":"<ul> <li>Focus unique : L'interface affiche toujours l'unit\u00e9 actuellement cibl\u00e9e</li> <li>Bascule de faction : <code>T</code> permet de changer la faction prise en compte (d\u00e9veloppement uniquement)</li> </ul>"},{"location":"user/gameplay/action-bar/#etats-et-notifications","title":"\u00c9tats et notifications","text":""},{"location":"user/gameplay/action-bar/#indicateurs-de-cooldown","title":"Indicateurs de cooldown","text":"<p>Info</p> <p>Les boosts ne sont pas encore impl\u00e9ment\u00e9s dans le jeu.</p> <p>Boosts temporaires</p> <ul> <li>En cooldown : Ic\u00f4ne + temps restant</li> <li>Disponible : Ic\u00f4ne + co\u00fbt affich\u00e9</li> </ul>"},{"location":"user/gameplay/action-bar/#alertes-et-warnings","title":"Alertes et warnings","text":"<p>Notifications syst\u00e8me :</p> <ul> <li>Or insuffisant : Message rouge clignotant</li> </ul>"},{"location":"user/gameplay/action-bar/#workflow-optimise","title":"Workflow optimis\u00e9","text":"<p>S\u00e9quence type d'action :</p> <ol> <li>V\u00e9rifier les ressources disponibles</li> <li>S\u00e9lectionner les unit\u00e9s concern\u00e9es</li> <li>Choisir l'action (mouvement, attaque, construction)</li> <li>Confirmer avec les raccourcis appropri\u00e9s</li> <li>Surveiller l'ex\u00e9cution et les cooldowns</li> </ol>"},{"location":"user/gameplay/action-bar/#interface-debug-et-avancee","title":"\ud83d\udd0d Interface debug et avanc\u00e9e","text":""},{"location":"user/gameplay/action-bar/#informations-developpeur","title":"Informations d\u00e9veloppeur","text":"<p>Mode debug (si activ\u00e9)</p> <ul> <li>FPS : Images par seconde dans le coin</li> <li>Coordonn\u00e9es : Position du curseur</li> <li>\u00c9tats unit\u00e9s : Informations d\u00e9taill\u00e9es sur s\u00e9lection</li> <li>Logs syst\u00e8me : Messages de diagnostic</li> </ul>"},{"location":"user/gameplay/action-bar/#commandes-console","title":"Commandes console","text":"<p>Raccourcis d\u00e9veloppeur :</p> <ul> <li><code>F3</code> : Afficher le mode debug</li> </ul> <p>Attention</p> <p>Les commandes d\u00e9veloppeur peuvent affecter l'\u00e9quilibre du jeu. Utilisez-les uniquement pour le test ou le d\u00e9bogage.</p> <p>Maintenant que vous ma\u00eetrisez l'interface, explorez les strat\u00e9gies de gameplay pour dominer vos adversaires !</p>"},{"location":"user/gameplay/controls/","title":"\ud83d\udd79\ufe0f Commandes &amp; Interfaces","text":""},{"location":"user/gameplay/controls/#interface-principale","title":"Interface principale","text":""},{"location":"user/gameplay/controls/#menu-pause","title":"Menu pause","text":"<ul> <li>Reprendre : Reprendre la partie</li> <li>Options : Param\u00e8tres audio, graphiques, contr\u00f4les</li> <li>Aide : Tutoriels, raccourcis clavier, \u00e0 propos</li> <li>Quitter : Finir la partie</li> </ul>"},{"location":"user/gameplay/controls/#barre-doutils-basse","title":"Barre d'outils basse","text":"<ul> <li>Boutique : Boutons pour acheter chaque type d'unit\u00e9 disponible</li> <li>Actions sp\u00e9ciales : Attaque, Capacit\u00e9s sp\u00e9ciales</li> <li>Informations : Or actuel, Vie de l'unit\u00e9 s\u00e9lectionn\u00e9e</li> </ul>"},{"location":"user/gameplay/controls/#zone-de-jeu","title":"Zone de jeu","text":"<ul> <li>Carte : Vue d'ensemble des \u00eeles et unit\u00e9s</li> <li>Informations d\u00e9taill\u00e9es : Stats des unit\u00e9s s\u00e9lectionn\u00e9es</li> </ul>"},{"location":"user/gameplay/controls/#controles-de-base","title":"Contr\u00f4les de base","text":""},{"location":"user/gameplay/controls/#navigation","title":"Navigation","text":"<ul> <li>Clic gauche : S\u00e9lectionner une unit\u00e9</li> <li>Clic droit : Donner un ordre de mouvement</li> </ul>"},{"location":"user/gameplay/controls/#actions-speciales","title":"Actions sp\u00e9ciales","text":"<ul> <li>A : Attaque / Tire un boulet</li> <li>Ctrl : Ralentir l'unit\u00e9 s\u00e9lectionn\u00e9e</li> <li>Tab : Basculer le mode d'attaque frontale ou lat\u00e9ral</li> <li>E : Capacit\u00e9 sp\u00e9ciale de l'unit\u00e9 s\u00e9lectionn\u00e9e</li> </ul>"},{"location":"user/gameplay/controls/#raccourcis-clavier-avances","title":"Raccourcis clavier avanc\u00e9s","text":""},{"location":"user/gameplay/controls/#gestion-des-groupes-dunites","title":"Gestion des groupes d'unit\u00e9s","text":"<ul> <li>1-2 : Changer d'unit\u00e9 s\u00e9lectionn\u00e9e</li> <li>T : Changer d'\u00e9quipe</li> </ul>"},{"location":"user/gameplay/controls/#controle-de-la-camera","title":"Contr\u00f4le de la cam\u00e9ra","text":"<ul> <li>Fl\u00e8ches directionnelles : D\u00e9placer la cam\u00e9ra</li> <li>C : Basculer le suivi automatique de l'unit\u00e9</li> <li>Molette : Zoom avant/arri\u00e8re</li> </ul>"},{"location":"user/gameplay/controls/#interface-utilisateur","title":"Interface utilisateur","text":"<ul> <li>\u00c9chap : Menu pause/options</li> <li>F1 : Afficher l'aide</li> <li>F3 : Mode debug (d\u00e9veloppeur)</li> </ul>"},{"location":"user/gameplay/controls/#commandes-speciales","title":"Commandes sp\u00e9ciales","text":""},{"location":"user/gameplay/controls/#capacites-speciales-par-unite","title":"Capacit\u00e9s sp\u00e9ciales par unit\u00e9","text":"<ul> <li>Scout : Man\u0153uvre d'\u00e9vasion (invincibilit\u00e9 temporaire)</li> <li>Maraudeur : R\u00e9duction des boucliers ennemis</li> <li>L\u00e9viathan : Double tir (deuxi\u00e8me projectile gratuit)</li> <li>Druid : Projectile de liane immobilisant</li> <li>Architect : Acc\u00e9l\u00e9ration du rechargement des Zeppelins alli\u00e9s</li> </ul> <p>Activation des capacit\u00e9s</p> <p>Toutes les capacit\u00e9s sp\u00e9ciales s'activent avec la touche E quand l'unit\u00e9 correspondante est s\u00e9lectionn\u00e9e. Chaque capacit\u00e9 a son propre temps de recharge.</p> <p>Ma\u00eetrisez ces contr\u00f4les et l'interface deviendra une extension naturelle de votre strat\u00e9gie !</p>"},{"location":"user/gameplay/gameplay/","title":"Gameplay &amp; Progression","text":""},{"location":"user/gameplay/gameplay/#mission-principale","title":"\ud83c\udfaf Mission principale","text":""},{"location":"user/gameplay/gameplay/#objectif-de-victoire","title":"Objectif de victoire","text":"<p>Votre mission dans Galad Islands est de d\u00e9truire la base ennemie pour remporter la partie. La base ennemie est repr\u00e9sent\u00e9e par un b\u00e2timent sp\u00e9cial qui doit \u00eatre localis\u00e9 et \u00e9limin\u00e9.</p>"},{"location":"user/gameplay/gameplay/#conditions-de-victoire","title":"Conditions de victoire","text":"<ul> <li>Destruction de la base : \u00c9liminez compl\u00e8tement le b\u00e2timent principal adverse</li> </ul>"},{"location":"user/gameplay/gameplay/#duree-moyenne-dune-partie","title":"Dur\u00e9e moyenne d'une partie","text":"<ul> <li>Parties courtes : 5-10 minutes (rushes agressifs)</li> <li>Parties \u00e9quilibr\u00e9es : 15-25 minutes (d\u00e9veloppement \u00e9quilibr\u00e9)</li> <li>Parties longues : 30+ minutes (guerres d'usure)</li> </ul>"},{"location":"user/gameplay/gameplay/#strategies-pour-prendre-lavantage","title":"\ud83c\udfc6 Strat\u00e9gies pour prendre l'avantage","text":""},{"location":"user/gameplay/gameplay/#philosophies-de-jeu","title":"Philosophies de jeu","text":""},{"location":"user/gameplay/gameplay/#le-rusher-agressif","title":"Le Rusher agressif \u26a1","text":"<p>Style : Attaque pr\u00e9coce et d\u00e9cisive - Objectif : Victoire rapide par \u00e9limination directe - Unit\u00e9s cl\u00e9s : 3-4 Scouts + 1 Maraudeur - Timing : Attaque d\u00e8s 2-3 minutes de jeu - \u00c9conomie : Minimale, focus sur le militaire</p> <p>Avantages :</p> <ul> <li>Surprendre l'adversaire avant qu'il soit pr\u00eat</li> <li>Victoire rapide si l'attaque r\u00e9ussit</li> <li>Moins de ressources gaspill\u00e9es</li> </ul> <p>Risques :</p> <ul> <li>Facilement contrable avec des d\u00e9fenses</li> <li>\u00c9chec co\u00fbteux si l'attaque rate</li> </ul>"},{"location":"user/gameplay/gameplay/#le-defenseur-territorial","title":"Le D\u00e9fenseur territorial \ud83d\udee1\ufe0f","text":"<p>Style : Contr\u00f4le territorial par les d\u00e9fenses</p> <ul> <li>Objectif : Imprenable une fois \u00e9tabli</li> <li>Strat\u00e9gie : R\u00e9seau de tours + Leviathan</li> <li>Forces : Quasi-invuln\u00e9rable en position d\u00e9fensive</li> <li>Faiblesses : Vuln\u00e9rable aux attaques surprises</li> </ul> <p>Avantages :</p> <ul> <li>Tr\u00e8s difficile \u00e0 d\u00e9loger</li> <li>Protection contre les raids</li> <li>\u00c9conomie stable</li> </ul> <p>Risques :</p> <ul> <li>Faible mobilit\u00e9 offensive</li> <li>Co\u00fbteux \u00e0 \u00e9tablir</li> </ul>"},{"location":"user/gameplay/gameplay/#ladaptateur-hybride","title":"L'Adaptateur hybride \ud83d\udd04","text":"<p>Style : Flexibilit\u00e9 et adaptation</p> <ul> <li>Principe : S'adapter \u00e0 l'adversaire et \u00e0 la carte</li> <li>Flexibilit\u00e9 : Changer de strat\u00e9gie selon la situation</li> <li>Comp\u00e9tences : Lecture de jeu optimale</li> <li>Complexit\u00e9 : Niveau expert requis</li> </ul>"},{"location":"user/gameplay/gameplay/#tactiques-de-combat","title":"Tactiques de combat","text":""},{"location":"user/gameplay/gameplay/#micromanagement-des-unites","title":"Micromanagement des unit\u00e9s","text":"<p>Kiting et Hit-and-run :</p> <ul> <li>Approchez \u00e0 port\u00e9e maximale</li> <li>Attaquez puis retraitez imm\u00e9diatement</li> <li>R\u00e9p\u00e9tez jusqu'\u00e0 \u00e9limination</li> <li>Id\u00e9al avec les Zasper contre les unit\u00e9s lentes</li> </ul> <p>Concentration de tir :</p> <ul> <li>Ciblez les menaces prioritaires</li> <li>\u00c9liminez dans l'ordre : Druid \u2192 Leviathan \u2192 Architect</li> </ul>"},{"location":"user/gameplay/gameplay/#formations-tactiques","title":"Formations tactiques","text":"<p>Phalange d\u00e9fensive :</p> <pre><code>    Leviathan\nMaraudeur  Maraudeur\n    Druid\n</code></pre> <ul> <li>Leviathan absorbe les d\u00e9g\u00e2ts frontaux</li> <li>Maraudeur prot\u00e8gent les flancs</li> <li>Druid maintient les PV</li> <li>Id\u00e9ale pour contr\u00f4ler les passages</li> </ul> <p>Essaim offensif :</p> <pre><code>Scout  Scout  Scout\n  Scout  Scout\n    Maraudeur\n</code></pre> <ul> <li>Scout harc\u00e8lent en meute</li> <li>Mobilit\u00e9 pour les flanquements</li> <li>Maraudeur en soutien</li> </ul>"},{"location":"user/gameplay/gameplay/#systemes-economiques-et-de-progression","title":"\ud83d\udcb0 Syst\u00e8mes \u00e9conomiques et de progression","text":""},{"location":"user/gameplay/gameplay/#sources-dor","title":"Sources d'or","text":""},{"location":"user/gameplay/gameplay/#coffres-volants","title":"Coffres volants","text":"<ul> <li>Apparitions p\u00e9riodiques sur la carte</li> <li>Quantit\u00e9 variable (50-200 pi\u00e8ces)</li> <li>Strat\u00e9gie : Positionnez vos unit\u00e9s pour les intercepter</li> </ul>"},{"location":"user/gameplay/gameplay/#depots-dor-sur-les-iles","title":"D\u00e9p\u00f4ts d'or sur les \u00eeles","text":"<ul> <li>Ressources fixes \u00e0 d\u00e9couvrir</li> <li>Quantit\u00e9 variable (200-500 pi\u00e8ces)</li> <li>Strat\u00e9gie : Explorez m\u00e9thodiquement</li> </ul>"},{"location":"user/gameplay/gameplay/#recompenses-de-combat","title":"R\u00e9compenses de combat","text":"<ul> <li>Or gagn\u00e9 en tuant des unit\u00e9s ennemies</li> <li>Proportionnel \u00e0 la puissance de l'unit\u00e9</li> <li>Strat\u00e9gie : Combats s\u00e9lectifs rentables</li> </ul>"},{"location":"user/gameplay/gameplay/#progression-economique","title":"Progression \u00e9conomique","text":""},{"location":"user/gameplay/gameplay/#seuils-critiques","title":"Seuils critiques","text":"<ul> <li>200 or : Unit\u00e9 de base (Scout)</li> <li>400 or : Marandeur ou tour de d\u00e9fense</li> <li>600 or : Leviathan ou capacit\u00e9s sp\u00e9ciales</li> <li>800+ or : Arm\u00e9e compl\u00e8te</li> </ul>"},{"location":"user/gameplay/gameplay/#gestion-des-risques","title":"Gestion des risques","text":"<ul> <li>Gardez toujours une r\u00e9serve d'urgence</li> <li>\u00c9vitez les achats impulsifs</li> <li>Prot\u00e9gez vos sources de revenus</li> <li>Interceptez les coffres volants</li> </ul>"},{"location":"user/gameplay/gameplay/#controle-territorial-et-strategie","title":"\ud83d\uddfa\ufe0f Contr\u00f4le territorial et strat\u00e9gie","text":""},{"location":"user/gameplay/gameplay/#les-iles-centres-strategiques","title":"Les \u00eeles : centres strat\u00e9giques","text":"<p>R\u00f4le des \u00eeles : Les \u00eeles sont les points cl\u00e9s du contr\u00f4le territorial. Elles permettent de :</p> <ul> <li>Construire des tours : D\u00e9fense et soin automatiques</li> <li>Collecter des ressources : Or apparaissent p\u00e9riodiquement</li> <li>Contr\u00f4ler les routes : Bloquer les mouvements ennemis</li> </ul>"},{"location":"user/gameplay/gameplay/#systeme-de-construction","title":"Syst\u00e8me de construction","text":"<p>Tours de d\u00e9fense (150 or) :</p> <ul> <li>PV : 300 | D\u00e9g\u00e2ts : 25 | Port\u00e9e : 350</li> <li>Attaque automatiquement les ennemis \u00e0 proximit\u00e9</li> <li>Rechargement : 1 seconde entre les tirs</li> </ul> <p>Tours de soin (120 or) :</p> <ul> <li>PV : 200 | Soin : 10 PV | Port\u00e9e : 350</li> <li>R\u00e9g\u00e9n\u00e8re automatiquement les alli\u00e9s proches</li> <li>Rechargement : 1 seconde entre les soins</li> </ul> <p>Construction :</p> <ol> <li>S\u00e9lectionner un Architecte</li> <li>Cliquer sur \"Tour de D\u00e9fense\" ou \"Tour de Soin\" dans la barre d'action</li> <li>Cliquer sur une \u00eele vide pour placer la tour</li> <li>Une seule tour par \u00eele possible</li> </ol>"},{"location":"user/gameplay/gameplay/#expansion-territoriale","title":"Expansion territoriale","text":""},{"location":"user/gameplay/gameplay/#phase-1-0-3-min-securisation","title":"Phase 1 (0-3 min) : S\u00e9curisation","text":"<ul> <li>Contr\u00f4ler 2-3 \u00eeles proches de votre base</li> <li>\u00c9tablir une \u00e9conomie stable via les coffres</li> <li>Placer une tour de d\u00e9fense minimale</li> </ul>"},{"location":"user/gameplay/gameplay/#phase-2-3-6-min-developpement","title":"Phase 2 (3-6 min) : D\u00e9veloppement","text":"<ul> <li>\u00c9tendre vers les \u00eeles strat\u00e9giques</li> <li>Construire un r\u00e9seau d\u00e9fensif coordonn\u00e9</li> <li>Maintenir la pression \u00e9conomique</li> </ul>"},{"location":"user/gameplay/gameplay/#phase-3-6-min-domination","title":"Phase 3 (6+ min) : Domination","text":"<ul> <li>Contr\u00f4ler la majorit\u00e9 des \u00eeles</li> <li>Sup\u00e9riorit\u00e9 \u00e9conomique \u00e9crasante</li> <li>D\u00e9fense imp\u00e9n\u00e9trable</li> </ul>"},{"location":"user/gameplay/gameplay/#strategies-adaptatives","title":"Strat\u00e9gies adaptatives","text":"<p>Contre les attaques pr\u00e9coces :</p> <ol> <li>Construire imm\u00e9diatement une tour de d\u00e9fense pr\u00e8s de la base</li> <li>Regrouper vos unit\u00e9s en position d\u00e9fensive</li> <li>Utiliser le terrain (\u00eeles) comme couverture</li> </ol> <p>Contre l'\u00e9conomie adverse :</p> <ol> <li>Harceler constamment ses sources de coffres</li> <li>Contr\u00f4ler les \u00eeles riches en ressources</li> <li>Lancer des raids sur ses lignes d'approvisionnement</li> </ol> <p>Contre la strat\u00e9gie d\u00e9fensive :</p> <ol> <li>Expansion p\u00e9riph\u00e9rique pour contourner</li> <li>Sup\u00e9riorit\u00e9 \u00e9conomique pour submerger</li> <li>Victoire par asphyxie \u00e9conomique</li> </ol>"},{"location":"user/gameplay/gameplay/#lecture-du-jeu-adverse","title":"\ud83c\udfb2 Lecture du jeu adverse","text":""},{"location":"user/gameplay/gameplay/#indices-strategiques","title":"Indices strat\u00e9giques","text":"<p>Signes d'une strat\u00e9gie agressive :</p> <ul> <li>Production massive de Scout (reconnaissance offensive)</li> <li>Peu de constructions d\u00e9fensives</li> <li>Attaques pr\u00e9coces et r\u00e9p\u00e9t\u00e9es</li> </ul> <p>Signes d'une strat\u00e9gie \u00e9conomique :</p> <ul> <li>Architecte produit en priorit\u00e9</li> <li>Construction rapide de tours</li> <li>Expansion m\u00e9thodique et patiente</li> </ul> <p>Signes d'une strat\u00e9gie d\u00e9fensive :</p> <ul> <li>Nombreuses tours de d\u00e9fense</li> <li>Peu d'activit\u00e9 offensive</li> <li>Contr\u00f4le territorial maximal</li> </ul>"},{"location":"user/gameplay/gameplay/#gestion-psychologique","title":"Gestion psychologique","text":"<ul> <li>Garder son calme face aux impr\u00e9vus</li> <li>S'adapter plut\u00f4t que paniquer</li> <li>Chaque d\u00e9faite apporte des le\u00e7ons</li> <li>La patience est souvent r\u00e9compens\u00e9e</li> </ul>"},{"location":"user/gameplay/gameplay/#brouillard-de-guerre-et-vision-version-beta","title":"\ud83c\udf2b\ufe0f Brouillard de guerre et vision (Version B\u00eata)","text":"<p>\u26a0\ufe0f Cette fonctionnalit\u00e9 est actuellement en d\u00e9veloppement et disponible uniquement dans la version b\u00eata du jeu.</p>"},{"location":"user/gameplay/gameplay/#principes-du-brouillard-de-guerre","title":"Principes du brouillard de guerre","text":"<p>Le brouillard de guerre transforme chaque partie en une danse strat\u00e9gique entre ombre et lumi\u00e8re :</p>"},{"location":"user/gameplay/gameplay/#etats-des-zones","title":"\u00c9tats des zones","text":"<ul> <li>Brouillard \u00e9pais : Territoires inexplor\u00e9s, potentiellement riches en ressources cach\u00e9es</li> <li>Brume grise : Zones d\u00e9j\u00e0 d\u00e9couvertes mais actuellement hors de vue</li> <li>Vision claire : Territoires sous contr\u00f4le actif de votre \u00e9quipe</li> </ul>"},{"location":"user/gameplay/gameplay/#strategies-de-vision","title":"Strat\u00e9gies de vision","text":""},{"location":"user/gameplay/gameplay/#exploration-agressive","title":"Exploration agressive","text":"<p>Objectif : D\u00e9couvrir rapidement la carte</p> <ul> <li>Utilisez les Scouts pour \u00e9tendre votre champ de vision</li> <li>Cr\u00e9ez des \"patrouilles d'exploration\" d\u00e9di\u00e9es</li> <li>Priorisez les \u00eeles strat\u00e9giques pour les ressources</li> </ul>"},{"location":"user/gameplay/gameplay/#vision-defensive","title":"Vision d\u00e9fensive","text":"<p>Objectif : Prot\u00e9ger vos positions</p> <ul> <li>Placez des unit\u00e9s sentinelles autour de vos bases</li> <li>Utilisez la vision des tours pour couvrir les approches</li> <li>Cr\u00e9ez des \"zones de surveillance\" autour des points vitaux</li> </ul>"},{"location":"user/gameplay/gameplay/#guerre-psychologique","title":"Guerre psychologique","text":"<p>Objectif : Manipuler la perception ennemie</p> <ul> <li>Cachez vos mouvements derri\u00e8re la vision r\u00e9duite de votre adversaire</li> <li>Cr\u00e9ez des diversions dans des zones visibles</li> <li>Utilisez l'effet de surprise pour vos attaques</li> </ul>"},{"location":"user/gameplay/gameplay/#avantages-tactiques-du-brouillard","title":"Avantages tactiques du brouillard","text":""},{"location":"user/gameplay/gameplay/#embuscades-et-surprises","title":"Embuscades et surprises","text":"<ul> <li>Positionnez des unit\u00e9s dans des zones non visibles</li> <li>Attaquez des convois de ressources ennemis</li> <li>Tendez des pi\u00e8ges aux explorateurs adverses</li> </ul>"},{"location":"user/gameplay/gameplay/#gestion-des-ressources","title":"Gestion des ressources","text":"<ul> <li>Prot\u00e9gez vos collecteurs d'or des raids surprises</li> <li>Interceptez les coffres volants avant l'ennemi</li> <li>Cachez vos constructions d\u00e9fensives</li> </ul>"},{"location":"user/gameplay/gameplay/#pression-psychologique","title":"Pression psychologique","text":"<ul> <li>Forcez l'adversaire \u00e0 maintenir des unit\u00e9s d'\u00e9clairage</li> <li>Cr\u00e9ez l'illusion d'une pr\u00e9sence plus importante</li> <li>Semez le doute sur vos v\u00e9ritables intentions</li> </ul>"},{"location":"user/gameplay/gameplay/#conseils-pour-maitriser-le-brouillard","title":"Conseils pour ma\u00eetriser le brouillard","text":""},{"location":"user/gameplay/gameplay/#exploration-methodique","title":"Exploration m\u00e9thodique","text":"<ol> <li>Commencez local : S\u00e9curisez votre zone de d\u00e9part</li> <li>\u00c9tendez progressivement : Avancez \u00eele par \u00eele</li> <li>Priorisez les ressources : Cherchez l'or visible en premier</li> <li>Maintenez la pression : Ne laissez pas l'ennemi explorer impun\u00e9ment</li> </ol>"},{"location":"user/gameplay/gameplay/#utilisation-optimale-des-unites","title":"Utilisation optimale des unit\u00e9s","text":"<ul> <li>Scouts : Unit\u00e9s d'\u00e9lite pour l'exploration et les embuscades</li> <li>Maraudeurs : D\u00e9fenseurs mobiles pour prot\u00e9ger les flancs</li> <li>Leviathans : Puissance de feu pour s\u00e9curiser les positions</li> <li>Druids : Support pour maintenir la vision sur les points cl\u00e9s</li> <li>Architects : Construction de tours pour \u00e9tendre la vision passive</li> </ul>"},{"location":"user/gameplay/gameplay/#gestion-des-risques_1","title":"Gestion des risques","text":"<ul> <li>Toujours maintenir une \"r\u00e9serve visuelle\" d'unit\u00e9s</li> <li>\u00c9vitez de vous \u00e9tirer trop sur la carte</li> <li>Utilisez les capacit\u00e9s sp\u00e9ciales pour gagner des avantages temporaires</li> <li>Restez vigilant face aux mouvements invisibles de l'ennemi</li> </ul> <p>Note : Le syst\u00e8me de vision est en \u00e9volution constante. Vos retours sur la version b\u00eata sont pr\u00e9cieux pour affiner cette m\u00e9canique strat\u00e9gique !</p> <p>Ma\u00eetrisez ces m\u00e9caniques territoriales et vous deviendrez un strat\u00e8ge accompli dans les Galad Islands !</p> <p>Ma\u00eetrisez ces concepts et vous deviendrez un strat\u00e8ge redoutable dans les Galad Islands !</p>"},{"location":"user/help/credits/","title":"Cr\u00e9dits et remerciements","text":""},{"location":"user/help/credits/#equipe-de-developpement","title":"\ud83d\udc68\u200d\ud83d\udcbb \u00c9quipe de d\u00e9veloppement","text":"<ul> <li>Behani Julien - D\u00e9veloppeur - Chef de projet</li> <li>Fournier Enzo - D\u00e9veloppeur - Gestionnaire GitHub</li> <li>Alluin Edouard - D\u00e9veloppeur - Directeur communication</li> <li>Cailliau Ethann - D\u00e9veloppeur - Monteur multim\u00e9dia - G\u00e9rant Trello (organisation)</li> <li>Damman Alexandre - D\u00e9veloppeur</li> <li>Lambert Romain - D\u00e9veloppeur</li> </ul>"},{"location":"user/help/credits/#ressources-artistiques","title":"\ud83c\udfa8 Ressources artistiques","text":""},{"location":"user/help/credits/#graphismes-et-sprites","title":"Graphismes et sprites","text":"<p>Sprites d'unit\u00e9s</p> <ul> <li>Scout, Mauradeur, L\u00e9viathan : Cr\u00e9ation originale</li> <li>Druid, Architect : Design personnalis\u00e9</li> <li>Animations de mouvement et combat</li> </ul> <p>\u00c9l\u00e9ments d'interface</p> <ul> <li>Ic\u00f4nes de l'interface utilisateur</li> <li>Boutons et \u00e9l\u00e9ments interactifs</li> <li>Barres de progression et indicateurs</li> </ul> <p>Environnement</p> <ul> <li>Textures d'\u00eeles et terrain</li> <li>Backgrounds et d\u00e9cors</li> <li>Effets visuels et particules</li> </ul>"},{"location":"user/help/credits/#assets-externes-utilises","title":"Assets externes utilis\u00e9s","text":"<p>\u00c9mojis et ic\u00f4nes</p> <ul> <li>FluentEmoji : Microsoft (licence MIT)</li> <li>Twemoji : Twitter (licence CC-BY 4.0)</li> <li>Streamline Icons : Iconsets partiels</li> </ul> <p>Sources graphiques</p> <ul> <li>Certains \u00e9l\u00e9ments de base sous licence Creative Commons</li> <li>Modifications et adaptations pour le jeu</li> <li>Respect des licences d'attribution</li> </ul>"},{"location":"user/help/credits/#audio-et-musique","title":"\ud83c\udfb5 Audio et musique","text":""},{"location":"user/help/credits/#musiques-originales","title":"Musiques originales","text":"<p>xDeviruchi - Compositeur</p> <ul> <li>\"And The Journey Begins\" : Th\u00e8me d'exploration</li> <li>\"Title Theme\" : Musique du menu principal</li> <li>Style : Orchestral/Epic fantasy</li> <li>Licence : Libre d'utilisation avec attribution</li> </ul> <p>Cr\u00e9dits complets :</p> <pre><code>Music by xDeviruchi\nAvailable on: https://xdeviruchi.itch.io/\nUsed under Creative Commons license\n</code></pre>"},{"location":"user/help/credits/#effets-sonores","title":"Effets sonores","text":"<p>Sons d'interface</p> <ul> <li><code>select_sound.mp3</code> : Clic et s\u00e9lection</li> <li><code>select_sound_2.mp3</code> : Confirmation d'action</li> <li>Cr\u00e9ation : Synth\u00e8se audio personnalis\u00e9e</li> </ul> <p>Ambiances de jeu</p> <ul> <li>Sons de combat et d\u00e9placements</li> <li>Feedbacks audio des actions</li> <li>Int\u00e9gration harmonieuse avec la musique</li> </ul>"},{"location":"user/help/credits/#technologies-et-outils","title":"\ud83d\udee0\ufe0f Technologies et outils","text":""},{"location":"user/help/credits/#langages-et-frameworks","title":"Langages et frameworks","text":"<p>Python 3.13</p> <ul> <li>Langage principal du projet</li> <li>Biblioth\u00e8ques standard utilis\u00e9es</li> <li>Performance et compatibilit\u00e9 optimis\u00e9es</li> </ul> <p>Pygame 2.6.1</p> <ul> <li>Moteur graphique et audio</li> <li>Gestion des \u00e9v\u00e9nements</li> <li>Rendu 2D et gestion des sprites</li> </ul>"},{"location":"user/help/credits/#outils-de-developpement","title":"Outils de d\u00e9veloppement","text":"<p>Environnement de d\u00e9veloppement</p> <ul> <li>VS Code : \u00c9diteur principal</li> <li>Git : Gestion de versions</li> <li>GitHub : H\u00e9bergement du code source</li> </ul> <p>Outils graphiques</p> <ul> <li>Manipulation d'images et sprites</li> <li>Optimisation des ressources</li> <li>Cr\u00e9ation des assets personnalis\u00e9s</li> </ul> <p>Debugging et testing</p> <ul> <li>Outils de profilage Python</li> <li>Tests d'int\u00e9gration et performance</li> <li>Validation cross-platform</li> </ul>"},{"location":"user/help/credits/#contributions-communautaires","title":"\ud83c\udf1f Contributions communautaires","text":""},{"location":"user/help/credits/#traductions-et-localisation","title":"Traductions et localisation","text":"<p>Langues support\u00e9es</p> <ul> <li>Fran\u00e7ais : Langue principale, traduction compl\u00e8te</li> <li>Anglais : Traduction partielle en cours</li> <li>Interface et documentation bilingues</li> </ul> <p>Contributeurs linguistiques</p> <ul> <li>Traduction fait par Copilot</li> <li>Relecture des textes anglais par l'\u00e9quipe</li> </ul>"},{"location":"user/help/credits/#documentation","title":"\ud83d\udcda Documentation","text":""},{"location":"user/help/credits/#redaction-technique","title":"R\u00e9daction technique","text":"<p>Documentation utilisateur</p> <ul> <li>Guide d'installation et configuration</li> <li>Manuel de gameplay complet</li> <li>FAQ et r\u00e9solution de probl\u00e8mes</li> </ul> <p>Documentation d\u00e9veloppeur</p> <ul> <li>Architecture du code</li> <li>API interne et modules</li> <li>Guides de contribution</li> </ul>"},{"location":"user/help/credits/#outils-de-documentation","title":"Outils de documentation","text":"<p>MkDocs + Material Theme</p> <ul> <li>G\u00e9n\u00e9ration de documentation statique</li> <li>Navigation intuitive et responsive</li> <li>Recherche int\u00e9gr\u00e9e et indexation</li> </ul>"},{"location":"user/help/credits/#remerciements-speciaux","title":"\ud83d\ude4f Remerciements sp\u00e9ciaux","text":""},{"location":"user/help/credits/#communaute-open-source","title":"Communaut\u00e9 open source","text":"<p>Pygame Community</p> <ul> <li>Ressources d'apprentissage</li> <li>Exemples de code et tutoriels</li> <li>Support technique et forums</li> </ul> <p>Python Software Foundation</p> <ul> <li>Langage Python et \u00e9cosyst\u00e8me</li> <li>Documentation de r\u00e9f\u00e9rence</li> <li>Outils de d\u00e9veloppement</li> </ul>"},{"location":"user/help/credits/#licences-et-droits","title":"\ud83d\udcc4 Licences et droits","text":""},{"location":"user/help/credits/#code-source","title":"Code source","text":"<p>Licence du projet</p> <ul> <li>Code disponible sous licence MIT</li> <li>Libre utilisation, modification, distribution</li> <li>Attribution requise lors de redistribution</li> </ul>"},{"location":"user/help/credits/#assets-et-contenus","title":"Assets et contenus","text":"<p>Ressources graphiques</p> <ul> <li>Cr\u00e9ations originales : Tous droits r\u00e9serv\u00e9s</li> <li>Assets externes : Respect des licences d'origine</li> <li>Attribution compl\u00e8te dans les fichiers sources</li> </ul> <p>Contenu musical</p> <ul> <li>Musiques xDeviruchi : Creative Commons</li> <li>Effets sonores : Cr\u00e9ation originale</li> <li>Usage libre avec attribution appropri\u00e9e</li> </ul>"},{"location":"user/help/credits/#contact-et-support","title":"\ud83d\udcde Contact et support","text":"<p>Communication</p> <ul> <li>GitHub Issues : Rapports de bugs et suggestions</li> <li>Discussions communautaires</li> <li>Contributions et pull requests bienvenus</li> </ul>"},{"location":"user/help/credits/#communaute","title":"Communaut\u00e9","text":"<p>Canaux officiels</p> <ul> <li>Repository GitHub : Code source et releases</li> <li>Documentation en ligne : Guides et tutoriels</li> <li>Wiki communautaire : Strat\u00e9gies et astuces</li> </ul>"},{"location":"user/help/credits/#contributions-futures","title":"Contributions futures","text":"<p>Comment contribuer</p> <ol> <li>Fork du repository GitHub</li> <li>Cr\u00e9ation d'une branche pour vos modifications</li> <li>Tests et validation des changements</li> <li>Pull request avec description d\u00e9taill\u00e9e</li> </ol> <p>Types de contributions recherch\u00e9es</p> <ul> <li>Corrections de bugs et optimisations</li> <li>Nouvelles fonctionnalit\u00e9s de jeu</li> <li>Am\u00e9liorations d'interface</li> <li>Traductions et documentation</li> <li>Tests et feedback de qualit\u00e9</li> </ul> <p>Plus d'information ici.</p> <p>Version de la documentation : 1.0 | Derni\u00e8re mise \u00e0 jour : octobre 2025</p>"},{"location":"user/help/faq/","title":"Questions fr\u00e9quentes","text":""},{"location":"user/help/faq/#installation-et-premiers-pas","title":"\ud83d\ude80 Installation et premiers pas","text":""},{"location":"user/help/faq/#q-le-jeu-ne-se-lance-pas-que-faire","title":"Q: Le jeu ne se lance pas, que faire ?","text":"<p>Solutions courantes :</p> <ol> <li>Mettre \u00e0 jour le jeu : T\u00e9l\u00e9charger la derni\u00e8re version depuis la [page des releases]</li> <li>V\u00e9rifier la structure des fichiers : Le dossier <code>assets/</code> doit \u00eatre au m\u00eame niveau que l'ex\u00e9cutable <code>galad-islands</code>.</li> <li>Ret\u00e9l\u00e9charger le jeu : Le fichier peut \u00eatre corrompu.</li> <li>Lancer le jeu via terminal/console pour savoir plus sur l'erreur :</li> <li>Windows : Ouvrir <code>cmd</code>, naviguer vers le dossier du jeu et ex\u00e9cuter <code>galad-islands.exe</code></li> <li>macOS/Linux : Ouvrir un terminal, naviguer vers le dossier du jeu et ex\u00e9cuter <code>./galad-islands</code></li> <li>Cr\u00e9er une issue sur la page GitHub du projet avec les messages d'erreur affich\u00e9s.</li> </ol>"},{"location":"user/help/faq/#q-lecran-reste-noir-au-lancement","title":"Q: L'\u00e9cran reste noir au lancement","text":"<p>Causes possibles :</p> <ul> <li>Probl\u00e8me graphique : Pilotes obsol\u00e8tes</li> <li>R\u00e9solution incompatible : \u00c9cran trop petit ou trop grand</li> <li>Jeu corrompu : Fichiers manquants ou endommag\u00e9s</li> </ul> <p>Solutions :</p> <ol> <li>Mise \u00e0 jour des pilotes graphiques</li> <li>Essayer en mode fen\u00eatr\u00e9</li> <li>Red\u00e9marrer l'ordinateur</li> <li>Ret\u00e9l\u00e9charger le jeu</li> </ol>"},{"location":"user/help/faq/#q-comment-changer-la-resolution","title":"Q: Comment changer la r\u00e9solution ?","text":"<p>M\u00e9thode 1 : Options en jeu</p> <ol> <li>Menu principal \u2192 R\u00e9glages</li> <li>Section \"Affichage\"</li> <li>R\u00e9solution personnalis\u00e9e ou pr\u00e9d\u00e9finie</li> <li>Appliquer les changements</li> </ol> <p>M\u00e9thode 2 : Galad Config Tool</p> <ol> <li>Ouvrir <code>galad-config-tool</code> (inclus dans les releases)</li> <li>Onglet \"Affichage\"</li> <li>Choisir la r\u00e9solution</li> <li>Cliquer \"Appliquer\" puis lancer le jeu</li> </ol>"},{"location":"user/help/faq/#construction-et-batiments","title":"\ud83c\udfd7\ufe0f Construction et b\u00e2timents","text":""},{"location":"user/help/faq/#q-pourquoi-je-ne-peux-pas-construire","title":"Q: Pourquoi je ne peux pas construire ?","text":"<p>V\u00e9rifications essentielles :</p> <ol> <li>Architect pr\u00e9sent : Au moins 1 dans l'arm\u00e9e</li> <li>Sur une \u00eele : L'Architect doit \u00eatre positionn\u00e9 pr\u00e8s d'une \u00eele d'au moins 4 cases</li> <li>\u00cele libre : Pas de b\u00e2timent existant</li> <li>Or suffisant : Co\u00fbt affich\u00e9 dans la boutique</li> </ol>"},{"location":"user/help/faq/#q-comment-optimiser-mes-defenses","title":"Q: Comment optimiser mes d\u00e9fenses ?","text":"<p>Placement strat\u00e9gique :</p> <ol> <li>Tours de d\u00e9fense : Aux passages oblig\u00e9s</li> <li>Tours de soin : Prot\u00e9g\u00e9es derri\u00e8re les combattants</li> <li>Redondance : Plusieurs lignes de d\u00e9fense</li> </ol> <p>Formations d\u00e9fensives :</p> <pre><code>  Tour D\u00e9fense    Tour D\u00e9fense\n      \\              /\n       \\            /\n        Tour de Soin\n</code></pre>"},{"location":"user/help/faq/#q-mes-batiments-sont-detruits-trop-facilement","title":"Q: Mes b\u00e2timents sont d\u00e9truits trop facilement","text":"<p>Renforcement d\u00e9fensif :</p> <ol> <li>Escorte militaire : Unit\u00e9s pr\u00e8s des b\u00e2timents</li> <li>D\u00e9fenses actives : Tours de protection</li> <li>R\u00e9parations : Druid peut soigner les b\u00e2timents</li> <li>Positionnement : \u00c9viter les zones expos\u00e9es</li> </ol> <p>Tactiques de protection :</p> <ul> <li>Jamais de b\u00e2timent isol\u00e9</li> <li>Toujours pr\u00e9voir une d\u00e9fense</li> <li>Anticiper les attaques ennemies</li> <li>Diversifier les positions</li> </ul>"},{"location":"user/help/faq/#combat-et-strategie","title":"\u2694\ufe0f Combat et strat\u00e9gie","text":""},{"location":"user/help/faq/#q-comment-battre-un-joueur-plus-fort","title":"Q: Comment battre un joueur plus fort ?","text":"<p>Strat\u00e9gies de retournement :</p> <ol> <li>\u00c9viter les combats frontaux</li> <li>D\u00e9fendre jusqu'\u00e0 \u00e9galisation des forces</li> <li>Exploiter ses erreurs tactiques</li> </ol> <p>Techniques sp\u00e9cifiques :</p> <ul> <li>Hit-and-run avec Scout</li> <li>Focus fire sur ses unit\u00e9s ch\u00e8res</li> <li>Contr\u00f4le territorial sur ses mines</li> <li>Patience et opportunisme</li> </ul>"},{"location":"user/help/faq/#q-mes-scouts-meurent-trop-vite","title":"Q: Mes Scouts meurent trop vite","text":"<p>Micro-management des Scouts :</p> <ol> <li>Kiting : Attaquer puis reculer</li> <li>Groupe : Jamais seuls, toujours en meute</li> <li>Support : Druid \u00e0 proximit\u00e9 pour les soins</li> <li>Terrain : Utiliser les obstacles naturels</li> </ol> <p>Erreurs \u00e0 \u00e9viter :</p> <ul> <li>Foncer t\u00eate baiss\u00e9e</li> <li>Isoler les unit\u00e9s</li> <li>N\u00e9gliger les soins</li> <li>Sous-estimer la port\u00e9e ennemie</li> </ul>"},{"location":"user/help/faq/#parametres-et-performance","title":"\ud83d\udd27 Param\u00e8tres et performance","text":""},{"location":"user/help/faq/#q-le-jeu-rame-comment-loptimiser","title":"Q: Le jeu rame, comment l'optimiser ?","text":"<p>Optimisations graphiques :</p> <ol> <li>R\u00e9solution : R\u00e9duire si n\u00e9cessaire</li> <li>Plein \u00e9cran : Souvent plus fluide</li> </ol> <p>Optimisations syst\u00e8me :</p> <ul> <li>Fermer les applications inutiles</li> <li>Lib\u00e9rer de la RAM</li> <li>Mettre \u00e0 jour le jeu</li> <li>Red\u00e9marrer r\u00e9guli\u00e8rement</li> </ul>"},{"location":"user/help/faq/#resolution-de-problemes","title":"\ud83d\udc1b R\u00e9solution de probl\u00e8mes","text":""},{"location":"user/help/faq/#q-jai-trouve-un-bug-comment-le-signaler","title":"Q: J'ai trouv\u00e9 un bug, comment le signaler ?","text":"<p>Informations \u00e0 fournir :</p> <ol> <li>Version : Num\u00e9ro du jeu</li> <li>Syst\u00e8me : OS + configuration</li> <li>Reproduction : \u00c9tapes pour reproduire</li> <li>Logs : Messages d'erreur dans la console</li> </ol> <p>Canaux de signalement :</p> <ul> <li>GitHub Issues (recommand\u00e9)</li> <li>Email d\u00e9veloppeur</li> </ul>"},{"location":"user/help/faq/#q-le-son-ne-fonctionne-pas","title":"Q: Le son ne fonctionne pas","text":"<p>Diagnostic audio :</p> <ol> <li>Volume du jeu : V\u00e9rifier dans les options</li> <li>Volume syst\u00e8me : V\u00e9rifier les r\u00e9glages OS</li> <li>Codecs audio : Installer les codecs manquants</li> <li>Fichiers audio : V\u00e9rifier pr\u00e9sence dans <code>/assets/sounds/</code></li> </ol>"},{"location":"user/help/faq/#q-crash-au-lancement-avec-erreur-python","title":"Q: Crash au lancement avec erreur Python","text":"<p>Permission denied</p> <ul> <li>Droits d'administrateur</li> <li>Antivirus qui bloque</li> </ul> <p>D'autres questions ? Consultez les cr\u00e9dits et contacts pour obtenir de l'aide !</p>"},{"location":"user/tools/galad-config-tool/","title":"Galad Config Tool - Guide utilisateur","text":""},{"location":"user/tools/galad-config-tool/#vue-densemble","title":"\ud83d\udccb Vue d'ensemble","text":"<p>Galad Config Tool est un outil de configuration autonome pour le jeu Galad Islands. Il permet de modifier les param\u00e8tres du jeu via une interface graphique moderne, sans avoir besoin de lancer le jeu principal.</p>"},{"location":"user/tools/galad-config-tool/#fonctionnalites","title":"\ud83d\ude80 Fonctionnalit\u00e9s","text":""},{"location":"user/tools/galad-config-tool/#onglet-affichage-display","title":"\ud83d\udda5\ufe0f Onglet Affichage (Display)","text":"<ul> <li>Mode fen\u00eatre : Basculer entre mode fen\u00eatr\u00e9 et plein \u00e9cran</li> <li>R\u00e9solutions : </li> <li>S\u00e9lection parmi les r\u00e9solutions pr\u00e9d\u00e9finies</li> <li>Ajout de r\u00e9solutions personnalis\u00e9es (largeur x hauteur)</li> <li>Suppression des r\u00e9solutions personnalis\u00e9es</li> <li>Marquage visuel des r\u00e9solutions personnalis\u00e9es</li> <li>Sensibilit\u00e9 cam\u00e9ra : R\u00e9glage de la vitesse de d\u00e9placement de la cam\u00e9ra (0.2x \u00e0 3.0x)</li> <li>Langue : Changement de langue (Fran\u00e7ais/English) avec mise \u00e0 jour imm\u00e9diate de l'interface</li> </ul>"},{"location":"user/tools/galad-config-tool/#onglet-audio","title":"\ud83d\udd0a Onglet Audio","text":"<ul> <li>Volume musique : R\u00e9glage avec slider et affichage du pourcentage en temps r\u00e9el</li> </ul>"},{"location":"user/tools/galad-config-tool/#onglet-controles-controls","title":"\ud83c\udfae Onglet Contr\u00f4les (Controls)","text":"<ul> <li>Interface scrollable : Navigation fluide dans tous les groupes de contr\u00f4les</li> <li>Groupes disponibles :</li> <li>Commandes d'unit\u00e9 (avancer, reculer, tourner, etc.)</li> <li>Contr\u00f4les cam\u00e9ra (d\u00e9placement, vitesse)</li> <li>S\u00e9lection (cibler unit\u00e9s, changer de faction)</li> <li>Syst\u00e8me (pause, aide, debug, boutique)</li> </ul>"},{"location":"user/tools/galad-config-tool/#onglet-configuration","title":"\u2699\ufe0f Onglet Configuration","text":"<ul> <li>S\u00e9lection des fichiers :</li> <li>Fichier de configuration principal (<code>galad_config.json</code>)</li> <li>Fichier des r\u00e9solutions personnalis\u00e9es (<code>galad_resolutions.json</code>)</li> <li>Navigation par fichiers : Dialogue de s\u00e9lection pour changer l'emplacement des fichiers</li> <li>Messages informatifs : Avertissements si les fichiers sont manquants ou cr\u00e9\u00e9s automatiquement</li> </ul>"},{"location":"user/tools/galad-config-tool/#utilisation","title":"\ud83c\udfaf Utilisation","text":""},{"location":"user/tools/galad-config-tool/#lancement","title":"Lancement","text":"<p>Double-clic sur <code>galad-config-tool</code> (inclus dans les releases)</p>"},{"location":"user/tools/galad-config-tool/#workflow-typique","title":"Workflow typique","text":"<ol> <li>Ouvrir l'outil \u2192 V\u00e9rification automatique des fichiers de configuration</li> <li>Modifier les param\u00e8tres dans les diff\u00e9rents onglets selon vos besoins</li> <li>Cliquer sur \"Appliquer\" \u2192 Sauvegarde automatique de tous les changements</li> <li>Fermer l'outil \u2192 Les param\u00e8tres sont pr\u00eats pour le jeu</li> </ol>"},{"location":"user/tools/galad-config-tool/#resolutions-personnalisees","title":"R\u00e9solutions personnalis\u00e9es","text":"<ol> <li>Ajouter manuellement : Saisir largeur \u00d7 hauteur + cliquer \"Add\"</li> <li>Ajouter r\u00e9solution actuelle : Cliquer \"Add current\" pour ajouter la r\u00e9solution en cours</li> <li>Supprimer : S\u00e9lectionner dans la liste + cliquer \"Remove\" (uniquement les r\u00e9solutions personnalis\u00e9es)</li> </ol>"},{"location":"user/tools/galad-config-tool/#changement-de-langue","title":"Changement de langue","text":"<ul> <li>Menu d\u00e9roulant : S\u00e9lectionner la langue dans la liste d\u00e9roulante</li> <li>Changement imm\u00e9diat : Tous les textes se mettent \u00e0 jour instantan\u00e9ment</li> <li>Persistance : Cliquer \"Appliquer\" pour sauvegarder d\u00e9finitivement</li> <li>Extensibilit\u00e9 : Le menu s'adapte automatiquement aux nouvelles langues ajout\u00e9es au jeu</li> </ul>"},{"location":"user/tools/galad-config-tool/#messages-dinformation","title":"\u26a0\ufe0f Messages d'information","text":"<p>L'outil affiche des popups informatifs dans les cas suivants :</p> <ul> <li>Fichier de configuration manquant : Sera cr\u00e9\u00e9 automatiquement avec les valeurs par d\u00e9faut</li> <li>Fichier de r\u00e9solutions manquant : Sera cr\u00e9\u00e9 lors du premier ajout d'une r\u00e9solution</li> <li>Tentative de suppression d'une r\u00e9solution pr\u00e9d\u00e9finie : Message d'erreur avec explication</li> <li>Chemins de fichiers invalides : Avertissement dans l'onglet Configuration</li> </ul>"},{"location":"user/tools/galad-config-tool/#fichiers-de-configuration","title":"\ud83d\udcc1 Fichiers de configuration","text":""},{"location":"user/tools/galad-config-tool/#galad_configjson","title":"<code>galad_config.json</code>","text":"<p>Fichier principal contenant tous les param\u00e8tres du jeu :</p> <ul> <li>R\u00e9solution et mode d'affichage</li> <li>Volume audio</li> <li>Sensibilit\u00e9 cam\u00e9ra</li> <li>Langue</li> <li>Raccourcis clavier</li> </ul>"},{"location":"user/tools/galad-config-tool/#galad_resolutionsjson","title":"<code>galad_resolutions.json</code>","text":"<p>Fichier contenant uniquement vos r\u00e9solutions personnalis\u00e9es ajout\u00e9es via l'outil.</p>"},{"location":"user/tools/galad-config-tool/#configuration-avancee","title":"\ud83d\udd27 Configuration avanc\u00e9e","text":""},{"location":"user/tools/galad-config-tool/#onglet-configuration_1","title":"Onglet Configuration","text":"<ul> <li>Changer l'emplacement des fichiers : Utiliser les boutons \"Parcourir...\" </li> <li>Chemins par d\u00e9faut : R\u00e9pertoire du jeu (\u00e0 c\u00f4t\u00e9 de <code>main.py</code>)</li> <li>Validation : V\u00e9rification automatique de l'accessibilit\u00e9 des dossiers</li> </ul>"},{"location":"user/tools/galad-config-tool/#touches-disponibles-pour-les-controles","title":"Touches disponibles pour les contr\u00f4les","text":"<pre><code>z, s, q, d, a, e, tab, space, enter, escape,\nleft, right, up, down, 1, 2, 3, 4, 5, ctrl, shift, alt\n</code></pre>"},{"location":"user/tools/galad-config-tool/#conseils-dutilisation","title":"\ud83d\udca1 Conseils d'utilisation","text":"<ul> <li>Testez vos r\u00e9solutions : Ajoutez une r\u00e9solution personnalis\u00e9e uniquement si elle est support\u00e9e par votre \u00e9cran</li> <li>Sauvegardez r\u00e9guli\u00e8rement : Cliquez \"Appliquer\" apr\u00e8s chaque s\u00e9rie de modifications</li> <li>R\u00e9solutions multiples : Vous pouvez ajouter plusieurs r\u00e9solutions personnalis\u00e9es pour diff\u00e9rents contextes</li> <li>Contr\u00f4les par groupes : Utilisez la barre de d\u00e9filement pour naviguer dans tous les raccourcis disponibles</li> </ul>"},{"location":"user/tools/galad-config-tool/#depannage","title":"\ud83c\udd98 D\u00e9pannage","text":"<ul> <li>L'outil ne se lance pas : V\u00e9rifiez que les dossiers <code>assets/</code> et <code>src/</code> sont pr\u00e9sents</li> <li>Configuration non sauv\u00e9e : V\u00e9rifiez les permissions d'\u00e9criture dans le dossier du jeu</li> <li>Interface en mauvaise langue : Changez la langue dans l'onglet Display puis cliquez \"Appliquer\"</li> <li>R\u00e9solution invalide : Seules les r\u00e9solutions au format largeur\u00d7hauteur sont accept\u00e9es</li> </ul>"},{"location":"user/units/units/","title":"\ud83c\udfa8 Description des Unit\u00e9s et Strat\u00e9gies","text":""},{"location":"user/units/units/#vue-densemble-des-unites","title":"Vue d'ensemble des unit\u00e9s","text":"<p>Les unit\u00e9s alli\u00e9es et ennemies dans Galad Islands partagent les m\u00eames r\u00f4les et capacit\u00e9s, mais se distinguent par leurs apparences et leurs affiliations. Voici un guide complet des unit\u00e9s disponibles dans le jeu, leurs caract\u00e9ristiques, capacit\u00e9s sp\u00e9ciales et conseils tactiques.</p> Classe Type R\u00f4le Co\u00fbt Vie Attaque Sp\u00e9cialit\u00e9 Scout \u00c9claireur Reconnaissance 10 or 60 10-15 Vision \u00e9tendue Maraudeur Guerrier Combat moyen 20 or 130 20-30 Charge puissante L\u00e9viathan L\u00e9viathan Unit\u00e9 lourde 40 or 300 40-60 Bombardement de zone Druid Soigneur Support m\u00e9dical 30 or 100 0 Soin de groupe Architect Constructeur D\u00e9fense 30 or 100 30 Construction rapide"},{"location":"user/units/units/#details-des-unites","title":"D\u00e9tails des unit\u00e9s","text":""},{"location":"user/units/units/#scout-eclaireur-agile","title":"\u26a1 Scout \u2014 \u00c9claireur agile","text":"<ul> <li>Type : Unit\u00e9 de reconnaissance</li> <li>Vitesse : \u2b50\u2b50\u2b50\u2b50\u2b50 (Tr\u00e8s rapide)</li> <li>R\u00e9sistance : \u2b50\u2b50 (Fragile)</li> <li>Attaque : \u2b50\u2b50 (L\u00e9g\u00e8re)</li> <li>Capacit\u00e9 sp\u00e9ciale : Invincibilit\u00e9 temporaire</li> <li>Utilisation tactique :</li> <li>Exploration rapide</li> <li>Harc\u00e8lement des unit\u00e9s lentes</li> <li>Diversion et esquive</li> </ul>"},{"location":"user/units/units/#maraudeur-guerrier-robuste","title":"\ud83d\udee1\ufe0f Maraudeur \u2014 Guerrier robuste","text":"<ul> <li>Type : Unit\u00e9 de combat polyvalente</li> <li>Vitesse : \u2b50\u2b50\u2b50 (Normale)</li> <li>R\u00e9sistance : \u2b50\u2b50\u2b50\u2b50 (Robuste)</li> <li>Attaque : \u2b50\u2b50\u2b50 (\u00c9quilibr\u00e9e)</li> <li>Capacit\u00e9 sp\u00e9ciale : Bouclier am\u00e9lior\u00e9</li> <li>Utilisation tactique :</li> <li>D\u00e9fense de positions strat\u00e9giques</li> <li>Protection des unit\u00e9s fragiles</li> <li>Attaques coordonn\u00e9es</li> </ul>"},{"location":"user/units/units/#leviathan-leviathan-destructeur","title":"\ud83d\udc09 L\u00e9viathan \u2014 L\u00e9viathan destructeur","text":"<ul> <li>Type : Unit\u00e9 de destruction massive</li> <li>Vitesse : \u2b50 (Tr\u00e8s lent)</li> <li>R\u00e9sistance : \u2b50\u2b50\u2b50\u2b50\u2b50 (Blind\u00e9)</li> <li>Attaque : \u2b50\u2b50\u2b50\u2b50\u2b50 (D\u00e9vastatrice)</li> <li>Capacit\u00e9 sp\u00e9ciale : Salve tir\u00e9e de chaque c\u00f4t\u00e9s</li> <li>Utilisation tactique :</li> <li>Contr\u00f4le des points strat\u00e9giques</li> <li>\u00c9limination des groupes d'unit\u00e9s</li> <li>Assauts finaux</li> </ul>"},{"location":"user/units/units/#druid-soigneur-essentiel","title":"\ud83c\udf3f Druid \u2014 Soigneur essentiel","text":"<ul> <li>Type : Unit\u00e9 de support m\u00e9dical</li> <li>Vitesse : \u2b50\u2b50 (Lent)</li> <li>R\u00e9sistance : \u2b50\u2b50\u2b50 (Moyenne)</li> <li>Attaque : \u2b50 (Aucune attaque directe)</li> <li>Capacit\u00e9 sp\u00e9ciale : Lance du lierre qui bloque une unit\u00e9 ennemie</li> <li>Utilisation tactique :</li> <li>Maintien des unit\u00e9s en vie</li> <li>Soutien dans les combats prolong\u00e9s</li> <li>Protection essentielle</li> </ul>"},{"location":"user/units/units/#architect-constructeur-strategique","title":"\ud83c\udfd7\ufe0f Architect \u2014 Constructeur strat\u00e9gique","text":"<ul> <li>Type : Unit\u00e9 de construction</li> <li>Vitesse : \u2b50\u2b50 (Lent)</li> <li>R\u00e9sistance : \u2b50\u2b50\u2b50 (Moyenne)</li> <li>Attaque : \u2b50\u2b50 (Faible)</li> <li>Capacit\u00e9 sp\u00e9ciale : Vitesse de rechargement des unit\u00e9s accrue</li> <li>Utilisation tactique :</li> <li>Cr\u00e9ation de points de d\u00e9fense</li> <li>Contr\u00f4le des passages \u00e9troits</li> <li>Soutien des si\u00e8ges prolong\u00e9s</li> </ul> <p>Ce guide vous permettra de ma\u00eetriser toutes les unit\u00e9s et de dominer les champs de bataille dans Galad Islands !</p>"},{"location":"en/","title":"Galad Islands - Documentation","text":"<p>Welcome to the complete Galad Islands documentation! \ud83c\udfdd\ufe0f</p>"},{"location":"en/#what-is-galad-islands","title":"\ud83c\udfae What is Galad Islands?","text":"<p>Galad Islands is a real-time strategy game that immerses you in a war between two factions in a floating archipelago. Manage your resources, build diverse units, and lead your armies to victory in epic aerial battles!</p>"},{"location":"en/#documentation-navigation","title":"\ud83d\udcda Documentation Navigation","text":"<p>This documentation is organized into two main sections:</p>"},{"location":"en/#user-documentation","title":"\ud83d\udcd6 User Documentation","text":"<p>For players who want to master the game</p>"},{"location":"en/#basics","title":"\ud83c\udfc1 Basics","text":"<ul> <li>Introduction - Game presentation</li> <li>Getting Started Guide - Installation and first steps</li> <li>Installation - Detailed installation guide</li> </ul>"},{"location":"en/#gameplay","title":"\ud83c\udfae Gameplay","text":"<ul> <li>Controls - Game mechanics and controls</li> <li>Gameplay - General game principles</li> <li>Action Bar - Interface and shortcuts</li> </ul>"},{"location":"en/#units","title":"\u2694\ufe0f Units","text":"<ul> <li>Units - Guide to units and their abilities</li> </ul>"},{"location":"en/#economy","title":"\ud83c\udfd7\ufe0f Economy","text":"<ul> <li>Buildings - Constructions and defenses</li> <li>Shop - Purchase and economy system</li> </ul>"},{"location":"en/#tools","title":"\ud83d\udee0\ufe0f Tools","text":"<ul> <li>Galad Configuration Tool - Game configuration</li> </ul>"},{"location":"en/#help","title":"\u2753 Help","text":"<ul> <li>FAQ - Frequently asked questions and troubleshooting</li> <li>Credits - Team and acknowledgments</li> </ul>"},{"location":"en/#technical-documentation","title":"\ud83d\udee0\ufe0f Technical Documentation","text":""},{"location":"en/#for-developers-and-contributors","title":"For developers and contributors","text":""},{"location":"en/#development","title":"Development","text":"<ul> <li>Overview - General project architecture</li> <li>API - Programming interface documentation</li> <li>Modules - Internal code structure</li> <li>Contribution - Guide for contributing to the project</li> </ul>"},{"location":"en/#system-and-deployment","title":"System and deployment","text":"<ul> <li>Critical system parameters - Configuration and performance optimization</li> <li>Hardware requirements - Required hardware/software and dependencies</li> <li>System operations - Monitoring, backup, security and maintenance</li> </ul>"},{"location":"en/#main-features","title":"\u2728 Main Features","text":""},{"location":"en/#diverse-units","title":"\ud83d\ude81 Diverse Units","text":"<p>Allies:</p> <ul> <li>Zasper: Light and fast scout</li> <li>Barhamus: Medium robust marauder</li> <li>Draupnir: Heavy destructive leviathan</li> <li>Druid: Healer and magical support</li> <li>Architect: Defense builder</li> </ul> <p>Enemies:</p> <ul> <li>Valkar: Fast and aggressive interceptor</li> <li>Goliath: Heavily armored with high firepower</li> <li>Spectre: Stealth unit specialized in sabotage</li> <li>Necropr\u00eatre: Support that weakens your troops</li> <li>Bastion: Mobile defensive platform</li> </ul>"},{"location":"en/#construction-and-defense","title":"\ud83c\udff0 Construction and Defense","text":"<ul> <li>Automatic defense towers</li> <li>Healing towers for your allies</li> <li>Strategic construction system</li> </ul>"},{"location":"en/#economic-system","title":"\ud83d\udcb0 Economic System","text":"<ul> <li>Collect gold naturally or from chests on the map</li> <li>Buy units in the shop</li> <li>Upgrade your abilities</li> </ul>"},{"location":"en/#tactical-gameplay","title":"\ud83c\udfaf Tactical Gameplay","text":"<ul> <li>Intuitive keyboard controls</li> <li>Free camera with zoom</li> <li>Clear and ergonomic interface</li> </ul>"},{"location":"en/#quick-start","title":"\ud83d\ude80 Quick Start","text":"<ol> <li>Launch the game by running <code>galad-islands.exe</code> or <code>galad-islands</code></li> <li>Learn the controls with the arrow keys</li> <li>Select your units with the number keys</li> <li>Explore the map and collect gold</li> <li>Buy new units with the <code>B</code> key</li> <li>Dominate the archipelago!</li> </ol> <p>Starting tip</p> <p>Start by exploring the map to find chests and map out areas before engaging in combat!</p>"},{"location":"en/#navigation-in-this-guide","title":"\ud83d\udcda Navigation in this guide","text":"<ul> <li>Getting Started Guide: First steps</li> <li>Installation and Configuration: How to install and configure the game</li> <li>Controls: All game commands</li> <li>Units: Detailed guide for each unit type</li> </ul>"},{"location":"en/#atmosphere","title":"\ud83c\udfb5 Atmosphere","text":"<p>Galad Islands immerses you in a fantastic universe with:</p> <ul> <li>Epic and immersive music</li> <li>Detailed pixel art graphics</li> <li>Authentic sound effects</li> <li>Unique aerial adventure atmosphere</li> </ul> <p>Ready to conquer the skies of Galad Islands? Good luck, commander! \u2693\ufe0f\u2708\ufe0f</p>"},{"location":"en/support/","title":"Support &amp; Contact","text":"<p>Need help with Galad Islands? Here's where to find assistance and contact the team.</p>"},{"location":"en/support/#documentation","title":"\ud83d\udcd6 Documentation","text":"<ul> <li>Getting Started Guide - First steps in the game</li> <li>FAQ - Frequently Asked Questions</li> </ul>"},{"location":"en/support/#technical-issues","title":"\ud83d\udc1b Technical Issues","text":""},{"location":"en/support/#before-reporting-an-issue","title":"Before reporting an issue","text":"<ol> <li>Check the FAQ - solutions to common problems are there</li> <li>Make sure you're using the latest version of the game</li> <li>Search in existing issues</li> </ol>"},{"location":"en/support/#report-a-bug","title":"Report a bug","text":"<p>If your problem isn't resolved:</p> <p>\ud83d\udd17 Create an issue on GitHub</p> <p>Please include:</p> <ul> <li>Your operating system (Windows, Linux, macOS)</li> <li>Game version</li> <li>Detailed description of the problem</li> <li>Steps to reproduce the bug</li> <li>Screenshots if relevant</li> </ul>"},{"location":"en/support/#suggestions-requests","title":"\ud83d\udca1 Suggestions &amp; Requests","text":"<p>To propose new features or improvements:</p> <p>\ud83d\udd17 GitHub Discussions</p>"},{"location":"en/support/#community-contribution","title":"\ud83e\udd1d Community &amp; Contribution","text":""},{"location":"en/support/#contribute-to-development","title":"Contribute to development","text":"<p>Want to contribute to Galad Islands? Check our contribution guide.</p> <p>Types of contributions needed:</p> <ul> <li>\ud83d\udc1b Bug fixes</li> <li>\u2728 New features</li> <li>\ud83d\udcdd Documentation improvements</li> <li>\ud83c\udfa8 Assets and graphics</li> <li>\ud83c\udf0d Translations</li> </ul>"},{"location":"en/support/#general-questions","title":"General questions","text":"<p>For any questions about the project:</p> <ul> <li>GitHub Discussions - Community forum</li> <li>GitHub Issues - Bugs and feature requests</li> </ul>"},{"location":"en/support/#share-the-project","title":"Share the project","text":"<ul> <li>\u2b50 Star the project on GitHub if you like it</li> <li>\ud83d\udd17 Share Galad Islands with your friends</li> <li>\ud83d\udcdd Write about your gaming experience</li> </ul>"},{"location":"en/support/#for-developers","title":"\ud83d\udee0\ufe0f For Developers","text":"<ul> <li>Technical Documentation - Project architecture</li> <li>Developer Issues - Good first contributions</li> </ul>"},{"location":"en/support/#useful-information","title":"\ud83d\udccb Useful Information","text":""},{"location":"en/support/#before-contacting-us","title":"Before contacting us","text":"<ol> <li>Check the FAQ</li> <li>Search in existing discussions</li> <li>Check open issues</li> </ol>"},{"location":"en/support/#for-effective-contact","title":"For effective contact","text":"<p>Please include:</p> <ul> <li>Game version you're using</li> <li>Operating system</li> <li>Clear description of your question/problem</li> <li>Relevant context</li> </ul> <p>We strive to answer all questions as quickly as possible.</p>"},{"location":"en/dev/01-introduction/overview/","title":"\ud83d\udcda Galad Islands \u2014 Technical Introduction","text":"<p>This document is the technical introduction and overview for the Galad Islands project. It is intended for developers, contributors and maintainers who need a concise, practical view of the codebase, architecture and how to get started.</p>"},{"location":"en/dev/01-introduction/overview/#purpose","title":"Purpose","text":"<ul> <li>Explain the project goals and high-level architecture</li> <li>Provide a quick-start to run and develop the game locally</li> <li>Point to detailed API and system documentation</li> </ul>"},{"location":"en/dev/01-introduction/overview/#high-level-overview","title":"High-level overview","text":"<p>Galad Islands is a small real-time strategy / tactics game implemented in Python. The codebase follows an Entity-Component-System (ECS) design (using the <code>esper</code> library) to keep game data and logic modular and testable. Rendering and input are handled with <code>pygame</code>.</p> <p>Key subsystems</p> <ul> <li>Game engine: main loop, orchestration and lifecycle</li> <li>ECS components &amp; systems: data-only components, processors that execute game logic</li> <li>UI subsystem: Action bar, shop and debug UI</li> <li>Managers: audio, sprite management, events, configuration</li> <li>Tools: small utilities and a config editor (<code>tools/galad_config.py</code>)</li> </ul>"},{"location":"en/dev/01-introduction/overview/#quick-start-developer","title":"Quick start (developer)","text":"<ol> <li>Clone the repository:</li> </ol> <pre><code>git clone https://github.com/Fydyr/Galad-Islands.git\ncd Galad-Islands\n</code></pre> <ol> <li>Create and activate a virtual environment (Linux/macOS):</li> </ol> <pre><code>python3 -m venv venv\nsource venv/bin/activate\n</code></pre> <ol> <li>Install dependencies:</li> </ol> <pre><code>pip install -r requirements.txt\npip install -r requirements-dev.txt\n</code></pre> <ol> <li>Run the game:</li> </ol> <pre><code>python main.py\n</code></pre>"},{"location":"en/dev/01-introduction/overview/#project-layout-important-folders","title":"Project layout (important folders)","text":"<pre><code>src/                  # Game source code\n  components/         # ECS components\n  systems/            # New-style systems\n  Processors/         # Legacy processors (esper)\n  ui/                 # UI widgets and screens\n  managers/           # High-level managers (audio, events...)\nassets/               # Images, sounds and locale files\ndocs/                 # Project documentation (mkdocs)\ntools/                # Utilities and config editors\n</code></pre>"},{"location":"en/dev/01-introduction/overview/#where-to-read-next","title":"Where to read next","text":"<ul> <li>API and system internals: <code>docs/en/dev/02-systeme/</code></li> <li>Configuration &amp; localization: <code>docs/en/dev/04-Configuration/</code></li> <li>Maintenance &amp; deployment: <code>docs/en/dev/05-exploitation/</code></li> </ul>"},{"location":"en/dev/01-introduction/overview/#contributing-support","title":"Contributing &amp; support","text":"<ul> <li>Use the <code>unstable</code> branch for in-progress work and open PRs against <code>main</code> when ready.</li> <li>Follow the Conventional Commits rules documented in <code>docs/en/dev/07-annexes/contributing.md</code>.</li> <li>For quick help, open an issue or a discussion on GitHub.</li> </ul> <p>\ud83d\udca1 Want a shorter landing page or a \u00abdeveloper checklist\u00bb instead? Tell me which sections to keep and I\u2019ll trim it down.</p>"},{"location":"en/dev/02-systeme/architecture/","title":"Code Architecture","text":""},{"location":"en/dev/02-systeme/architecture/#ecs-architecture-overview","title":"ECS Architecture Overview","text":"<p>Galad Islands uses an ECS (Entity-Component-System) architecture with the <code>esper</code> library to organize the code in a modular and efficient way.</p>"},{"location":"en/dev/02-systeme/architecture/#ecs-principle","title":"ECS Principle","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   ENTITIES  \u2502    \u2502 COMPONENTS  \u2502    \u2502   SYSTEMS   \u2502\n\u2502             \u2502    \u2502             \u2502    \u2502             \u2502\n\u2502 Simple IDs  \u2502\u25c4\u2500\u2500\u25ba\u2502    Data     \u2502\u25c4\u2500\u2500\u25ba\u2502    Logic    \u2502\n\u2502   (int)     \u2502    \u2502 (Properties)\u2502    \u2502 (Behavior)  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <ul> <li>Entities: Simple numerical identifiers (int)</li> <li>Components: Pure data structures (dataclasses)</li> <li>Systems/Processors: Logic that acts on entities having certain components</li> </ul>"},{"location":"en/dev/02-systeme/architecture/#code-organization","title":"Code Organization","text":"<pre><code>src/\n\u251c\u2500\u2500 components/          # All ECS components\n\u2502   \u251c\u2500\u2500 core/           # Base components\n\u2502   \u251c\u2500\u2500 special/        # Special unit abilities\n\u2502   \u251c\u2500\u2500 events/         # Event components\n\u2502   \u2514\u2500\u2500 globals/        # Global components (camera, map)\n\u251c\u2500\u2500 processors/         # ECS processors (logic) - Note: \"processeurs\" is French\n\u251c\u2500\u2500 systems/            # New modular ECS systems\n\u251c\u2500\u2500 managers/           # High-level managers\n\u251c\u2500\u2500 factory/            # Entity creation\n\u2514\u2500\u2500 game.py             # Main engine\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#components","title":"Components","text":"<p>Components only store data, not logic.</p>"},{"location":"en/dev/02-systeme/architecture/#base-components-core","title":"Base Components (core/)","text":""},{"location":"en/dev/02-systeme/architecture/#special-components-special","title":"Special Components (special/)","text":"<p>Units with abilities have dedicated components:</p>"},{"location":"en/dev/02-systeme/architecture/#event-components-events","title":"Event Components (events/)","text":""},{"location":"en/dev/02-systeme/architecture/#building-components-buildings","title":"Building Components (buildings/)","text":"<p>Buildings (defensive towers, structures) use dedicated components.</p> <p>\ud83d\udcd6 Full documentation: See Tower System for the detailed implementation.</p>"},{"location":"en/dev/02-systeme/architecture/#towercomponent","title":"TowerComponent","text":"<p>Base component for all towers: <pre><code>@dataclass\nclass TowerComponent:\n    tower_type: str              # \"defense\" or \"heal\"\n    range: float                 # Action range in pixels\n    cooldown: float              # Time between two actions (seconds)\n    current_cooldown: float = 0.0\n    target_entity: Optional[int] = None\n</code></pre></p> <p>File: <code>src/components/core/towerComponent.py</code></p>"},{"location":"en/dev/02-systeme/architecture/#defensetowercomponent","title":"DefenseTowerComponent","text":"<p>Component for towers that attack: <pre><code>@dataclass\nclass DefenseTowerComponent:\n    damage: float        # Damage inflicted per attack\n    attack_speed: float  # Attack speed multiplier\n</code></pre></p>"},{"location":"en/dev/02-systeme/architecture/#healtowercomponent","title":"HealTowerComponent","text":"<p>Component for towers that heal: <pre><code>@dataclass\nclass HealTowerComponent:\n    heal_amount: float   # Health points restored\n    heal_speed: float    # Healing speed multiplier\n</code></pre></p> <p>Usage: - Towers are created via <code>buildingFactory.create_defense_tower()</code> or <code>create_heal_tower()</code> - The <code>TowerProcessor</code> handles target detection and automatic actions - Towers require an Architect to be built</p>"},{"location":"en/dev/02-systeme/architecture/#processors","title":"Processors","text":"<p>Processors contain the business logic and act on entities.</p>"},{"location":"en/dev/02-systeme/architecture/#renderprocessor","title":"RenderProcessor","text":"<pre><code>class RenderProcessor(esper.Processor):\n    def __init__(self, screen, camera=None):\n        super().__init__()\n        self.screen = screen\n        self.camera = camera\n\n    def process(self):\n        # Renders all entities with Position + Sprite\n        for ent, (pos, sprite) in esper.get_components(PositionComponent, SpriteComponent):\n            # Rendering logic...\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#movementprocessor","title":"MovementProcessor","text":"<pre><code>class MovementProcessor(esper.Processor):\n    def process(self, dt=0.016):\n        # Moves all entities with Position + Velocity\n        for ent, (pos, vel) in esper.get_components(PositionComponent, VelocityComponent):\n            pos.x += vel.currentSpeed * dt\n            pos.y += vel.currentSpeed * dt\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#collisionprocessor","title":"CollisionProcessor","text":"<pre><code>class CollisionProcessor(esper.Processor):\n    def process(self):\n        # Detects collisions between entities\n        for ent1, (pos1, collision1) in esper.get_components(PositionComponent, CanCollideComponent):\n            for ent2, (pos2, collision2) in esper.get_components(PositionComponent, CanCollideComponent):\n                if self._check_collision(pos1, pos2):\n                    self._handle_collision(ent1, ent2)\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#playercontrolprocessor","title":"PlayerControlProcessor","text":"<pre><code>class PlayerControlProcessor(esper.-Processor):\n    def process(self):\n        # Handles player controls and special abilities\n        if pygame.key.get_pressed()[pygame.K_SPACE]:\n            # Activate selected unit's ability...\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#systems","title":"Systems","text":"<p>New modular systems to separate logic:</p>"},{"location":"en/dev/02-systeme/architecture/#spritesystem","title":"SpriteSystem","text":"<pre><code>class SpriteSystem:\n\"\"\"Manages sprites with a cache to optimize performance.\"\"\"\n\n    def __init__(self):\n        self._sprite_cache = {}\n\n    def get_sprite(self, sprite_id: SpriteID) -&gt; pygame.Surface:\n        # Caches sprites to avoid reloading\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#combatsystem","title":"CombatSystem","text":"<pre><code>class CombatSystem:\n\"\"\"Combat system separated from processors.\"\"\"\n\n    def deal_damage(self, attacker: int, target: int, damage: int) -&gt; bool:\n        # Pure damage logic\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#managers","title":"Managers","text":"<p>Managers orchestrate high-level systems:</p>"},{"location":"en/dev/02-systeme/architecture/#basecomponent-integrated-manager","title":"BaseComponent (Integrated Manager)","text":"<pre><code>@component\nclass BaseComponent:\n\"\"\"Base component with an integrated manager for HQs.\"\"\"\n\n    @classmethod\n    def get_ally_base(cls):\n\"\"\"Returns the ally base entity.\"\"\"\n        return cls._ally_base_entity\n\n    @classmethod\n    def get_enemy_base(cls):\n\"\"\"Returns the enemy base entity.\"\"\" \n        return cls._enemy_base_entity\n\n    @classmethod\n    def initialize_bases(cls):\n\"\"\"Initializes the ally and enemy base entities.\"\"\"\n        # Initialization logic...\n</code></pre> <p>To learn more, see the detailed documentation. BaseComponent</p>"},{"location":"en/dev/02-systeme/architecture/#flyingchestmanager","title":"FlyingChestManager","text":"<pre><code>class FlyingChestManager:\n\"\"\"Manages the spawning of flying chests.\"\"\"\n\n    def update(self, dt: float):\n        # Chest spawning logic\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#factory-entity-creation","title":"Factory (Entity Creation)","text":""},{"location":"en/dev/02-systeme/architecture/#unitfactory","title":"UnitFactory","text":"<pre><code>def UnitFactory(unit: UnitKey, enemy: bool, pos: PositionComponent):\n\"\"\"Creates a complete entity with all its components.\"\"\"\n    entity = esper.create_entity()\n\n    # Base components\n    esper.add_component(entity, pos)\n    esper.add_component(entity, TeamComponent(Team.ENEMY if enemy else Team.ALLY))\n\n    # Specific components based on unit type\n    if unit == UnitKey.ARCHITECT:\n        esper.add_component(entity, SpeArchitect(radius=ARCHITECT_RADIUS))\n        esper.add_component(entity, HealthComponent(100, 100))\n        esper.add_component(entity, AttackComponent(25))\n\n    return entity\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#gameengine-main-engine","title":"GameEngine (Main Engine)","text":"<pre><code>class GameEngine:\n\"\"\"Main engine that orchestrates all systems.\"\"\"\n\n    def _initialize_ecs(self):\n\"\"\"Initializes all ECS processors.\"\"\"\n        self.movement_processor = MovementProcessor()\n        self.collision_processor = CollisionProcessor(graph=self.grid)\n        self.player_controls = PlayerControlProcessor()\n\n        # Add processors with priorities\n        es.add_processor(self.collision_processor, priority=2)\n        es.add_processor(self.movement_processor, priority=3)\n        es.add_processor(self.player_controls, priority=4)\n\n    def run(self):\n\"\"\"Main game loop.\"\"\"\n        while self.running:\n            dt = self.clock.tick(60) / 1000.0\n\n            # Process all ECS processors\n            es.process(dt)\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#data-flow","title":"Data Flow","text":"<pre><code>1. Input (keyboard/mouse) \u2192 PlayerControlProcessor\n2. PlayerControlProcessor \u2192 Modifies components\n3. MovementProcessor \u2192 Updates positions\n4. CollisionProcessor \u2192 Detects and handles collisions\n5. RenderProcessor \u2192 Displays on screen\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#best-practices","title":"Best Practices","text":""},{"location":"en/dev/02-systeme/architecture/#do","title":"\u2705 Do","text":"<ul> <li>Components: Only data, no logic</li> <li>Processors: A clear responsibility per processor</li> <li>Type hints: Always type component properties</li> <li>Enums: Use <code>Team</code> and <code>UnitClass</code> instead of integers</li> <li>Checks: Always use <code>esper.has_component()</code> before <code>esper.component_for_entity()</code></li> </ul>"},{"location":"en/dev/02-systeme/architecture/#dont","title":"\u274c Don't","text":"<ul> <li>Business logic in components</li> <li>Direct references between entities</li> <li>Concurrent modifications of the same entity</li> <li>Processors that depend on execution order</li> </ul>"},{"location":"en/dev/02-systeme/architecture/#usage-examples","title":"Usage Examples","text":""},{"location":"en/dev/02-systeme/architecture/#create-a-unit","title":"Create a unit","text":"<pre><code># Create the entity\nentity = esper.create_entity()\n\n# Add components\nesper.add_component(entity, PositionComponent(100, 200))\nesper.add_component(entity, TeamComponent(Team.ALLY))\nesper.add_component(entity, HealthComponent(100, 100))\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#find-entities","title":"Find entities","text":"<pre><code># All entities with position and health\nfor ent, (pos, health) in esper.get_components(PositionComponent, HealthComponent):\n    print(f\"Entity {ent} at ({pos.x}, {pos.y}) with {health.currentHealth} HP\")\n</code></pre>"},{"location":"en/dev/02-systeme/architecture/#modify-a-component","title":"Modify a component","text":"<pre><code>if esper.has_component(entity, HealthComponent):\n    health = esper.component_for_entity(entity, HealthComponent)\n    health.currentHealth -= 10\n</code></pre> <p>This ECS architecture allows for great flexibility and optimal performance to manage hundreds of entities simultaneously in the game.</p>"},{"location":"en/dev/02-systeme/tower-system-implementation/","title":"Tower System Implementation","text":""},{"location":"en/dev/02-systeme/tower-system-implementation/#overview","title":"Overview","text":"<p>This document describes the complete implementation of the defense and healing tower system in Galad Islands. The system allows the Architect unit to build defensive towers that automatically attack enemies or heal allies.</p> <p>Implementation Date: October 2025 Version: 1.0.0 Architecture: ECS (Entity Component System) with esper</p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#table-of-contents","title":"Table of Contents","text":"<ol> <li>System Architecture</li> <li>Components</li> <li>Systems (Processors)</li> <li>Factory</li> <li>User Interface</li> <li>Sprites and Assets</li> <li>Configuration</li> <li>Fixes Made</li> </ol>"},{"location":"en/dev/02-systeme/tower-system-implementation/#system-architecture","title":"System Architecture","text":"<p>The tower system follows the project's ECS architecture:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502              User Interface             \u2502\n\u2502  (ActionBar - Construction Buttons)     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                 \u2502\n                 \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502            Factory Pattern              \u2502\n\u2502  (buildingFactory - Entity Creation)    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                 \u2502\n                 \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         Components (Components)         \u2502\n\u2502  - TowerComponent (base)                \u2502\n\u2502  - DefenseTowerComponent                \u2502\n\u2502  - HealTowerComponent                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                 \u2502\n                 \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        Processor (Processor)            \u2502\n\u2502  - TowerProcessor (action logic)        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#components","title":"Components","text":""},{"location":"en/dev/02-systeme/tower-system-implementation/#1-towercomponent-base","title":"1. TowerComponent (Base)","text":"<p>File: <code>src/components/core/towerComponent.py</code></p> <p>Base component for all towers.</p> <pre><code>@dataclass\nclass TowerComponent:\n\"\"\"Base component for towers.\"\"\"\n    tower_type: str  # \"defense\" or \"heal\"\n    range: float     # Action range\n    cooldown: float  # Time between two actions\n    current_cooldown: float = 0.0  # Cooldown counter\n    target_entity: Optional[int] = None  # Currently targeted entity\n</code></pre> <p>Properties: - <code>tower_type</code>: Type of tower (\"defense\" or \"heal\") - <code>range</code>: Detection range (in pixels) - <code>cooldown</code>: Delay between two actions (in seconds) - <code>current_cooldown</code>: Time remaining before the next action - <code>target_entity</code>: ID of the currently targeted entity</p> <p>Usage: Added to each tower entity to manage common behavior.</p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#2-defensetowercomponent","title":"2. DefenseTowerComponent","text":"<p>File: <code>src/components/core/defenseTowerComponent.py</code></p> <p>Specific component for attack towers.</p> <pre><code>@dataclass\nclass DefenseTowerComponent:\n\"\"\"Component for defense towers (attack).\"\"\"\n    damage: float  # Damage inflicted per attack\n    attack_speed: float  # Attack speed\n</code></pre> <p>Properties: - <code>damage</code>: Damage inflicted per projectile (default: 15.0) - <code>attack_speed</code>: Attack speed multiplier (default: 1.0)</p> <p>Usage: Added to defense towers in addition to <code>TowerComponent</code>.</p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#3-healtowercomponent","title":"3. HealTowerComponent","text":"<p>File: <code>src/components/core/healTowerComponent.py</code></p> <p>Specific component for healing towers.</p> <pre><code>@dataclass\nclass HealTowerComponent:\n\"\"\"Component for healing towers.\"\"\"\n    heal_amount: float  # Health points restored per heal\n    heal_speed: float   # Healing speed\n</code></pre> <p>Properties: - <code>heal_amount</code>: Health points restored (default: 10.0) - <code>heal_speed</code>: Healing speed multiplier (default: 1.0)</p> <p>Usage: Added to healing towers in addition to <code>TowerComponent</code>.</p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#systems-processors","title":"Systems (Processors)","text":""},{"location":"en/dev/02-systeme/tower-system-implementation/#towerprocessor","title":"TowerProcessor","text":"<p>File: <code>src/processors/towerProcessor.py</code></p> <p>Main processor managing tower logic.</p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#features","title":"Features","text":"<ol> <li>Cooldown Management:</li> <li>Decrements the cooldown of each tower</li> <li> <p>Allows action when the cooldown reaches 0</p> </li> <li> <p>Target Detection:</p> </li> <li>Searches for enemies within range (defense towers)</li> <li>Searches for wounded allies within range (healing towers)</li> <li> <p>Uses <code>TeamComponent</code> to identify allies/enemies</p> </li> <li> <p>Actions:</p> </li> <li>Defense Towers: Creates projectiles via <code>ProjectileFactory</code></li> <li>Healing Towers: Applies healing directly to <code>HealthComponent</code></li> </ol>"},{"location":"en/dev/02-systeme/tower-system-implementation/#main-method","title":"Main Method","text":"<pre><code>def process(self, dt: float):\n\"\"\"Processes tower logic each frame.\"\"\"\n    for entity, (tower, pos, team) in esper.get_components(\n        TowerComponent, PositionComponent, TeamComponent\n    ):\n        # 1. Update cooldown\n        if tower.current_cooldown &gt; 0:\n            tower.current_cooldown -= dt\n            continue\n\n        # 2. Search for target\n        target = self._find_target(entity, tower, pos, team)\n\n        # 3. Action according to type\n        if target:\n            if tower.tower_type == \"defense\":\n                self._attack_target(entity, target, pos)\n            elif tower.tower_type == \"heal\":\n                self._heal_target(entity, target)\n\n            # 4. Reset cooldown\n            tower.current_cooldown = tower.cooldown\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#integration-into-the-game-loop","title":"Integration into the Game Loop","text":"<p>File: <code>src/game.py</code></p> <pre><code>def _initialize_processors(self):\n\"\"\"Initializes the game's processors.\"\"\"\n    # ... other processors\n    self.tower_processor = TowerProcessor()\n    esper.add_processor(self.tower_processor, priority=15)\n</code></pre> <p>In the main loop:</p> <pre><code>def update(self, dt: float):\n\"\"\"Updates all game systems.\"\"\"\n    # ... other updates\n\n    # Tower processing\n    if self.tower_processor:\n        self.tower_processor.process(dt)\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#buildingfactory","title":"buildingFactory","text":"<p>File: <code>src/factory/buildingFactory.py</code></p> <p>Factory for creating tower entities.</p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#create_defense_tower","title":"create_defense_tower","text":"<pre><code>def create_defense_tower(world: esper.World, x: float, y: float, team_id: int = 1) -&gt; int:\n\"\"\"\n    Creates a defense tower.\n\n    Args:\n        world: esper World\n        x, y: Tower position\n        team_id: Team ID (1=ally, 2=enemy)\n\n    Returns:\n        ID of the created entity\n    \"\"\"\n    entity = world.create_entity()\n\n    # Base components\n    world.add_component(entity, PositionComponent(x, y))\n    world.add_component(entity, TeamComponent(team_id))\n\n    # Sprite\n    sprite = sprite_manager.create_sprite_component(\n        SpriteID.ALLY_DEFENCE_TOWER if team_id == 1 else SpriteID.ENEMY_DEFENCE_TOWER\n    )\n    world.add_component(entity, sprite)\n\n    # Tower-specific components\n    world.add_component(entity, TowerComponent(\n        tower_type=\"defense\",\n        range=200.0,\n        cooldown=2.0\n    ))\n    world.add_component(entity, DefenseTowerComponent(\n        damage=15.0,\n        attack_speed=1.0\n    ))\n\n    return entity\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#create_heal_tower","title":"create_heal_tower","text":"<pre><code>def create_heal_tower(world: esper.World, x: float, y: float, team_id: int = 1) -&gt; int:\n\"\"\"\n    Creates a healing tower.\n\n    Args:\n        world: esper World\n        x, y: Tower position\n        team_id: Team ID (1=ally, 2=enemy)\n\n    Returns:\n        ID of the created entity\n    \"\"\"\n    entity = world.create_entity()\n\n    # Base components\n    world.add_component(entity, PositionComponent(x, y))\n    world.add_component(entity, TeamComponent(team_id))\n\n    # Sprite\n    sprite = sprite_manager.create_sprite_component(\n        SpriteID.ALLY_HEAL_TOWER if team_id == 1 else SpriteID.ENEMY_HEAL_TOWER\n    )\n    world.add_component(entity, sprite)\n\n    # Tower-specific components\n    world.add_component(entity, TowerComponent(\n        tower_type=\"heal\",\n        range=150.0,\n        cooldown=3.0\n    ))\n    world.add_component(entity, HealTowerComponent(\n        heal_amount=10.0,\n        heal_speed=1.0\n    ))\n\n    return entity\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#user-interface","title":"User Interface","text":""},{"location":"en/dev/02-systeme/tower-system-implementation/#actionbar","title":"ActionBar","text":"<p>File: <code>src/ui/action_bar.py</code></p> <p>The ActionBar manages the tower construction buttons.</p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#construction-buttons","title":"Construction Buttons","text":"<pre><code>build_buttons = [\n    ActionButton(\n        action_type=ActionType.BUILD_DEFENSE_TOWER,\n        icon_path=\"assets/sprites/ui/build_defense.png\",\n        text=t(\"actionbar.build_defense\"),\n        cost=150,\n        hotkey=\"\",\n        visible=False,  # Visible only when Architect is selected\n        callback=self._build_defense_tower\n    ),\n    ActionButton(\n        action_type=ActionType.BUILD_HEAL_TOWER,\n        icon_path=\"assets/sprites/ui/build_heal.png\",\n        text=t(\"actionbar.build_heal\"),\n        cost=120,\n        hotkey=\"\",\n        visible=False,\n        callback=self._build_heal_tower\n    )\n]\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#construction-logic","title":"Construction Logic","text":"<pre><code>def _build_defense_tower(self):\n\"\"\"Builds a defense tower.\"\"\"\n    # Check if an Architect is selected\n    architects = list(esper.get_components(SpeArchitect, PositionComponent))\n    if not architects:\n        self.notification_system.add_notification(\n            t(\"notification.no_architect\"),\n            NotificationType.ERROR\n        )\n        return\n\n    # Get the Architect's position\n    _, (_, pos) = architects[0]\n\n    # Check if it's on an island\n    if not is_tile_island(self.game_engine.grid, pos.x, pos.y):\n        self.notification_system.add_notification(\n            t(\"notification.not_on_island\"),\n            NotificationType.ERROR\n        )\n        return\n\n    # Check if there is already a tower at this location\n    for entity, (tower_pos, _) in esper.get_components(PositionComponent, TowerComponent):\n        distance = math.sqrt((pos.x - tower_pos.x)**2 + (pos.y - tower_pos.y)**2)\n        if distance &lt; 40:  # Minimum radius between towers\n            self.notification_system.add_notification(\n                t(\"notification.tower_already_exists\"),\n                NotificationType.ERROR\n            )\n            return\n\n    # Check the cost\n    cost = 150\n    if self._get_player_gold_direct() &lt; cost:\n        self.notification_system.add_notification(\n            t(\"notification.not_enough_gold\"),\n            NotificationType.ERROR\n        )\n        return\n\n    # Create the tower\n    create_defense_tower(esper, pos.x, pos.y, team_id=1)\n\n    # Deduct the cost\n    self._set_player_gold_direct(self._get_player_gold_direct() - cost)\n\n    # Success notification\n    self.notification_system.add_notification(\n        t(\"notification.tower_built\"),\n        NotificationType.SUCCESS\n    )\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#button-activation","title":"Button Activation","text":"<p>The buttons are activated when the Architect is selected:</p> <pre><code>def update_for_unit(self, unit_info: Optional[UnitInfo]):\n\"\"\"Updates buttons based on the selected unit.\"\"\"\n    self.selected_unit = unit_info\n\n    # Show construction buttons if Architect is selected\n    for button in self.action_buttons:\n        if button.action_type in [ActionType.BUILD_DEFENSE_TOWER, ActionType.BUILD_HEAL_TOWER]:\n            button.visible = (unit_info and unit_info.unit_type == \"Architect\")\n\n    self._update_button_positions()\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#sprites-and-assets","title":"Sprites and Assets","text":""},{"location":"en/dev/02-systeme/tower-system-implementation/#file-structure","title":"File Structure","text":"<pre><code>assets/sprites/buildings/\n\u251c\u2500\u2500 ally/\n\u2502   \u251c\u2500\u2500 ally-defence-tower.png    # Ally defense tower (80x120)\n\u2502   \u2514\u2500\u2500 ally-heal-tower.png        # Ally healing tower (80x120)\n\u2514\u2500\u2500 enemy/\n    \u251c\u2500\u2500 enemy-defence-tower.png    # Enemy defense tower (80x120)\n    \u2514\u2500\u2500 enemy-heal-tower.png        # Enemy healing tower (80x120)\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#sprite-configuration","title":"Sprite Configuration","text":"<p>File: <code>src/managers/sprite_manager.py</code></p> <pre><code>class SpriteID(Enum):\n\"\"\"Sprite identifiers.\"\"\"\n    # ... other sprites\n    ALLY_DEFENCE_TOWER = \"ALLY_DEFENCE_TOWER\"\n    ALLY_HEAL_TOWER = \"ALLY_HEAL_TOWER\"\n    ENEMY_DEFENCE_TOWER = \"ENEMY_DEFENCE_TOWER\"\n    ENEMY_HEAL_TOWER = \"ENEMY_HEAL_TOWER\"\n\n# Sprite configurations\nSPRITE_CONFIGS = [\n    # Buildings\n    SpriteData(\n        SpriteID.ALLY_DEFENCE_TOWER,\n        \"assets/sprites/buildings/ally/ally-defence-tower.png\",\n        80, 120,\n        \"Defense Tower\"\n    ),\n    SpriteData(\n        SpriteID.ALLY_HEAL_TOWER,\n        \"assets/sprites/buildings/ally/ally-heal-tower.png\",\n        80, 120,\n        \"Healing Tower\"\n    ),\n    SpriteData(\n        SpriteID.ENEMY_DEFENCE_TOWER,\n        \"assets/sprites/buildings/enemy/enemy-defence-tower.png\",\n        80, 120,\n        \"Enemy Defense Tower\"\n    ),\n    SpriteData(\n        SpriteID.ENEMY_HEAL_TOWER,\n        \"assets/sprites/buildings/enemy/enemy-heal-tower.png\",\n        80, 120,\n        \"Enemy Healing Tower\"\n    ),\n]\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#developer-mode","title":"Developer Mode","text":"<p>File: <code>src/settings/settings.py</code></p> <pre><code>DEFAULT_CONFIG = {\n    \"language\": \"french\",\n    \"fullscreen\": False,\n    \"resolution\": [1280, 720],\n    \"volume\": 0.7,\n    \"dev_mode\": False,  # Activates development features\n    # ... other parameters\n}\n</code></pre> <p>The <code>dev_mode</code> controls the display of the debug button in the ActionBar:</p> <pre><code># In _initialize_buttons()\nif ConfigManager().get('dev_mode', False):\n    global_buttons.append(\n        ActionButton(\n            action_type=ActionType.DEV_GIVE_GOLD,\n            icon_path=\"assets/sprites/ui/dev_give_gold.png\",\n            text=t(\"actionbar.debug_menu\"),\n            cost=0,\n            hotkey=\"\",\n            tooltip=t(\"debug.modal.title\"),\n            is_global=True,\n            callback=self._toggle_debug_menu\n        )\n    )\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#translations","title":"Translations","text":"<p>Files: - <code>assets/locales/french.py</code> - <code>assets/locales/english.py</code></p> <pre><code># French\nTRANSLATIONS = {\n    \"shop.defense_tower\": \"Tour de D\u00e9fense\",\n    \"shop.defense_tower_desc\": \"Tour de d\u00e9fense automatique\",\n    \"shop.heal_tower\": \"Tour de Soin\",\n    \"shop.heal_tower_desc\": \"Tour de soin automatique\",\n    \"actionbar.build_defense\": \"Tour de D\u00e9fense\",\n    \"actionbar.build_heal\": \"Tour de Soin\",\n    \"notification.tower_built\": \"Tour construite avec succ\u00e8s\",\n    \"notification.tower_already_exists\": \"Une tour existe d\u00e9j\u00e0 ici\",\n    \"notification.no_architect\": \"Vous devez s\u00e9lectionner un Architecte\",\n    \"notification.not_on_island\": \"Vous devez construire sur une \u00eele\",\n}\n\n# English\nTRANSLATIONS = {\n    \"shop.defense_tower\": \"Defense Tower\",\n    \"shop.defense_tower_desc\": \"Automatic defense tower\",\n    \"shop.heal_tower\": \"Heal Tower\",\n    \"shop.heal_tower_desc\": \"Automatic healing tower\",\n    \"actionbar.build_defense\": \"Defense Tower\",\n    \"actionbar.build_heal\": \"Heal Tower\",\n    \"notification.tower_built\": \"Tower built successfully\",\n    \"notification.tower_already_exists\": \"A tower already exists here\",\n    \"notification.no_architect\": \"You must select an Architect\",\n    \"notification.not_on_island\": \"You must build on an island\",\n}\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#fixes-made","title":"Fixes Made","text":""},{"location":"en/dev/02-systeme/tower-system-implementation/#1-import-organization","title":"1. Import Organization","text":"<p>Problem: Imports scattered in the code, unnecessary try/except blocks</p> <p>Solution: All imports grouped at the top of the file</p> <pre><code># src/ui/action_bar.py - File header\nimport pygame\nimport esper\nfrom typing import List, Optional, Callable\nfrom dataclasses import dataclass\nfrom enum import Enum, auto\nimport math\n\nfrom src.components.core.positionComponent import PositionComponent\nfrom src.components.special.speArchitectComponent import SpeArchitect\nfrom src.components.core.towerComponent import TowerComponent\n# ... other imports\n</code></pre> <p>Files modified: - <code>src/ui/action_bar.py</code></p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#2-sprite-paths","title":"2. Sprite Paths","text":"<p>Problem: Incorrect path for <code>ALLY_DEFENCE_TOWER</code> (missing the <code>ally/</code> subfolder)</p> <p>Before: <pre><code>SpriteData(\n    SpriteID.ALLY_DEFENCE_TOWER,\n    \"assets/sprites/buildings/ally-defence-tower.png\",  # \u274c Incorrect\n    80, 120,\n    \"Defense Tower\"\n)\n</code></pre></p> <p>After: <pre><code>SpriteData(\n    SpriteID.ALLY_DEFENCE_TOWER,\n    \"assets/sprites/buildings/ally/ally-defence-tower.png\",  # \u2705 Correct\n    80, 120,\n    \"Defense Tower\"\n)\n</code></pre></p> <p>Files modified: - <code>src/managers/sprite_manager.py</code></p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#3-tower-names","title":"3. Tower Names","text":"<p>Problem: Towers named \"Attack Tower\" instead of \"Defense Tower\"</p> <p>Solution: Corrected translations</p> <p>Files modified: - <code>assets/locales/french.py</code> - <code>assets/locales/english.py</code></p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#4-debug-button-visibility","title":"4. Debug Button Visibility","text":"<p>Problem: Debug button always visible, even with <code>dev_mode: False</code></p> <p>Solution:  1. Added <code>dev_mode: False</code> to <code>DEFAULT_CONFIG</code> 2. Condition <code>if ConfigManager().get('dev_mode', False)</code> to create the button 3. Dynamic check in <code>_update_button_positions()</code></p> <p>Files modified: - <code>src/settings/settings.py</code> - <code>src/ui/action_bar.py</code></p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#5-towerprocessor-integration","title":"5. TowerProcessor Integration","text":"<p>Problem: <code>TowerProcessor</code> created but not called in the game loop</p> <p>Solution: Added the <code>process(dt)</code> call in <code>GameEngine.update()</code></p> <p>Before: <pre><code>def update(self, dt: float):\n    # tower_processor existed but was not called\n    esper.process()\n</code></pre></p> <p>After: <pre><code>def update(self, dt: float):\n    # ... other updates\n\n    # Tower processing\n    if self.tower_processor:\n        self.tower_processor.process(dt)\n\n    esper.process()\n</code></pre></p> <p>Files modified: - <code>src/game.py</code></p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#6-adding-towercomponent-to-towers","title":"6. Adding TowerComponent to Towers","text":"<p>Problem: Towers created without <code>TowerComponent</code>, so not detected by the processor</p> <p>Solution: Systematically added the component in the factories</p> <p>Files modified: - <code>src/factory/buildingFactory.py</code></p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#7-placement-checks","title":"7. Placement Checks","text":"<p>Problem: No checks before placing a tower</p> <p>Solution: Added 3 checks: 1. Architect selected 2. Position on an island 3. No existing tower nearby</p> <p>Files modified: - <code>src/ui/action_bar.py</code> (<code>_build_defense_tower()</code> and <code>_build_heal_tower()</code> methods)</p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#data-flow","title":"Data Flow","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    Player clicks                          \u2502\n\u2502              \"Build Defense Tower\"                        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                      \u2502\n                      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502              ActionBar._build_defense_tower()             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502\n\u2502  \u2502 1. Check for selected Architect                    \u2502  \u2502\n\u2502  \u2502 2. Check position on island                        \u2502  \u2502\n\u2502  \u2502 3. Check for no existing tower                     \u2502  \u2502\n\u2502  \u2502 4. Check cost (150 gold)                           \u2502  \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                      \u2502\n                      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        buildingFactory.create_defense_tower()             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502\n\u2502  \u2502 1. Create entity                                   \u2502  \u2502\n\u2502  \u2502 2. Add PositionComponent                         \u2502  \u2502\n\u2502  \u2502 3. Add TeamComponent                             \u2502  \u2502\n\u2502  \u2502 4. Add SpriteComponent                           \u2502  \u2502\n\u2502  \u2502 5. Add TowerComponent                            \u2502  \u2502\n\u2502  \u2502 6. Add DefenseTowerComponent                     \u2502  \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                      \u2502\n                      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502           Tower created in the world (esper)              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                      \u2502\n                      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         TowerProcessor.process(dt) - Each frame         \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502\n\u2502  \u2502 For each tower:                                    \u2502  \u2502\n\u2502  \u2502   1. Decrement cooldown                            \u2502  \u2502\n\u2502  \u2502   2. If cooldown = 0:                              \u2502  \u2502\n\u2502  \u2502      a. Search for target in range                 \u2502  \u2502\n\u2502  \u2502      b. If target found:                           \u2502  \u2502\n\u2502  \u2502         - Defense tower \u2192 Create projectile        \u2502  \u2502\n\u2502  \u2502         - Healing tower \u2192 Heal ally                \u2502  \u2502\n\u2502  \u2502      c. Reset cooldown                             \u2502  \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#tests-and-validation","title":"Tests and Validation","text":""},{"location":"en/dev/02-systeme/tower-system-implementation/#functionality-checklist","title":"Functionality Checklist","text":"<ul> <li>[x] Towers appear correctly on the screen</li> <li>[x] Sprites match the correct file</li> <li>[x/home/lieserl/Documents/GitHub/Galad-Islands/docs/en/dev/02-systeme/tower-system-implementation.md] Defense towers attack enemies within their range</li> <li>[x] Healing towers heal wounded allies</li> <li>[x] Cooldown works correctly</li> <li>[x] Buttons only display if Architect is selected</li> <li>[x] Debug button only displays if <code>dev_mode = True</code></li> <li>[x] Translations are correct (FR/EN)</li> <li>[x] Placement checks position (island only) -- [x] Placement checks for absence of existing tower</li> <li>[x] Gold cost is correctly deducted</li> </ul>"},{"location":"en/dev/02-systeme/tower-system-implementation/#test-commands","title":"Test Commands","text":"<pre><code># Test defense tower creation\n./venv/bin/python -c \"\nimport pygame\npygame.init()\nfrom src.factory.buildingFactory import create_defense_tower\nimport esper\n\nworld = esper.World()\ntower = create_defense_tower(world, 100, 100)\nprint(f'Tower created: {tower}')\npygame.quit()\n\"\n\n# Launch the game\n./venv/bin/python main.py\n</code></pre>"},{"location":"en/dev/02-systeme/tower-system-implementation/#possible-future-improvements","title":"Possible Future Improvements","text":""},{"location":"en/dev/02-systeme/tower-system-implementation/#short-term","title":"Short Term","text":"<ul> <li>[ ] Add visual effects during attack/healing</li> <li>[ ] Add sounds for shots/heals</li> <li>[ ] Progressive construction animation -- [ ] Visual range indicator during placement</li> </ul>"},{"location":"en/dev/02-systeme/tower-system-implementation/#medium-term","title":"Medium Term","text":"<ul> <li>[ ] Tower upgrade system (level, damage, range)</li> <li>[ ] Special towers (slow, area of effect, etc.)</li> <li>[ ] Tower maintenance cost</li> <li>[ ] Manual destruction of towers with partial refund</li> </ul>"},{"location":"en/dev/02-systeme/tower-system-implementation/#long-term","title":"Long Term","text":"<ul> <li>[ ] AI for optimal tower placement (enemy mode)</li> <li>[ ] Synergy between nearby towers</li> <li>[ ] Legendary towers with unique abilities</li> <li>[ ] Research system to unlock new towers</li> </ul>"},{"location":"en/dev/02-systeme/tower-system-implementation/#dependencies","title":"Dependencies","text":""},{"location":"en/dev/02-systeme/tower-system-implementation/#required-components","title":"Required Components","text":"<ul> <li><code>PositionComponent</code>: Position in the world</li> <li><code>TeamComponent</code>: Ally/enemy identification</li> <li><code>HealthComponent</code>: Health points (for targets)</li> <li><code>SpriteComponent</code>: Visual rendering</li> <li><code>SpeArchitect</code>: Ability to build</li> </ul>"},{"location":"en/dev/02-systeme/tower-system-implementation/#required-systems","title":"Required Systems","text":"<ul> <li><code>sprite_manager</code>: Sprite loading</li> <li><code>ProjectileFactory</code>: Projectile creation (defense towers)</li> <li><code>NotificationSystem</code>: User feedback</li> <li><code>ConfigManager</code>: Game configuration</li> </ul>"},{"location":"en/dev/02-systeme/tower-system-implementation/#modified-files","title":"Modified Files","text":"File Modifications <code>src/components/core/towerComponent.py</code> \u2728 Creation of the base component <code>src/components/core/defenseTowerComponent.py</code> \u2728 Creation of the defense component <code>src/components/core/healTowerComponent.py</code> \u2728 Creation of the healing component <code>src/processors/towerProcessor.py</code> \u2728 Creation of the processor <code>src/factory/buildingFactory.py</code> \u2728 Added factories + \ud83d\udd27 TowerComponent <code>src/managers/sprite_manager.py</code> \ud83d\udd27 Corrected sprite paths <code>src/ui/action_bar.py</code> \ud83d\udd27 Organized imports + construction buttons <code>src/settings/settings.py</code> \u2795 Added <code>dev_mode</code> <code>src/game.py</code> \ud83d\udd27 Integrated TowerProcessor <code>assets/locales/french.py</code> \ud83d\udd27 Corrected translations <code>assets/locales/english.py</code> \ud83d\udd27 Corrected translations <p>Legend: - \u2728 New file - \ud83d\udd27 Modification - \u2795 Feature addition</p>"},{"location":"en/dev/02-systeme/tower-system-implementation/#authors-and-contributions","title":"Authors and Contributions","text":"<ul> <li>Initial Implementation: Development Session October 2025</li> <li>ECS Architecture: Based on the existing project structure</li> <li>Tests and Fixes: Complete system validation</li> </ul>"},{"location":"en/dev/02-systeme/tower-system-implementation/#license","title":"License","text":"<p>This system is part of the Galad Islands project and is subject to the same license as the main project.</p>"},{"location":"en/dev/02-systeme/api/game-engine/","title":"API - Game Engine","text":"<p>The game engine is organized around the main <code>GameEngine</code> class and specialized helper classes.</p>"},{"location":"en/dev/02-systeme/api/game-engine/#main-classes","title":"Main Classes","text":""},{"location":"en/dev/02-systeme/api/game-engine/#gameengine","title":"GameEngine","text":"<p>File: <code>src/game.py</code></p> <p>Responsibility: Central class that orchestrates all game systems.</p> <pre><code>class GameEngine:\n\"\"\"Main class managing all game logic.\"\"\"\n\n    def __init__(self, window=None, bg_original=None, select_sound=None):\n\"\"\"Initializes the game engine.\"\"\"\n\n    def initialize(self):\n\"\"\"Initializes all game components.\"\"\"\n\n    def run(self):\n\"\"\"Starts the main game loop.\"\"\"\n\n    def _quit_game(self):\n\"\"\"Stops the game cleanly.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/game-engine/#main-properties","title":"Main Properties","text":"Property Type Description <code>window</code> <code>pygame.Surface</code> Main display surface <code>running</code> <code>bool</code> Game execution state <code>clock</code> <code>pygame.time.Clock</code> Framerate control <code>camera</code> <code>Camera</code> View and zoom management <code>action_bar</code> <code>ActionBar</code> Main user interface <code>grid</code> <code>List[List[int]]</code> Game map grid <code>selected_unit_id</code> <code>int</code> ID of the currently selected unit <code>camera_follow_enabled</code> <code>bool</code> Automatic camera following <code>control_groups</code> <code>dict</code> Control groups (1-9) <code>selection_team_filter</code> <code>Team</code> Team filter for selection <code>flying_chest_manager</code> <code>FlyingChestManager</code> Flying chests manager <code>island_resource_manager</code> <code>IslandResourceManager</code> Island resources manager <code>stormManager</code> <code>StormManager</code> Storms manager <code>notification_system</code> <code>NotificationSystem</code> Notification system <code>exit_modal</code> <code>InGameMenuModal</code> In-game menu modal <code>game_over</code> <code>bool</code> Game over state <code>winning_team</code> <code>Team</code> Winning team <code>chest_spawn_timer</code> <code>float</code> Timer for chest spawning"},{"location":"en/dev/02-systeme/api/game-engine/#public-methods","title":"Public Methods","text":""},{"location":"en/dev/02-systeme/api/game-engine/#unit-management","title":"Unit Management","text":"<pre><code>def select_unit(self, entity_id: int) -&gt; None:\n\"\"\"Selects a unit.\"\"\"\n\ndef select_next_unit(self) -&gt; None:\n\"\"\"Selects the next unit.\"\"\"\n\ndef select_previous_unit(self) -&gt; None:\n\"\"\"Selects the previous unit.\"\"\"\n\ndef select_all_allied_units(self) -&gt; None:\n\"\"\"Selects all allied units.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/game-engine/#control-group-management","title":"Control Group Management","text":"<pre><code>def assign_control_group(self, slot: int) -&gt; None:\n\"\"\"Assigns the selection to the control group.\"\"\"\n\ndef select_control_group(self, slot: int) -&gt; None:\n\"\"\"Selects a control group.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/game-engine/#camera-management","title":"Camera Management","text":"<pre><code>def toggle_camera_follow_mode(self) -&gt; None:\n\"\"\"Toggles between free camera and unit following.\"\"\"\n\ndef _setup_camera(self) -&gt; None:\n\"\"\"Configures the initial camera position.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/game-engine/#events-and-interactions","title":"Events and Interactions","text":"<pre><code>def handle_mouse_selection(self, mouse_pos: Tuple[int, int]) -&gt; None:\n\"\"\"Handles unit selection by mouse click.\"\"\"\n\ndef trigger_selected_attack(self) -&gt; None:\n\"\"\"Triggers the selected unit's attack.\"\"\"\n\ndef open_exit_modal(self) -&gt; None:\n\"\"\"Opens the exit confirmation modal.\"\"\"\n\ndef open_shop(self) -&gt; None:\n\"\"\"Opens the shop via the ActionBar.\"\"\"\n\ndef cycle_selection_team(self) -&gt; None:\n\"\"\"Changes the filtered team for selection (Ally/Enemy/All).\"\"\"\n\ndef _give_dev_gold(self, amount: int) -&gt; None:\n\"\"\"Gives gold to the player (development function).\"\"\"\n\ndef _handle_game_over(self, winning_team: int) -&gt; None:\n\"\"\"Handles the end of the game.\"\"\"\n\ndef _handle_action_bar_camp_change(self, team: int) -&gt; None:\n\"\"\"Callback for team change via ActionBar.\"\"\"\n\ndef _handle_action_bar_shop_purchase(self, unit_type: str, cost: int) -&gt; bool:\n\"\"\"Callback for unit purchase via the shop.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/game-engine/#eventhandler","title":"EventHandler","text":"<p>Responsibility: Centralized management of all pygame events.</p> <pre><code>class EventHandler:\n\"\"\"Class responsible for managing all game events.\"\"\"\n\n    def __init__(self, game_engine: GameEngine):\n\"\"\"Initializes with a reference to the engine.\"\"\"\n\n    def handle_events(self) -&gt; None:\n\"\"\"Processes all events from the pygame queue.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/game-engine/#event-handling-methods","title":"Event Handling Methods","text":"Method Event Description <code>_handle_quit()</code> <code>QUIT</code> Window closing <code>_handle_keydown(event)</code> <code>KEYDOWN</code> Keyboard keys pressed <code>_handle_mousedown(event)</code> <code>MOUSEBUTTONDOWN</code> Mouse clicks <code>_handle_mousemotion(event)</code> <code>MOUSEMOTION</code> Mouse movement <code>_handle_resize(event)</code> <code>VIDEORESIZE</code> Window resizing"},{"location":"en/dev/02-systeme/api/game-engine/#gamerenderer","title":"GameRenderer","text":"<p>Responsibility: Management of all graphic rendering.</p> <pre><code>class GameRenderer:\n\"\"\"Class responsible for all game rendering.\"\"\"\n\n    def __init__(self, game_engine: GameEngine):\n\"\"\"Initializes with a reference to the engine.\"\"\"\n\n    def render_frame(self, dt: float) -&gt; None:\n\"\"\"Performs the complete rendering of a frame.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/game-engine/#rendering-pipeline","title":"Rendering Pipeline","text":"<ol> <li>Clear Screen: <code>_clear_screen()</code></li> <li>Game World: <code>_render_game_world()</code> - Grid and terrain</li> <li>Sprites: <code>_render_sprites()</code> - Entities with visual effects</li> <li>Interface: <code>_render_ui()</code> - ActionBar and UI elements</li> <li>Debug: <code>_render_debug_info()</code> - Development information</li> <li>Modals: Active modals (exit, help, etc.)</li> </ol>"},{"location":"en/dev/02-systeme/api/game-engine/#visual-effects","title":"Visual Effects","text":"<pre><code>def _render_single_sprite(self, window, camera, entity, pos, sprite):\n\"\"\"Renders a sprite with special effects.\n\n    Supported effects:\n    - Blinking for invincibility (SpeScout)\n    - Blue halo for shield (SpeMarauder)  \n    - Selection highlight (yellow circle)\n    - Dynamic health bars\n    \"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/game-engine/#integrated-ecs-system","title":"Integrated ECS System","text":""},{"location":"en/dev/02-systeme/api/game-engine/#ecs-initialization","title":"ECS Initialization","text":"<pre><code>def _initialize_ecs(self) -&gt; None:\n\"\"\"Initializes the ECS system with all processors.\"\"\"\n\n    # Main processors\n    self.movement_processor = MovementProcessor()\n    self.collision_processor = CollisionProcessor(graph=self.grid)\n    self.player_controls = PlayerControlProcessor()\n    self.tower_processor = TowerProcessor()\n\n    # Add with priorities\n    es.add_processor(self.collision_processor, priority=2)\n    es.add_processor(self.movement_processor, priority=3)\n    es.add_processor(self.player_controls, priority=4)\n    es.add_processor(self.tower_processor, priority=5)\n</code></pre>"},{"location":"en/dev/02-systeme/api/game-engine/#ecs-event-handlers","title":"ECS Event Handlers","text":"<pre><code># Configuration of event handlers\nes.set_handler('attack_event', create_projectile)\nes.set_handler('entities_hit', entitiesHit)\nes.set_handler('flying_chest_collision', self.flying_chest_manager.handle_collision)\n</code></pre>"},{"location":"en/dev/02-systeme/api/game-engine/#main-loop","title":"Main Loop","text":"<pre><code>def run(self) -&gt; None:\n\"\"\"Main game loop.\"\"\"\n    while self.running:\n        # Calculate delta time\n        dt = self.clock.tick(60) / 1000.0\n\n        # Process events\n        self.event_handler.handle_events()\n\n        # Update managers\n        self._update_game(dt)\n\n        # ECS processing (includes processors)\n        es.process()\n\n        # Rendering\n        self.renderer.render_frame(dt)\n</code></pre>"},{"location":"en/dev/02-systeme/api/game-engine/#specialized-managers","title":"Specialized Managers","text":"<p>The game engine integrates several specialized managers to handle complex game mechanics.</p>"},{"location":"en/dev/02-systeme/api/game-engine/#flyingchestmanager","title":"FlyingChestManager","text":"<p>File: <code>src/managers/flying_chest_manager.py</code></p> <p>Responsibility: Manages the spawning, behavior, and collection of flying chests over water.</p>"},{"location":"en/dev/02-systeme/api/game-engine/#islandresourcemanager","title":"IslandResourceManager","text":"<p>File: <code>src/managers/island_resource_manager.py</code></p> <p>Responsibility: Manages gold resources appearing on neutral islands.</p>"},{"location":"en/dev/02-systeme/api/game-engine/#stormmanager","title":"StormManager","text":"<p>File: <code>src/managers/stormManager.py</code></p> <p>Responsibility: Manages storms that inflict damage on units within their radius.</p>"},{"location":"en/dev/02-systeme/api/game-engine/#general-architecture","title":"General Architecture","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    GameEngine                               \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502                EventHandler                        \u2502    \u2502\n\u2502  \u2502  - Manages pygame events                           \u2502    \u2502\n\u2502  \u2502  - Keyboard/mouse controls                         \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502                                                             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502                GameRenderer                         \u2502    \u2502\n\u2502  \u2502  - Renders grid and sprites                        \u2502    \u2502\n\u2502  \u2502  - User Interface                                  \u2502    \u2502\n\u2502  \u2502  - Visual effects and fog                          \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502                                                             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502              ECS System                             \u2502    \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502    \u2502\n\u2502  \u2502  \u2502          ECS Processors                       \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - MovementProcessor                           \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - CollisionProcessor                          \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - PlayerControlProcessor                      \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - CapacitiesSpecialesProcessor                \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - LifetimeProcessor                           \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - TowerProcessor                              \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - EventProcessor                              \u2502 \u2502    \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502    \u2502\n\u2502  \u2502                                                         \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502    \u2502\n\u2502  \u2502  \u2502            ECS Components                       \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - Position, Sprite, Health, Velocity          \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - Team, Vision, Projectile                     \u2502 \u2502    \u2502\n\u2502  \u2502  \u2502  - Special abilities (SpeScout, etc.)          \u2502 \u2502    \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502                                                             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502            Specialized Managers                   \u2502    \u2502\n\u2502  \u2502  - FlyingChestManager                              \u2502    \u2502\n\u2502  \u2502  - IslandResourceManager                           \u2502    \u2502\n\u2502  \u2502  - StormManager                                    \u2502    \u2502\n\u2502  \u2502  - NotificationSystem                              \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502                                                             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502               External Systems                      \u2502    \u2502\n\u2502  \u2502  - VisionSystem (fog of war)                       \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"en/dev/02-systeme/api/game-engine/#main-data-flow","title":"Main Data Flow","text":"<ol> <li>Initialization: <code>GameEngine.initialize()</code> configures all components</li> <li>Main Loop: <code>GameEngine.run()</code> orchestrates the game</li> <li>Event Processing \u2192 <code>EventHandler.handle_events()</code></li> <li>Manager Updates \u2192 <code>_update_game(dt)</code></li> <li>ECS Processing \u2192 <code>es.process()</code></li> <li>Rendering \u2192 <code>GameRenderer.render_frame(dt)</code></li> <li>Events: ECS Processors emit events handled by managers</li> <li>Interactions: Collisions and interactions modify ECS components</li> </ol> <p>The engine provides a flexible and extensible architecture for creating real-time strategy games with full ECS integration.</p>"},{"location":"en/dev/02-systeme/api/ui-system/","title":"API - UI System","text":"<p>The Galad Islands UI system is centered around the main <code>ActionBar</code> and reusable UI components.</p>"},{"location":"en/dev/02-systeme/api/ui-system/#main-classes","title":"Main Classes","text":""},{"location":"en/dev/02-systeme/api/ui-system/#actionbar","title":"ActionBar","text":"<p>File: <code>src/ui/action_bar.py</code></p> <p>Responsibility: Main user interface displayed at the bottom of the screen.</p> <pre><code>class ActionBar:\n\"\"\"Main user interface of the game.\"\"\"\n\n    def __init__(self, get_player_gold_callback, get_selected_units_callback, **callbacks):\n\"\"\"Initializes the ActionBar with the necessary callbacks.\"\"\"\n\n    def draw(self, screen: pygame.Surface) -&gt; None:\n\"\"\"Draws the ActionBar on the screen.\"\"\"\n\n    def handle_event(self, event: pygame.event.Event) -&gt; bool:\n\"\"\"Handles UI events. Returns True if the event is consumed.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#main-features","title":"Main Features","text":"Feature Description Gold Display Shows the player's resources Unit Information Details of the selected unit Integrated Shop Purchase of units and upgrades Action Buttons Special abilities and boosts Team Switching Switch between ally/enemy (debug)"},{"location":"en/dev/02-systeme/api/ui-system/#actionbar-structure","title":"ActionBar Structure","text":"<pre><code># Main zones of the ActionBar\nself.main_rect          # Main area\nself.gold_rect          # Gold display area\nself.unit_info_rect     # Unit information area\nself.buttons_rect       # Action buttons area\nself.shop_rect          # Shop area\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#unitinfo","title":"UnitInfo","text":"<p>Responsibility: Encapsulates unit information for display.</p> <pre><code>@dataclass\nclass UnitInfo:\n\"\"\"Unit information for the ActionBar.\"\"\"\n\n    name: str                    # Unit name\n    health: int                  # Current health points\n    max_health: int             # Maximum health points\n    attack: int                 # Attack points\n    team: str                   # Team (\"Ally\" or \"Enemy\")\n    unit_class: str             # Unit class\n    cooldown: float = 0.0       # Special ability cooldown\n    max_cooldown: float = 0.0   # Maximum cooldown\n    has_special: bool = False   # Has a special ability\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#unitedshop-integrated-shop","title":"UnitedShop (Integrated Shop)","text":"<p>File: <code>src/ui/boutique.py</code></p> <p>Responsibility: System for purchasing units and upgrades.</p> <pre><code>class UnitedShop:\n\"\"\"Integrated shop in the ActionBar.\"\"\"\n\n    def __init__(self, faction: ShopFaction):\n\"\"\"Initializes the shop for a faction.\"\"\"\n\n    def draw(self, screen: pygame.Surface, rect: pygame.Rect) -&gt; None:\n\"\"\"Draws the shop in the given area.\"\"\"\n\n    def handle_click(self, pos: Tuple[int, int], rect: pygame.Rect) -&gt; Optional[dict]:\n\"\"\"Handles clicks in the shop.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#available-purchase-types","title":"Available Purchase Types","text":"<p>The shop is already designed to receive several purchase categories.</p> <pre><code>class ShopCategory(Enum):\n    UNITS = \"units\"          # Combat units\n</code></pre> <p>Available Units:</p> <ul> <li>Scout (10 gold) - Base unit with reconnaissance ability</li> <li>Marauder (20 gold) - Tank with mana shield</li> <li>Druid (30 gold) - Healer with regeneration</li> <li>Architect (30 gold) - Support with reload boost</li> <li>Leviathan (40 gold) - Heavy attacker with double salvo</li> </ul>"},{"location":"en/dev/02-systeme/api/ui-system/#color-system","title":"Color System","text":""},{"location":"en/dev/02-systeme/api/ui-system/#uicolors","title":"UIColors","text":"<p>Responsibility: Consistent color palette for the entire interface.</p> <pre><code>class UIColors:\n    # Main colors\n    BACKGROUND = (25, 25, 35, 220)     # Semi-transparent background\n    BORDER = (60, 120, 180)            # Borders\n\n    # Buttons\n    BUTTON_NORMAL = (45, 85, 125)      # Normal state\n    BUTTON_HOVER = (65, 115, 165)      # Hover\n    BUTTON_PRESSED = (35, 65, 95)      # Pressed\n    BUTTON_DISABLED = (40, 40, 50)     # Disabled\n\n    # Special buttons\n    ATTACK_BUTTON = (180, 60, 60)      # Attack buttons\n    DEFENSE_BUTTON = (60, 140, 60)     # Defense buttons\n\n    # Resources\n    GOLD = (255, 215, 0)               # Gold color\n    HEALTH_BAR = (220, 50, 50)         # Health bars\n    MANA_BAR = (50, 150, 220)          # Mana bars\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#event-management","title":"Event Management","text":""},{"location":"en/dev/02-systeme/api/ui-system/#hierarchical-event-system","title":"Hierarchical Event System","text":"<pre><code>def handle_event(self, event: pygame.event.Event) -&gt; bool:\n\"\"\"Handles events with hierarchical priority.\n\n    Priority order:\n    1. Shop (if open)\n    2. Action buttons\n    3. Unit information area\n    4. Gold area\n\n    Returns:\n        bool: True if the event was consumed\n    \"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#supported-event-types","title":"Supported Event Types","text":"Event Action Area <code>MOUSEBUTTONDOWN</code> Button clicks, shop purchase Entire ActionBar <code>MOUSEMOTION</code> Button hover, tooltips Buttons <code>KEYDOWN</code> Keyboard shortcuts (B for shop) Global"},{"location":"en/dev/02-systeme/api/ui-system/#callbacks-to-the-engine","title":"Callbacks to the Engine","text":"<pre><code># Callbacks configured at initialization\nself.get_player_gold_callback: Callable[[], int]\nself.get_selected_units_callback: Callable[[], List[UnitInfo]]\nself.shop_purchase_callback: Callable[[str, int], bool]\nself.special_ability_callback: Callable[[], None]\nself.camp_change_callback: Callable[[int], None]\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#reusable-ui-components","title":"Reusable UI Components","text":""},{"location":"en/dev/02-systeme/api/ui-system/#button","title":"Button","text":"<p>Responsibility: Generic interactive button.</p> <pre><code>class Button:\n\"\"\"Reusable UI button.\"\"\"\n\n    def __init__(self, rect: pygame.Rect, text: str, callback: Callable):\n        self.rect = rect\n        self.text = text\n        self.callback = callback\n        self.hovered = False\n        self.pressed = False\n\n    def draw(self, screen: pygame.Surface) -&gt; None:\n\"\"\"Draws the button with visual state.\"\"\"\n\n    def handle_event(self, event: pygame.event.Event) -&gt; bool:\n\"\"\"Handles button interactions.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#progress-bars","title":"Progress Bars","text":"<p>Implementation: Health and mana bars are drawn directly in the <code>ActionBar</code>, not via a dedicated class.</p> <pre><code># In ActionBar._draw_unit_info()\ndef _draw_unit_bars(self, surface, info_x, info_y):\n\"\"\"Draws the health and mana bars of the selected unit.\"\"\"\n\n    bar_width = 80\n    bar_height = 8\n\n    # Health bar\n    health_ratio = self.selected_unit.health / self.selected_unit.max_health\n    health_bg_rect = pygame.Rect(info_x + 5, info_y + 30, bar_width, bar_height)\n    health_rect = pygame.Rect(info_x + 5, info_y + 30, int(bar_width * health_ratio), bar_height)\n\n    pygame.draw.rect(surface, UIColors.HEALTH_BACKGROUND, health_bg_rect, border_radius=4)\n    pygame.draw.rect(surface, UIColors.HEALTH_BAR, health_rect, border_radius=4)\n    pygame.draw.rect(surface, UIColors.BORDER, health_bg_rect, 1, border_radius=4)\n\n    # Mana bar (if applicable)\n    if self.selected_unit.max_mana &gt; 0:\n        mana_ratio = self.selected_unit.mana / self.selected_unit.max_mana\n        mana_bg_rect = pygame.Rect(info_x + 105, info_y + 30, bar_width, bar_height)\n        mana_rect = pygame.Rect(info_x + 105, info_y + 30, int(bar_width * mana_ratio), bar_height)\n\n        pygame.draw.rect(surface, UIColors.MANA_BACKGROUND, mana_bg_rect, border_radius=4)\n        pygame.draw.rect(surface, UIColors.MANA_BAR, mana_rect, border_radius=4)\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#modals-and-windows","title":"Modals and Windows","text":""},{"location":"en/dev/02-systeme/api/ui-system/#ingamemenumodal","title":"InGameMenuModal","text":"<p>File: <code>src/ui/ingame_menu_modal.py</code></p> <p>Responsibility: Main modal menu accessible in-game (Escape key).</p> <pre><code>class InGameMenuModal:\n\"\"\"Manages the display and interactions of the in-game menu modal.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#menu-options","title":"Menu Options","text":"<ul> <li>Available Buttons:</li> <li>Resume: Closes the menu and returns to the game</li> <li>Settings: Opens the Options window</li> <li>Quit: Starts the exit confirmation procedure</li> </ul>"},{"location":"en/dev/02-systeme/api/ui-system/#genericmodal-generic-modal-system","title":"GenericModal - Generic Modal System","text":"<p>File: <code>src/ui/generic_modal.py</code></p> <p>Responsibility: Reusable generic modal system for different types of dialogs.</p> <pre><code>class GenericModal:\n\"\"\"Reusable generic modal system for different types of dialogs.\"\"\"\n\n    def __init__(self, title_key: str, message_key: str, \n                 buttons: List[Tuple[str, str]], \n                 callback: Optional[Callable[[str], None]] = None,\n                 vertical_layout: bool = False) -&gt; None:\n\"\"\"\n        Initializes a generic modal.\n\n        Args:\n            title_key: Translation key for the title\n            message_key: Translation key for the message  \n            buttons: List of tuples (action_id, translation_key) for the buttons\n            callback: Function called with the action_id when a button is clicked\n            vertical_layout: If True, buttons are arranged vertically\n        \"\"\"\n</code></pre> <p>\ud83d\udca1 Note: The <code>GenericModal</code> is particularly useful for quickly creating debug interfaces without duplicating UI code. See Debug Mode for more details.</p>"},{"location":"en/dev/02-systeme/api/ui-system/#advanced-modal-system","title":"Advanced Modal System","text":"<p>File: <code>src/functions/afficherModale.py</code></p> <p>Responsibility: Complete modal display system with Markdown and media support.</p> <pre><code>def afficher_modale(titre: str, md_path: str, bg_original=None, select_sound=None):\n\"\"\"Displays a modal window with rich Markdown content.\n\n    Features:\n        - Markdown support (titles, formatting, images)\n        - Static images (PNG, JPG) and animated GIFs\n        - Scrolling with interactive scrollbar\n        - Responsive resizing\n        - Resource caching for performance\n    \"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#full-options-menu","title":"Full Options Menu","text":"<p>File: <code>src/functions/optionsWindow.py</code></p> <p>Responsibility: Complete game configuration interface.</p> <pre><code>class OptionsWindow:\n\"\"\"Modal window for options with a modern interface.\"\"\"\n\n    def __init__(self):\n\"\"\"Initializes the responsive options window.\"\"\"\n\n    def run(self) -&gt; None:\n\"\"\"Starts the options interface loop.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#adapting-to-screen-size","title":"Adapting to Screen Size","text":"<pre><code>def resize(self, screen_width: int, screen_height: int) -&gt; None:\n\"\"\"Adapts the ActionBar to the new screen size.\"\"\"\n\n    # Calculation of new dimensions\n    self.height = min(120, screen_height // 6)\n    self.width = screen_width\n\n    # Repositioning of zones\n    self._calculate_zones()\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#integration-with-the-ecs-system","title":"Integration with the ECS System","text":""},{"location":"en/dev/02-systeme/api/ui-system/#retrieving-unit-data","title":"Retrieving Unit Data","text":"<pre><code>def _get_selected_units_info(self) -&gt; List[UnitInfo]:\n\"\"\"Retrieves information of selected units via ECS.\"\"\"\n\n    selected_units = []\n    for entity, (selected, pos, health, team) in esper.get_components(\n        PlayerSelectedComponent, PositionComponent, HealthComponent, TeamComponent\n    ):\n        # Build UnitInfo from ECS components\n        unit_info = self._build_unit_info(entity)\n        selected_units.append(unit_info)\n\n    return selected_units\n</code></pre>"},{"location":"en/dev/02-systeme/api/ui-system/#callbacks-to-systems","title":"Callbacks to Systems","text":"<pre><code>def _purchase_unit(self, unit_type: str, cost: int) -&gt; bool:\n\"\"\"Makes a purchase via the engine's callback.\"\"\"\n\n    if self.shop_purchase_callback:\n        return self.shop_purchase_callback(unit_type, cost)\n    return False\n\ndef _trigger_special_ability(self) -&gt; None:\n\"\"\"Triggers the special ability via callback.\"\"\"\n\n    if self.special_ability_callback:\n        self.special_ability_callback()\n</code></pre> <p>The UI system offers a modern and responsive interface with tight integration to the ECS system for real-time display of game data.</p>"},{"location":"en/dev/02-systeme/api/unit-system/","title":"API - Unit System","text":"<p>\ud83d\udea7 Section under construction</p> <p>This page describes the entity model for units, the special abilities API, the damage flow (collision \u2192 dispatch \u2192 application), and best practices for debugging and testing.</p>"},{"location":"en/dev/02-systeme/api/unit-system/#general-principles","title":"\ud83e\udde9 General Principles","text":"<ul> <li> <p>Architecture: ECS (Esper-like)</p> </li> <li> <p>entity = numeric id (int)</p> </li> <li>components = dataclasses attached via <code>esper.add_component(entity, Component(...))</code></li> <li> <p>processors = classes inheriting from <code>esper.Processor</code> and executed via <code>es.process()</code></p> </li> <li> <p>Key components for a unit</p> </li> <li> <p><code>PositionComponent</code>: { x, y, direction }</p> </li> <li><code>SpriteComponent</code>: rendering (image, size, surface)</li> <li><code>TeamComponent</code>: { team_id }</li> <li><code>VelocityComponent</code>: { currentSpeed, terrain_modifier, ... }</li> <li><code>RadiusComponent</code>: { bullet_cooldown, ... }</li> <li><code>AttackComponent</code>: { hitPoints }</li> <li><code>HealthComponent</code>: { currentHealth, maxHealth }</li> <li><code>CanCollideComponent</code>: collision flag</li> <li><code>Spe*</code>: special ability components (SpeScout, SpeMarauder, ...)</li> </ul> <p>You can learn more about special abilities in the dedicated documentation.</p>"},{"location":"en/dev/02-systeme/api/unit-system/#factory-unit-creation","title":"\u2699\ufe0f Factory \u2014 Unit Creation","text":"<p>The <code>UnitFactory</code> is the central point for creating unit entities. It ensures that each unit is instantiated with the correct set of components based on its type.</p> <ul> <li> <p>Function: <code>UnitFactory(unit_type: UnitType, enemy: bool, pos: PositionComponent)</code></p> </li> <li> <p>Behavior: Instantiates the entity and attaches the relevant components (health, attack, sprite, team, canCollide, SpeXxx if applicable). The factory reads unit statistics (HP, damage, speed) from <code>src/constants/gameplay.py</code>.</p> </li> <li> <p>Example: <code>UnitType.MARAUDER</code> \u2192 adds <code>SpeMaraudeur()</code> during creation.</p> </li> </ul> <pre><code>def UnitFactory(unit: UnitKey, enemy: bool, pos: PositionComponent):\n\"\"\"Creates a complete entity with all its components.\"\"\"\n    entity = esper.create_entity()\n\n    # Base components\n    esper.add_component(entity, pos)\n    esper.add_component(entity, TeamComponent(Team.ENEMY if enemy else Team.ALLY))\n\n    # Specific components based on unit type\n    if unit == UnitKey.ARCHITECT:\n        esper.add_component(entity, SpeArchitect(radius=ARCHITECT_RADIUS))\n        esper.add_component(entity, HealthComponent(100, 100))\n        esper.add_component(entity, AttackComponent(25))\n\n    return entity\n</code></pre>"},{"location":"en/dev/02-systeme/api/unit-system/#special-abilities-contract-api","title":"\u2728 Special Abilities \u2014 Contract &amp; API","text":"<p>Each special ability is encapsulated in a <code>SpeXxx</code> component. The code (GameEngine/UI/processors) expects a light and uniform API.</p> <p>See the detailed ability documentation: Special Ability System</p>"},{"location":"en/dev/02-systeme/api/unit-system/#recommended-contract","title":"Recommended Contract","text":"<ul> <li> <p>Attributes (depending on ability)</p> </li> <li> <p><code>is_active: bool</code></p> </li> <li><code>duration: float</code></li> <li><code>timer: float</code></li> <li><code>cooldown: float</code></li> <li> <p><code>cooldown_timer: float</code></p> </li> <li> <p>Recommended Methods</p> </li> <li> <p><code>can_activate()</code> -&gt; bool</p> </li> <li><code>activate()</code> -&gt; bool</li> <li><code>update(dt)</code></li> <li>any specific methods (e.g., <code>apply_damage_reduction(damage)</code>, <code>is_invincible()</code>)</li> </ul>"},{"location":"en/dev/02-systeme/api/unit-system/#common-implementations","title":"Common Implementations","text":"<ul> <li><code>SpeScout</code>: temporary invincibility (<code>is_invincible()</code>)</li> <li><code>SpeMaraudeur</code>: shield that reduces damage (<code>apply_damage_reduction</code>, <code>is_shielded()</code>)</li> <li><code>SpeLeviathan</code>, <code>SpeDruid</code>, <code>SpeArchitect</code>: other behaviors (see respective components)</li> </ul>"},{"location":"en/dev/02-systeme/api/unit-system/#update-cycle","title":"\ud83d\udd01 Update Cycle","text":"<ul> <li><code>CapacitiesSpecialesProcessor.process(dt)</code> calls <code>update(dt)</code> on each <code>Spe*</code> component.</li> <li>The UI (ActionBar) reads <code>cooldown_timer</code> to display the cooldown via <code>GameEngine._build_unit_info</code> / <code>_update_unit_info</code>.</li> </ul>"},{"location":"en/dev/02-systeme/api/unit-system/#damage-chain-collision-application","title":"\ud83d\udca5 Damage Chain (Collision \u2192 Application)","text":"<p>The combat system is event-driven, starting from collision detection.</p> <ol> <li><code>CollisionProcessor</code>: Detects collisions (AABB on <code>SpriteComponent.original_*</code>) and calls <code>_handle_entity_hit(e1, e2)</code>.</li> <li><code>_handle_entity_hit</code>:<ul> <li>Saves useful state (positions, if projectile, ...).</li> <li>Dispatches an event: <code>esper.dispatch_event('entities_hit', e1, e2)</code>.</li> <li>After dispatch, handles mine destruction/explosions based on entity existence.</li> </ul> </li> <li>Configured Handler: <code>functions.handleHealth.entitiesHit</code> is registered to listen for the <code>entities_hit</code> event.<ul> <li>It reads <code>AttackComponent.hitPoints</code> from the attacker and calls <code>processHealth(target, damage)</code>.</li> </ul> </li> <li><code>processHealth(entity, damage)</code>:<ul> <li>Retrieves the target's <code>HealthComponent</code>.</li> <li>If <code>SpeMaraudeur</code> is present and active, it applies <code>apply_damage_reduction</code>.</li> <li>If <code>SpeScout</code> is present and <code>is_invincible()</code>, it cancels the damage.</li> <li>Decrements <code>health.currentHealth</code> and deletes the entity if health is \u2264 0.</li> </ul> </li> </ol>"},{"location":"en/dev/02-systeme/api/unit-system/#points-of-attention","title":"\u26a0\ufe0f Points of Attention","text":"<ul> <li>Naming Consistency: <code>HealthComponent</code> uses <code>currentHealth</code> / <code>maxHealth</code> (camelCase). Be consistent when adding new fields.</li> <li>Safe Access: Always protect calls on optional components with <code>esper.has_component(...)</code>.</li> <li>Event Loops: Avoid handlers that re-dispatch <code>entities_hit</code> for the same pair, which could cause an infinite loop.</li> <li>Mine Lifecycle: A mine is an entity (HP=1, Attack=40, Team=0). <code>CollisionProcessor</code> is responsible for cleaning up the grid (<code>graph[y][x] = 0</code>) after it explodes.</li> </ul>"},{"location":"en/dev/02-systeme/api/unit-system/#recommended-debugging","title":"\ud83d\udc1b Recommended Debugging","text":"<ul> <li>Prefer <code>logging</code> over <code>print</code> and use levels (DEBUG/INFO/WARN).</li> <li>Useful traces:</li> <li><code>CollisionProcessor._handle_entity_hit(e1,e2)</code> (log key components).</li> <li><code>functions.handleHealth.entitiesHit</code> / <code>processHealth</code> (log health before/after, and any active <code>Spe*</code> components).</li> <li>Check <code>esper.entity_exists(entity)</code> after dispatching an event that might delete it.</li> </ul>"},{"location":"en/dev/02-systeme/api/unit-system/#tests-to-automate","title":"\u2705 Tests to Automate","text":"<ul> <li>Unit tests (with a minimal esper world):</li> <li>mine vs. normal unit \u2192 mine destroyed, unit -40 HP, grid tile = 0.</li> <li>mine vs. invincible Scout \u2192 mine intact, unit untouched.</li> <li>projectile vs. mine \u2192 projectile destroyed, mine intact.</li> <li>Marauder with shield \u2192 damage correctly reduced.</li> </ul>"},{"location":"en/dev/02-systeme/api/unit-system/#future-recommendations","title":"\ud83d\udca1 Future Recommendations","text":"<ul> <li>Replace <code>print</code> with <code>logging</code> (DEBUG level).</li> <li>Standardize the ability API via a common base class (<code>BaseSpecialAbility</code>).</li> <li>Add a <code>ManaComponent</code> if some abilities need a resource cost.</li> </ul>"},{"location":"en/dev/02-systeme/api/unit-system/#coming-soon","title":"Coming Soon","text":"<ul> <li>AI and behaviors</li> </ul> <p>This documentation will be completed soon.</p>"},{"location":"en/dev/02-systeme/modules/components/","title":"ECS Components","text":"<p>Components store only Data and define the Properties of Entities. They never contain business Logic.</p>"},{"location":"en/dev/02-systeme/modules/components/#components-organization","title":"Components organization","text":"<pre><code>src/components/\n\u251c\u2500\u2500 core/           # Core components (position, health, etc.)\n\u251c\u2500\u2500 special/        # Special abilities of units\n\u251c\u2500\u2500 events/         # Temporary event components\n\u2514\u2500\u2500 globals/        # Global components (Camera, map)\n</code></pre>"},{"location":"en/dev/02-systeme/modules/components/#core-components-core","title":"Core components (core/)","text":""},{"location":"en/dev/02-systeme/modules/components/#essential-components","title":"Essential components","text":""},{"location":"en/dev/02-systeme/modules/components/#positioncomponent","title":"PositionComponent","text":"<p>File: <code>src/components/core/positionComponent.py</code></p> <pre><code>@component\nclass PositionComponent:\n    def __init__(self, x=0.0, y=0.0, direction=0.0):\n        self.x: float = x           # Position X in the world\n        self.y: float = y           # Position Y in the world  \n        self.direction: float = direction  # Direction in radians\n</code></pre> <p>Usage: All Entities visible on the map.</p>"},{"location":"en/dev/02-systeme/modules/components/#healthcomponent","title":"HealthComponent","text":"<p>File: <code>src/components/core/healthComponent.py</code></p> <pre><code>@component\nclass HealthComponent:\n    def __init__(self, currentHealth: int, maxHealth: int):\n        self.currentHealth: int = currentHealth\n        self.maxHealth: int = maxHealth\n</code></pre> <p>Usage: Units, buildings, destructible objects.</p>"},{"location":"en/dev/02-systeme/modules/components/#teamcomponent","title":"TeamComponent","text":"<p>File: <code>src/components/core/teamComponent.py</code></p> <pre><code>from src.components.core.team_enum import Team\n\n@component\nclass TeamComponent:\n    def __init__(self, team: Team = Team.ALLY):\n        self.team: Team = team  # Team.ALLY or Team.ENEMY\n</code></pre> <p>Usage: Determines alliances and attack targets.</p>"},{"location":"en/dev/02-systeme/modules/components/#most-used-special-components","title":"Most used special components","text":""},{"location":"en/dev/02-systeme/modules/components/#spearchitect-reload-boost","title":"SpeArchitect - Reload boost","text":"<pre><code>@component\nclass SpeArchitect:\n    def __init__(self, is_active=False, radius=0.0):\n        self.is_active: bool = is_active\n        self.available: bool = True\n        self.radius: float = radius             # Effect radius\n        self.affected_units: List[int] = []    # Affected units\n        self.duration: float = 10.0            # Effect duration\n</code></pre>"},{"location":"en/dev/02-systeme/modules/components/#spescout-invincibility","title":"SpeScout - Invincibility","text":"<pre><code>@component\nclass SpeScout:\n    def __init__(self):\n        self.is_invincible: bool = False\n        self.cooldown_timer: float = 0.0\n        self.invincibility_duration: float = 3.0\n</code></pre>"},{"location":"en/dev/02-systeme/modules/components/#playercomponent-player-data","title":"PlayerComponent - Player data","text":"<pre><code>@component\nclass PlayerComponent:\n    def __init__(self, stored_gold: int = 0):\n        self.stored_gold: int = stored_gold\n\n    def get_gold(self) -&gt; int:\n        return self.stored_gold\n\n    def spend_gold(self, amount: int) -&gt; bool:\n        if self.stored_gold &gt;= amount:\n            self.stored_gold -= amount\n            return True\n        return False\n</code></pre>"},{"location":"en/dev/02-systeme/modules/components/#basecomponent","title":"BaseComponent","text":"<p>File: <code>src/components/core/baseComponent.py</code></p> <p>Hybrid architecture: Traditional ECS component + Integrated Manager for base Entities.</p>"},{"location":"en/dev/02-systeme/modules/components/#instance-data-classic-component","title":"Instance data (classic component)","text":"<pre><code>@component\nclass BaseComponent:\n    def __init__(self, troopList=[], currentTroop=0):\n        self.troopList: list = troopList      # Base troops\n        self.currentTroop: int = currentTroop # Selected unit index\n</code></pre>"},{"location":"en/dev/02-systeme/modules/components/#integrated-class-manager","title":"Integrated class manager","text":"<pre><code>class BaseComponent:\n    # Class variables for global state\n    _ally_base_entity: Optional[int] = None\n    _enemy_base_entity: Optional[int] = None\n    _initialized: bool = False\n</code></pre>"},{"location":"en/dev/02-systeme/modules/components/#manager-api","title":"Manager API","text":"<p>Initialization: <pre><code>@classmethod\ndef initialize_bases(cls):\n\"\"\"Creates base Entities with all their Components:\n    - PositionComponent (map positioning)\n    - HealthComponent (1000 HP by default)\n    - AttackComponent (50 damage on contact)\n    - TeamComponent (team 1/2)\n    - CanCollideComponent + RecentHitsComponent (collision + cooldown)\n    - ClasseComponent (localized names)\n    - SpriteComponent (optimized invisible hitbox)\n    \"\"\"\n</code></pre></p> <p>Entity access: <pre><code>@classmethod\ndef get_ally_base(cls) -&gt; Optional[int]:\n\"\"\"Returns the ID of the allied base entity.\"\"\"\n\n@classmethod  \ndef get_enemy_base(cls) -&gt; Optional[int]:\n\"\"\"Returns the ID of the enemy base entity.\"\"\"\n</code></pre></p> <p>Troop management: <pre><code>@classmethod\ndef add_unit_to_base(cls, unit_entity: int, is_enemy: bool = False) -&gt; bool:\n\"\"\"Adds a unit to the base's troop list.\"\"\"\n\n@classmethod\ndef get_base_units(cls, is_enemy: bool = False) -&gt; list[int]:\n\"\"\"Returns the troop list of a base.\"\"\"\n</code></pre></p> <p>Positioning: <pre><code>@classmethod  \ndef get_spawn_position(cls, is_enemy=False, jitter=TILE_SIZE*0.35) -&gt; Tuple[float, float]:\n\"\"\"Calculates a spawn position near the base with optional jitter.\"\"\"\n</code></pre></p> <p>Maintenance: <pre><code>@classmethod\ndef reset(cls) -&gt; None:\n\"\"\"Resets the Manager (level change).\"\"\"\n</code></pre></p>"},{"location":"en/dev/02-systeme/modules/components/#usage","title":"Usage","text":"<p>Game initialization: <pre><code># In GameEngine._create_initial_entities()\nBaseComponent.initialize_bases()\nspawn_x, spawn_y = BaseComponent.get_spawn_position(is_enemy=False)\n</code></pre></p> <p>Unit purchase: <pre><code># In boutique.py\nentity = UnitFactory(unit_type, is_enemy, spawn_position)\nBaseComponent.add_unit_to_base(entity, is_enemy)\n</code></pre></p> <p>Migration from BaseManager: - <code>get_base_manager().method()</code> \u2192 <code>BaseComponent.method()</code> - Same API, just direct calls - Identical performance, simplified architecture</p> <p>Usage: Hybrid component for allied/enemy headquarters with centralized management.</p>"},{"location":"en/dev/02-systeme/modules/components/#important-enumerations","title":"Important enumerations","text":""},{"location":"en/dev/02-systeme/modules/components/#team-teams","title":"Team (Teams)","text":"<pre><code>class Team(IntEnum):\n    ALLY = 0    # Player team\n    ENEMY = 1   # Enemy team\n</code></pre>"},{"location":"en/dev/02-systeme/modules/components/#unitclass-unit-types","title":"UnitClass (Unit types)","text":"<pre><code>class UnitClass(IntEnum):\n    ZASPER = 0      # Base unit\n    BARHAMUS = 1    # Tank\n    DRUID = 2       # Healer\n    ARCHITECT = 3   # Support\n    DRAUPNIR = 4    # Heavy attacker\n</code></pre>"},{"location":"en/dev/02-systeme/modules/components/#global-components-globals","title":"Global components (globals/)","text":""},{"location":"en/dev/02-systeme/modules/components/#cameracomponent-view-management","title":"CameraComponent - View management","text":"<p>File: <code>src/components/globals/cameraComponent.py</code></p> <pre><code>class Camera:\n\"\"\"Camera for adaptive map display.\"\"\"\n\n    def __init__(self, screen_width: int, screen_height: int):\n        self.x: float = 0.0              # Camera X position (world pixels)\n        self.y: float = 0.0              # Camera Y position (world pixels)\n        self.zoom: float = ZOOM_MIN      # Default zoom factor\n        self.screen_width: int = screen_width\n        self.screen_height: int = screen_height\n\n        # World limits\n        self.world_width: int = MAP_WIDTH * TILE_SIZE\n        self.world_height: int = MAP_HEIGHT * TILE_SIZE\n\n    def world_to_screen(self, world_x: float, world_y: float) -&gt; tuple[int, int]:\n\"\"\"World coordinates \u2192 Screen conversion.\"\"\"\n\n    def get_visible_tiles(self) -&gt; tuple[int, int, int, int]:\n\"\"\"Optimization: returns visible tiles (culling).\"\"\"\n</code></pre> <p>UI Integration: See Camera System for usage details.</p>"},{"location":"en/dev/02-systeme/modules/components/#mapcomponent-generation-and-display","title":"MapComponent - Generation and display","text":"<p>File: <code>src/components/globals/mapComponent.py</code></p> <pre><code>def init_game_map(screen_width: int, screen_height: int) -&gt; dict:\n\"\"\"Initializes the complete map state.\"\"\"\n    grid = creer_grille()           # Empty grid (sea)\n    images = charger_images()       # Terrain sprites\n    placer_elements(grid)           # Procedural generation\n    camera = Camera(screen_width, screen_height)\n    return {\"grid\": grid, \"images\": images, \"camera\": camera}\n\ndef creer_grille() -&gt; list[list[int]]:\n\"\"\"Creates MAP_HEIGHT x MAP_WIDTH grid initialized to TileType.SEA.\"\"\"\n\ndef placer_elements(grid: list[list[int]]) -&gt; None:\n\"\"\"Procedural generation of map elements:\n\n    1. Fixed bases (4x4) at corners\n    2. Generic islands (GENERIC_ISLAND_RATE)\n    3. Gold mines (MINE_RATE) \n    4. Decorative clouds (CLOUD_RATE)\n    \"\"\"\n\ndef afficher_grille(window: pygame.Surface, grid: list[list[int]], \n                   images: dict, camera: Camera) -&gt; None:\n\"\"\"Optimized map rendering with viewport culling.\"\"\"\n</code></pre> <p>UI Integration: See Map system and world view for complete rendering.</p>"},{"location":"en/dev/02-systeme/modules/components/#event-components-events","title":"Event components (events/)","text":""},{"location":"en/dev/02-systeme/modules/components/#stormcomponent-storm-event","title":"StormComponent - Storm event","text":"<p>File: <code>src/components/events/stormComponent.py</code></p> <pre><code>@component\nclass Storm:\n    def __init__(self, tempete_duree: float = 0, tempete_cooldown: float = 0):\n        self.tempete_duree: float = tempete_duree      # Storm duration\n        self.tempete_cooldown: float = tempete_cooldown # Cooldown before new storm\n</code></pre> <p>Usage: Weather event that affects units on the map.</p>"},{"location":"en/dev/02-systeme/modules/components/#krakencomponent-kraken-event","title":"KrakenComponent - Kraken event","text":"<p>File: <code>src/components/events/krakenComponent.py</code></p> <pre><code>@component\nclass Kraken:\n    def __init__(self, kraken_tentacules_min: int = 0, kraken_tentacules_max: int = 0):\n        self.kraken_tentacules_min: int = kraken_tentacules_min  # Min tentacles\n        self.kraken_tentacules_max: int = kraken_tentacules_max  # Max tentacles\n</code></pre> <p>Usage: Boss event with multiple tentacles.</p>"},{"location":"en/dev/02-systeme/modules/components/#flychestcomponent-flying-chest","title":"FlyChestComponent - Flying chest","text":"<p>File: <code>src/components/events/flyChestComponent.py</code></p> <pre><code>@component  \nclass FlyChest:\n    def __init__(self, chest_value: int = 0):\n        self.chest_value: int = chest_value  # Gold value of the chest\n        self.is_collected: bool = False      # Collection state\n</code></pre> <p>Usage: Temporary gold collection event.</p>"},{"location":"en/dev/02-systeme/modules/components/#building-components-buildings","title":"Building components (buildings/)","text":"<p>\ud83d\udcd6 Complete documentation: See Tower System for detailed implementation of the defensive tower system.</p>"},{"location":"en/dev/02-systeme/modules/components/#towercomponent-base-component-for-towers","title":"TowerComponent - Base component for towers","text":"<p>File: <code>src/components/core/towerComponent.py</code></p> <pre><code>@dataclass\nclass TowerComponent:\n    tower_type: str              # Tower type: \"defense\" or \"heal\"\n    range: float                 # Action range in pixels\n    cooldown: float              # Time between two actions (seconds)\n    current_cooldown: float = 0.0  # Time remaining before next action\n    target_entity: Optional[int] = None  # Currently targeted entity\n</code></pre> <p>Usage: All towers (defense and heal). Managed by the <code>TowerProcessor</code>.</p> <p>Properties: - <code>tower_type</code>: Determines behavior (attack or heal) - <code>range</code>: Target detection distance - <code>cooldown</code>: Action frequency - <code>current_cooldown</code>: Decremented counter each frame - <code>target_entity</code>: ID of current target</p>"},{"location":"en/dev/02-systeme/modules/components/#defensetowercomponent-attack-towers","title":"DefenseTowerComponent - Attack towers","text":"<p>File: <code>src/components/core/defenseTowerComponent.py</code></p> <pre><code>@dataclass\nclass DefenseTowerComponent:\n    damage: float        # Damage inflicted per attack (default: 15.0)\n    attack_speed: float  # Attack speed multiplier (default: 1.0)\n</code></pre> <p>Usage: Towers that automatically attack enemies in range.</p> <p>Creation: Via <code>buildingFactory.create_defense_tower()</code> - Cost: 150 gold - Range: 200 pixels - Cooldown: 2 seconds - Damage: 15 per projectile</p>"},{"location":"en/dev/02-systeme/modules/components/#healtowercomponent-healing-towers","title":"HealTowerComponent - Healing towers","text":"<p>File: <code>src/components/core/healTowerComponent.py</code></p> <pre><code>@dataclass\nclass HealTowerComponent:\n    heal_amount: float   # Health points restored per heal (default: 10.0)\n    heal_speed: float    # Healing speed multiplier (default: 1.0)\n</code></pre> <p>Usage: Towers that automatically heal wounded allies in range.</p> <p>Creation: Via <code>buildingFactory.create_heal_tower()</code> - Cost: 120 gold - Range: 150 pixels - Cooldown: 3 seconds - Heal: 10 HP per cycle</p> <p>Note: Towers require an Architect to be selected and placement on an island.</p>"},{"location":"en/dev/02-systeme/modules/components/#rendering-and-interaction-components","title":"Rendering and interaction components","text":""},{"location":"en/dev/02-systeme/modules/components/#spritecomponent-visual-display","title":"SpriteComponent - Visual display","text":"<p>File: <code>src/components/core/spriteComponent.py</code></p> <pre><code>@component\nclass SpriteComponent:\n    def __init__(self, image_path: str = \"\", width: float = 0.0, height: float = 0.0,\n                 image: pygame.Surface = None, surface: pygame.Surface = None):\n        self.image_path: str = image_path    # Sprite assets path\n        self.width: float = width            # Display width\n        self.height: float = height          # Display height\n        self.original_width: float = width   # Original dimensions\n        self.original_height: float = height # (for collisions)\n        self.image: pygame.Surface = image   # Source image\n        self.surface: pygame.Surface = surface # Resized image\n\n    def load_sprite(self) -&gt; None:\n\"\"\"Load image from path.\"\"\"\n\n    def scale_sprite(self, width: float, height: float) -&gt; None:\n\"\"\"Resize the sprite.\"\"\"\n</code></pre> <p>Usage: All visible entities (units, projectiles, effects).</p>"},{"location":"en/dev/02-systeme/modules/components/#velocitycomponent-movement","title":"VelocityComponent - Movement","text":"<p>File: <code>src/components/core/velocityComponent.py</code></p> <pre><code>@component\nclass VelocityComponent:\n    def __init__(self, vx: float = 0.0, vy: float = 0.0, speed: float = 0.0):\n        self.vx: float = vx              # X speed\n        self.vy: float = vy              # Y speed  \n        self.speed: float = speed        # Maximum speed\n        self.terrain_modifier: float = 1.0  # Terrain modifier\n</code></pre> <p>Usage: Mobile entities with terrain interaction.</p>"},{"location":"en/dev/02-systeme/modules/components/#projectilecomponent-projectiles","title":"ProjectileComponent - Projectiles","text":"<p>File: <code>src/components/core/projectileComponent.py</code></p> <pre><code>@component\nclass ProjectileComponent:\n    def __init__(self, damage: int = 0, target_entity: int = -1, \n                 speed: float = 0.0, range_max: float = 0.0):\n        self.damage: int = damage           # Projectile damage\n        self.target_entity: int = target_entity  # Target entity\n        self.speed: float = speed           # Movement speed\n        self.range_max: float = range_max   # Maximum range\n        self.distance_traveled: float = 0.0 # Distance traveled\n</code></pre> <p>Usage: Attack projectiles between units.</p>"},{"location":"en/dev/02-systeme/modules/components/#visioncomponent-vision-range","title":"VisionComponent - Vision range","text":"<p>File: <code>src/components/core/visionComponent.py</code></p> <pre><code>@component\nclass VisionComponent:\n    def __init__(self, range: float):\n        self.range: float = range  # Vision range in grid units\n</code></pre> <p>Usage: Units with vision capability.</p> <p>Tip</p> <p>See Vision system and fog of war for implementation details.</p>"},{"location":"en/dev/02-systeme/modules/components/#terrain-types-and-generation","title":"Terrain types and generation","text":""},{"location":"en/dev/02-systeme/modules/components/#tiletype-enumeration","title":"TileType enumeration","text":"<p>File: <code>src/constants/map_tiles.py</code></p> <pre><code>class TileType(IntEnum):\n    SEA = 0                # Sea (navigable)\n    GENERIC_ISLAND = 1     # Generic island (obstacle)\n    ALLY_BASE = 2          # Allied base (4x4)\n    ENEMY_BASE = 3         # Enemy base (4x4)  \n    MINE = 4               # Gold mine (resource)\n    CLOUD = 5              # Decorative cloud\n</code></pre>"},{"location":"en/dev/02-systeme/modules/components/#procedural-generation-algorithm","title":"Procedural generation algorithm","text":"<pre><code>def placer_bloc_aleatoire(grid: list[list[int]], value: TileType, nombre: int,\n                         size: int = 1, min_dist: int = 2, avoid_bases: bool = True) -&gt; list[tuple[float, float]]:\n\"\"\"Random placement algorithm with constraints:\n\n    1. Base avoidance (avoid_bases=True)\n    2. Minimum distance between elements (min_dist)\n    3. Free space validation (bloc_libre())\n    4. Placement in variable size blocks (size)\n\n    Returns:\n        list[tuple]: Centers of placed blocks\n    \"\"\"\n</code></pre> <p>Configurable generation rates:</p> <ul> <li><code>GENERIC_ISLAND_RATE</code>: Number of generated islands</li> <li><code>MINE_RATE</code>: Number of gold mines  </li> <li><code>CLOUD_RATE</code>: Number of decorative clouds</li> </ul>"},{"location":"en/dev/02-systeme/modules/components/#practical-usage","title":"Practical usage","text":""},{"location":"en/dev/02-systeme/modules/components/#create-an-entity-with-components","title":"Create an entity with components","text":"<pre><code># Create a unit\nentity = esper.create_entity()\nesper.add_component(entity, PositionComponent(100, 200))\nesper.add_component(entity, TeamComponent(Team.ALLY))\nesper.add_component(entity, HealthComponent(100, 100))\nesper.add_component(entity, AttackComponent(25))\n</code></pre>"},{"location":"en/dev/02-systeme/modules/components/#search-for-entities","title":"Search for entities","text":"<pre><code># All units with position and health\nfor ent, (pos, health) in esper.get_components(PositionComponent, HealthComponent):\n    if health.currentHealth &lt;= 0:\n        esper.delete_entity(ent)\n</code></pre>"},{"location":"en/dev/02-systeme/modules/components/#check-component-presence","title":"Check component presence","text":"<pre><code>if esper.has_component(entity, SpeArchitect):\n    architect = esper.component_for_entity(entity, SpeArchitect)\n    if architect.available and not architect.is_active:\n        # Activate the ability...\n</code></pre>"},{"location":"en/dev/02-systeme/modules/components/#best-practices","title":"Best practices","text":""},{"location":"en/dev/02-systeme/modules/components/#dos","title":"\u2705 Do's","text":"<ul> <li>Pure data only in components</li> <li>Type hints for all properties</li> <li>Sensible default values</li> <li>Explicit names for properties</li> </ul>"},{"location":"en/dev/02-systeme/modules/components/#donts","title":"\u274c Don'ts","text":"<ul> <li>Business logic in components</li> <li>Direct references between entities</li> <li>Complex methods</li> <li>Shared mutable state</li> </ul> <p>This modular organization allows creating complex entities by combining simple and reusable components.</p>"},{"location":"en/dev/02-systeme/modules/managers/","title":"Managers (Managers)","text":"<p>Managers centralize the management of resources and high-level game behaviors.</p>"},{"location":"en/dev/02-systeme/modules/managers/#list-of-managers","title":"List of Managers","text":"Manager Responsibility File <code>BaseComponent</code> Integrated management of allied/enemy headquarters <code>src/components/core/baseComponent.py</code> <code>FlyingChestManager</code> Management of flying chests <code>src/managers/flying_chest_manager.py</code> <code>StormManager</code> Management of storms <code>src/managers/storm_manager.py</code> <code>DisplayManager</code> Display management <code>src/managers/display.py</code> <code>AudioManager</code> Audio management <code>src/managers/audio.py</code> <code>SpriteManager</code> Sprite cache <code>src/systems/sprite_system.py</code>"},{"location":"en/dev/02-systeme/modules/managers/#gameplay-managers","title":"Gameplay managers","text":""},{"location":"en/dev/02-systeme/modules/managers/#basemanager-basecomponent","title":"\u26a0\ufe0f BaseManager \u2192 BaseComponent","text":"<p>Note: <code>BaseManager</code> no longer exists. It has been merged into <code>BaseComponent</code> to simplify the architecture.</p> <p>Migration:  - <code>get_base_manager().method()</code> \u2192 <code>BaseComponent.method()</code> - All features are now class methods in <code>BaseComponent</code></p> <p>Complete documentation: See BaseComponent</p>"},{"location":"en/dev/02-systeme/modules/managers/#flyingchestmanager","title":"FlyingChestManager","text":"<p>Responsibility: Manages the appearance and behavior of flying chests.</p> <pre><code>class FlyingChestManager:\n    def update(self, dt: float):\n\"\"\"Updates timers and spawns chests.\"\"\"\n\n    def handle_collision(self, entity: int, chest_entity: int):\n\"\"\"Handles collision with a flying chest.\"\"\"\n</code></pre> <p>Features: - Automatic appearance every 30 seconds - Gives gold to the player (100 gold by default) - Spawn only on water tiles</p>"},{"location":"en/dev/02-systeme/modules/managers/#audiomanager","title":"AudioManager","text":"<p>Responsibility: Centralized audio management.</p> <pre><code>class AudioManager:\n    def play_music(self, music_path: str, loop: bool = True):\n\"\"\"Plays background music.\"\"\"\n\n    def play_sound(self, sound_path: str):\n\"\"\"Plays a sound effect.\"\"\"\n\n    def set_music_volume(self, volume: float):\n\"\"\"Sets the music volume.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/modules/managers/#spritesystem-spritemanager","title":"SpriteSystem (SpriteManager)","text":"<p>Responsibility: Cache and optimized sprite management.</p> <pre><code>class SpriteSystem:\n    def get_sprite(self, sprite_id: SpriteID) -&gt; pygame.Surface:\n\"\"\"Retrieves a sprite from the cache.\"\"\"\n\n    def create_sprite_component(self, sprite_id: SpriteID, width: int, height: int):\n\"\"\"Creates an optimized SpriteComponent.\"\"\"\n</code></pre> <p>Advantages: - Automatic sprite caching - Avoids multiple reloads - ID system instead of paths - Memory optimization</p>"},{"location":"en/dev/02-systeme/modules/managers/#usage-patterns","title":"Usage Patterns","text":""},{"location":"en/dev/02-systeme/modules/managers/#integrated-ecs-architecture","title":"Integrated ECS Architecture","text":"<pre><code># Direct usage of class methods\nBaseComponent.initialize_bases()\nally_base = BaseComponent.get_ally_base()\nenemy_base = BaseComponent.get_enemy_base()\n\n# Reset during level changes\nBaseComponent.reset()\n</code></pre>"},{"location":"en/dev/02-systeme/modules/managers/#manager-lifecycle","title":"Manager Lifecycle","text":"<pre><code># In GameEngine\ndef _initialize_managers(self):\n    self.flying_chest_manager = FlyingChestManager()\n    self.audio_manager = AudioManager()\n\ndef _update_managers(self, dt):\n    self.flying_chest_manager.update(dt)\n</code></pre>"},{"location":"en/dev/02-systeme/modules/managers/#best-practices","title":"Best practices","text":""},{"location":"en/dev/02-systeme/modules/managers/#well-designed-managers","title":"\u2705 Well-designed Managers","text":"<ul> <li>Single responsibility: Clearly defined domain</li> <li>Clear interface: Documented public methods</li> <li>ECS integration: Works with Components/Entities</li> </ul>"},{"location":"en/dev/02-systeme/modules/managers/#to-avoid","title":"\u274c To avoid","text":"<ul> <li>Managers too large with multiple responsibilities</li> <li>Strong coupling between Managers</li> <li>Business logic in Managers (should be in Processors)</li> </ul>"},{"location":"en/dev/02-systeme/modules/processors/","title":"ECS Processors","text":"<p>Processors contain the game's business logic and act on Entities having certain Components.</p>"},{"location":"en/dev/02-systeme/modules/processors/#list-of-processors","title":"List of Processors","text":""},{"location":"en/dev/02-systeme/modules/processors/#core-processors","title":"Core processors","text":"Processor Priority Responsibility <code>CollisionProcessor</code> 2 Collision detection and impact management <code>MovementProcessor</code> 3 Movement of Entities with velocity <code>PlayerControlProcessor</code> 4 Player controls and ability activation <code>CapacitiesSpecialesProcessor</code> 5 Update of ability cooldowns <code>LifetimeProcessor</code> 10 Removal of temporary Entities <code>TowerProcessor</code> 15 Logic of defensive towers (attack/heal)"},{"location":"en/dev/02-systeme/modules/processors/#rendering-processor","title":"Rendering processor","text":"Processor Description <code>RenderingProcessor</code> Sprite display with Camera/zoom management"},{"location":"en/dev/02-systeme/modules/processors/#processor-details","title":"Processor details","text":""},{"location":"en/dev/02-systeme/modules/processors/#collisionprocessor","title":"CollisionProcessor","text":"<p>File: <code>src/Processors/collisionProcessor.py</code></p> <p>Responsibility: Detects and handles collisions between Entities.</p> <pre><code>class CollisionProcessor(esper.Processor):\n    def __init__(self, graph=None):\n        self.graph = graph  # Map grid\n\n    def process(self):\n        # Collision detection between all Entities\n        for ent1, (pos1, collision1) in esper.get_components(PositionComponent, CanCollideComponent):\n            for ent2, (pos2, collision2) in esper.get_components(PositionComponent, CanCollideComponent):\n                if self._entities_collide(ent1, ent2):\n                    self._handle_entity_hit(ent1, ent2)\n</code></pre> <p>Components Required: - <code>PositionComponent</code> - <code>CanCollideComponent</code></p> <p>Actions: - Calculates distances between Entities - Dispatches the <code>entities_hit</code> event for collisions - Handles collisions with flying chests - Cleans exploded mines from the grid</p>"},{"location":"en/dev/02-systeme/modules/processors/#movementprocessor","title":"MovementProcessor","text":"<p>File: <code>src/Processors/movementProcessor.py</code></p> <p>Responsibility: Moves Entities according to their velocity.</p> <pre><code>class MovementProcessor(esper.Processor):\n    def process(self, dt=0.016):\n        for ent, (pos, vel) in esper.get_components(PositionComponent, VelocityComponent):\n            # Apply movement\n            pos.x += vel.currentSpeed * dt * math.cos(pos.direction)\n            pos.y += vel.currentSpeed * dt * math.sin(pos.direction)\n</code></pre> <p>Components Required: - <code>PositionComponent</code> - <code>VelocityComponent</code></p>"},{"location":"en/dev/02-systeme/modules/processors/#playercontrolprocessor","title":"PlayerControlProcessor","text":"<p>File: <code>src/Processors/playerControlProcessor.py</code></p> <p>Responsibility: Handles player controls and special abilities.</p> <p>Controls handled: - Right click: Unit selection - Space: Special ability activation - B: Shop opening - F3: Debug toggle - T: Team change (debug)</p> <p>Special abilities handled: - <code>SpeArchitect</code>: Reload boost for allies - <code>SpeScout</code>: Temporary invincibility - <code>SpeMaraudeur</code>: Mana shield - <code>SpeLeviathan</code>: Second projectile salvo - <code>SpeBreaker</code>: Powerful strike</p>"},{"location":"en/dev/02-systeme/modules/processors/#capacitiesspecialesprocessor","title":"CapacitiesSpecialesProcessor","text":"<p>File: <code>src/Processors/CapacitiesSpecialesProcessor.py</code></p> <p>Responsibility: Updates cooldowns and effects of special abilities.</p> <pre><code>def process(self, dt=0.016):\n    # Update timers of all abilities\n    for ent, spe_comp in esper.get_component(SpeArchitect):\n        spe_comp.update(dt)\n\n    for ent, spe_comp in esper.get_component(SpeScout):\n        spe_comp.update(dt)\n    # ... other abilities\n</code></pre>"},{"location":"en/dev/02-systeme/modules/processors/#lifetimeprocessor","title":"LifetimeProcessor","text":"<p>File: <code>src/Processors/lifetimeProcessor.py</code></p> <p>Responsibility: Removes temporary Entities (projectiles, effects).</p> <pre><code>def process(self, dt=0.016):\n    for ent, lifetime in esper.get_component(LifetimeComponent):\n        lifetime.duration -= dt\n        if lifetime.duration &lt;= 0:\n            esper.delete_entity(ent)\n</code></pre>"},{"location":"en/dev/02-systeme/modules/processors/#towerprocessor","title":"TowerProcessor","text":"<p>File: <code>src/Processors/towerProcessor.py</code></p> <p>Responsibility: Handles automatic logic of towers (target detection, attack, heal).</p> <p>\ud83d\udcd6 Complete documentation: See Tower System for all details.</p> <p>Components used: - <code>TowerComponent</code>: Base data (type, range, cooldown) - <code>DefenseTowerComponent</code>: Attack properties - <code>HealTowerComponent</code>: Heal properties - <code>PositionComponent</code>: Tower position - <code>TeamComponent</code>: Tower team</p> <p>Features:</p> <ol> <li>Cooldown management: Decrements timer between each action</li> <li>Target detection:</li> <li>Defense towers: Search for enemies in range</li> <li>Heal towers: Search for wounded allies in range</li> <li>Automatic actions:</li> <li>Defense towers: Create projectile towards target</li> <li>Heal towers: Apply healing to target</li> </ol> <pre><code>def process(self, dt: float):\n    for entity, (tower, pos, team) in esper.get_components(\n        TowerComponent, PositionComponent, TeamComponent\n    ):\n        # Update cooldown\n        if tower.current_cooldown &gt; 0:\n            tower.current_cooldown -= dt\n            continue\n\n        # Target search\n        target = self._find_target(entity, tower, pos, team)\n\n        # Action according to tower type\n        if target:\n            if tower.tower_type == \"defense\":\n                self._attack_target(entity, target, pos)\n            elif tower.tower_type == \"heal\":\n                self._heal_target(entity, target)\n\n            tower.current_cooldown = tower.cooldown\n</code></pre> <p>Tower creation: Via <code>buildingFactory.create_defense_tower()</code> or <code>create_heal_tower()</code>.</p>"},{"location":"en/dev/02-systeme/modules/processors/#renderingprocessor","title":"RenderingProcessor","text":"<p>File: <code>src/Processors/renderingProcessor.py</code></p> <p>Responsibility: Displays all Entity sprites on screen.</p> <p>Features: - World \u2192 Screen coordinate conversion via Camera - Scaling according to zoom - Sprite rotation according to direction - Health bars for damaged units - Visual effects management (invincibility, etc.)</p> <pre><code>def process(self):\n    for ent, (pos, sprite) in esper.get_components(PositionComponent, SpriteComponent):\n        # Screen position calculation\n        screen_x, screen_y = self.camera.world_to_screen(pos.x, pos.y)\n\n        # Sprite display with rotation\n        rotated_image = pygame.transform.rotate(image, -pos.direction * 180 / math.pi)\n        self.screen.blit(rotated_image, (screen_x, screen_y))\n</code></pre>"},{"location":"en/dev/02-systeme/modules/processors/#execution-order","title":"Execution Order","text":"<p>Processors execute according to their priority (smaller = higher priority):</p> <ol> <li>CollisionProcessor (priority 2) - Detects collisions</li> <li>MovementProcessor (priority 3) - Applies movements  </li> <li>PlayerControlProcessor (priority 4) - Processes inputs</li> <li>CapacitiesSpecialesProcessor (priority 5) - Updates abilities</li> <li>LifetimeProcessor (priority 10) - Cleans expired Entities</li> </ol> <p>The <code>RenderingProcessor</code> is called separately in the rendering loop.</p>"},{"location":"en/dev/02-systeme/modules/processors/#events","title":"Events","text":"<p>Processors communicate via esper's Event System:</p> Event Emitter Receiver Data <code>entities_hit</code> CollisionProcessor functions.handleHealth entity1, entity2 <code>attack_event</code> PlayerControlProcessor functions.createProjectile attacker, target <code>special_vine_event</code> PlayerControlProcessor functions.createProjectile caster <code>flying_chest_collision</code> CollisionProcessor FlyingChestManager entity, chest"},{"location":"en/dev/02-systeme/modules/processors/#adding-a-new-processor","title":"Adding a new processor","text":"<ol> <li>Create the class inheriting from <code>esper.Processor</code></li> <li>Implement <code>process(self, dt=0.016)</code></li> <li>Add in <code>GameEngine._initialize_ecs()</code></li> <li>Define the appropriate priority</li> </ol> <pre><code># Example of new processor\nclass ExampleProcessor(esper.Processor):\n    def process(self, dt=0.016):\n        for ent, (comp1, comp2) in esper.get_components(Component1, Component2):\n            # Processor logic...\n            pass\n\n# In GameEngine._initialize_ecs()\nself.example_processor = ExampleProcessor()\nes.add_processor(self.example_processor, priority=6)\n</code></pre>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/","title":"Special Ability System","text":"<p>The special ability system allows units to have unique activatable powers with cooldowns. Each unit type has its own special ability implemented via <code>Spe*</code> components.</p>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#overview","title":"Overview","text":""},{"location":"en/dev/02-systeme/modules/special-capacity-system/#ability-architecture","title":"Ability Architecture","text":"<pre><code>src/components/special/\n\u251c\u2500\u2500 speScoutComponent.py      # Temporary invincibility\n\u251c\u2500\u2500 speMaraudeurComponent.py  # Damage reduction shield\n\u251c\u2500\u2500 speLeviathanComponent.py  # Double attack\n\u251c\u2500\u2500 speDruidComponent.py      # Immobilizing vines\n\u251c\u2500\u2500 speArchitectComponent.py  # Ally reload boost\n\u251c\u2500\u2500 isVinedComponent.py       # Immobilization effect\n\u2514\u2500\u2500 VineComponent.py          # Visual component for vines\n</code></pre>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#common-interface","title":"Common Interface","text":"<p>All special abilities share a standard API:</p> <pre><code>class SpeCapacity:\n    def can_activate(self) -&gt; bool:\n\"\"\"Checks if the ability can be activated.\"\"\"\n\n    def activate(self) -&gt; bool:\n\"\"\"Activates the ability if possible.\"\"\"\n\n    def update(self, dt: float) -&gt; None:\n\"\"\"Updates the ability's timers.\"\"\"\n</code></pre>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#abilities-by-unit","title":"Abilities by Unit","text":""},{"location":"en/dev/02-systeme/modules/special-capacity-system/#spescout-invincibility-zasper","title":"SpeScout - Invincibility (Zasper)","text":"<p>File: <code>src/components/special/speScoutComponent.py</code></p> <p>Effect: Temporary invincibility to dodge attacks and mines.</p> <pre><code>@component\nclass SpeScout:\n    def __init__(self):\n        self.is_active: bool = False                    # Activation state\n        self.duration: float = ZASPER_INVINCIBILITY_DURATION  # 3 seconds\n        self.timer: float = 0.0                         # Remaining time\n        self.cooldown: float = SPECIAL_ABILITY_COOLDOWN # Standard cooldown\n        self.cooldown_timer: float = 0.0                # Cooldown timer\n</code></pre> <p>Specific Methods: - <code>is_invincible() -&gt; bool</code>: Returns the invincibility state.</p> <p>Integrations: - <code>CollisionProcessor</code> checks <code>is_invincible()</code> before applying damage. - <code>processHealth</code> ignores damage if the unit is invincible.</p>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#spemaraudeur-mana-shield-barhamusmarauder","title":"SpeMaraudeur - Mana Shield (Barhamus/Marauder)","text":"<p>File: <code>src/components/special/speMaraudeurComponent.py</code></p> <p>Effect: Reduces incoming damage for a set duration.</p> <pre><code>@component\nclass SpeMaraudeur:\n    def __init__(self):\n        self.is_active: bool = False\n        self.reduction_min: float = MARAUDEUR_SHIELD_REDUCTION_MIN\n        self.reduction_max: float = MARAUDEUR_SHIELD_REDUCTION_MAX  \n        self.reduction_value: float = 0.0               # Reduction percentage\n        self.duration: float = MARAUDEUR_SHIELD_DURATION\n        self.timer: float = 0.0\n        self.cooldown: float = SPECIAL_ABILITY_COOLDOWN\n        self.cooldown_timer: float = 0.0\n</code></pre> <p>Specific Methods: - <code>apply_damage_reduction(damage: float) -&gt; float</code>: Applies the reduction. - <code>is_shielded() -&gt; bool</code>: Checks the shield's state.</p> <p>Configurable Parameters: - Customizable reduction between <code>reduction_min</code> and <code>reduction_max</code>. - Optional duration upon activation.</p>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#spearchitect-reload-boost-architect","title":"SpeArchitect - Reload Boost (Architect)","text":"<p>File: <code>src/components/special/speArchitectComponent.py</code></p> <p>Effect: Speeds up the reload of allied units within a radius.</p> <pre><code>@component\nclass SpeArchitect:\n    def __init__(self):\n        self.is_active: bool = False\n        self.available: bool = True                     # Availability\n        self.radius: float = 0.0                        # Effect radius\n        self.reload_factor: float = 0.0                 # Division factor\n        self.affected_units: List[int] = []             # Affected units\n        self.duration: float = 0.0                      # Duration (0 = permanent)\n        self.timer: float = 0.0\n</code></pre> <p>Activation with Targets: <pre><code>def activate(self, affected_units: List[int], duration: float = 0.0):\n\"\"\"Activates the boost on the specified units.\"\"\"\n</code></pre></p> <p>How it works: - Finds allied units within the radius. - Applies a reload boost (divides cooldowns). - Can be permanent (<code>duration=0</code>) or temporary.</p>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#spedruid-immobilizing-vines-druid","title":"SpeDruid - Immobilizing Vines (Druid)","text":"<p>File: <code>src/components/special/speDruidComponent.py</code></p> <p>Effect: Launches a projectile that immobilizes the target with vines.</p> <p>Associated Components: - <code>VineComponent</code>: Visual for the vines. - <code>isVinedComponent</code>: Immobilization effect on the target.</p> <p>Mechanism: 1. Activation launches a special projectile. 2. On impact, adds <code>isVinedComponent</code> to the target. 3. The target is immobilized for the duration. 4. Visual effect with <code>VineComponent</code>.</p>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#speleviathan-double-attack-draupnirleviathan","title":"SpeLeviathan - Double Attack (Draupnir/Leviathan)","text":"<p>File: <code>src/components/special/speLeviathanComponent.py</code></p> <p>Effect: Triggers a second attack immediately after the first.</p> <p>Mechanism: - Activation flag (<code>is_active = True</code>). - During an attack, checks the flag. - If active, triggers a second volley instantly. - Consumes the flag (<code>is_active = False</code>).</p>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#configuration-constants","title":"Configuration Constants","text":""},{"location":"en/dev/02-systeme/modules/special-capacity-system/#file-srcconstantsgameplaypy","title":"File: <code>src/constants/gameplay.py</code>","text":"<pre><code># Universal Cooldowns\nSPECIAL_ABILITY_COOLDOWN = 15.0         # Standard cooldown (15 seconds)\n\n# SpeScout (Zasper)\nZASPER_INVINCIBILITY_DURATION = 3.0     # Invincibility duration\n\n# SpeMaraudeur (Barhamus/Marauder)  \nMARAUDEUR_SHIELD_REDUCTION_MIN = 0.2    # 20% minimum reduction\nMARAUDEUR_SHIELD_REDUCTION_MAX = 0.5    # 50% maximum reduction\nMARAUDEUR_SHIELD_DURATION = 8.0         # Shield duration\n\n# Other abilities...\n</code></pre>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#system-integration","title":"System Integration","text":""},{"location":"en/dev/02-systeme/modules/special-capacity-system/#capacitiesspecialesprocessor","title":"CapacitiesSpecialesProcessor","text":"<p>Responsibility: Updates timers and manages special effects.</p> <pre><code>def process(self):\n\"\"\"Updates all active special abilities.\"\"\"\n\n    # Update timers for each ability type\n    for entity, spe_scout in esper.get_components(SpeScout):\n        spe_scout.update(dt)\n\n    for entity, spe_maraudeur in esper.get_components(SpeMaraudeur):\n        spe_maraudeur.update(dt)\n\n    # Manage temporary effects (vines, etc.)\n    self._process_vine_effects()\n</code></pre>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#ui-integration-actionbar","title":"UI Integration - ActionBar","text":"<p>Displaying Cooldowns:</p> <pre><code>def _draw_special_ability_button(self, surface):\n\"\"\"Draws the special ability button with cooldown.\"\"\"\n\n    if self.selected_unit.has_special:\n        # Get the ability component\n        if esper.has_component(entity, SpeScout):\n            scout = esper.component_for_entity(entity, SpeScout)\n            cooldown_ratio = scout.cooldown_timer / scout.cooldown\n\n        # Draw the button with a cooldown overlay\n        if cooldown_ratio &gt; 0:\n            self._draw_cooldown_overlay(surface, cooldown_ratio)\n</code></pre>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#damage-integration","title":"Damage Integration","text":"<p>In <code>processHealth</code>:</p> <pre><code>def apply_damage(entity, damage):\n\"\"\"Applies damage, taking abilities into account.\"\"\"\n\n    # Check for invincibility (SpeScout)\n    if esper.has_component(entity, SpeScout):\n        scout = esper.component_for_entity(entity, SpeScout)\n        if scout.is_invincible():\n            return  # Ignore damage\n\n    # Apply reduction (SpeMaraudeur)\n    if esper.has_component(entity, SpeMaraudeur):\n        maraudeur = esper.component_for_entity(entity, SpeMaraudeur)\n        if maraudeur.is_shielded():\n            damage = maraudeur.apply_damage_reduction(damage)\n\n    # Apply final damage\n    health.currentHealth -= damage\n</code></pre>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#best-practices","title":"Best Practices","text":""},{"location":"en/dev/02-systeme/modules/special-capacity-system/#recommendations","title":"\u2705 Recommendations","text":"<ul> <li>Unified Interface: All abilities implement <code>can_activate()</code>, <code>activate()</code>, <code>update()</code>.</li> <li>Defensive Management: Check <code>esper.has_component()</code> before accessing abilities.</li> <li>Separation of Concerns: Data in components, logic in processors.</li> <li>Centralized Configuration: Constants in <code>gameplay.py</code> for easy balancing.</li> <li>Exhaustive Tests: Cover activation, duration, expiration, and interactions.</li> </ul>"},{"location":"en/dev/02-systeme/modules/special-capacity-system/#what-to-avoid","title":"\u274c What to Avoid","text":"<ul> <li>Complex business logic in components.</li> <li>Direct modification of timers from outside.</li> <li>Forgetting to check cooldowns before activation.</li> <li>Inconsistent states (<code>is_active=True</code> but <code>timer=0</code>).</li> </ul>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#overview-ofensemble","title":"Overview of'ensemble","text":"<p>Le Sprite Manager est un System centralis\u00e9 de Management des sprites qui remplace l'Usage directe des chemins de Files par un System bas\u00e9 sur des IDs. Il am\u00e9liore les performances gr\u00e2ce \u00e0 la mise en cache et simplifie la maintenance du code.</p>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#spriteid-enumeration","title":"SpriteID (\u00c9num\u00e9ration)","text":"<pre><code>class SpriteID(Enum):\n    # Units alli\u00e9es\n    ALLY_SCOUT = \"ally_scout\"\n    ALLY_MARAUDEUR = \"ally_maraudeur\"\n    # Units ennemies  \n    ENEMY_SCOUT = \"enemy_scout\"\n    # Projectiles\n    PROJECTILE_BULLET = \"ball\"\n    # Effects\n    EXPLOSION = \"explosion\"\n    # Buildings, Events, UI...\n</code></pre>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#spritedata-classe-de-data","title":"SpriteData (Classe de Data)","text":"<pre><code>class SpriteData:\n    def __init__(self, sprite_id: SpriteID, file_path: str, \n                 default_width: int, default_height: int, Description: str):\n        # Data de Configuration pour chaque sprite\n</code></pre>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#spritemanager-manager-main","title":"SpriteManager (Manager Main)","text":"<pre><code>class SpriteManager:\n    def __init__(self):\n        self._sprites_registry: Dict[SpriteID, SpriteData] = {}\n        self._loaded_images: Dict[SpriteID, pygame.Surface] = {}\n</code></pre>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#features-main","title":"Features Main","text":""},{"location":"en/dev/02-systeme/modules/sprite-manager/#1-enregistrement-centralise","title":"1. Enregistrement centralis\u00e9","text":"<ul> <li>Tous les sprites sont enregistr\u00e9s dans un registre unique</li> <li>Chaque sprite a un ID, un chemin, des dimensions by default et une Description</li> <li>Support de multiples cat\u00e9gories : units, projectiles, Effects, buildings, Events, UI</li> </ul>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#3-creation-de-components","title":"3. Creation de Components","text":"<pre><code># Creation directe de SpriteComponent\ncomponent = sprite_manager.create_sprite_component(\n    SpriteID.ALLY_SCOUT, \n    width=100, \n    height=120\n)\n</code></pre>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#4-utilitaires-de-haut-niveau","title":"4. Utilitaires de haut niveau","text":"<p>Le module <code>sprite_utils.py</code> fournit des Functions de convenance :</p> <pre><code># Creation de sprites d'units\nsprite = create_unit_sprite_component(UnitType.SCOUT, is_enemy=False)\n\n# Creation de sprites de projectiles\nsprite = create_projectile_sprite_component(\"explosion\", 32, 32)\n\n# Creation de sprites d'Events\nsprite = create_event_sprite_component(\"kraken\", 200, 200)\n\n# Creation de sprites de buildings\nsprite = create_building_sprite_component(\"attack_tower\", 80, 120)\n</code></pre>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#avant-ancien-system","title":"Avant (ancien System)","text":"<pre><code># Usage directe des chemins\nsprite = SpriteComponent(\"assets/sprites/units/ally/Scout.png\", 80.0, 100.0)\n</code></pre>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#apres-nouveau-system","title":"Apr\u00e8s (nouveau System)","text":"<pre><code># Usage du System centralis\u00e9\nsprite = create_unit_sprite_component(UnitType.SCOUT, is_enemy=False)\n</code></pre>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#initialization","title":"Initialization","text":"<p>Le System s'initialise Automatically au d\u00e9marrage du jeu :</p> <pre><code># Dans game.py\nfrom src.initialization.sprite_init import initialize_sprite_system\n\ndef _initialize_game_map(self):\n    # ... Initialization de la carte ...\n    initialize_sprite_system()  # Pr\u00e9charge les sprites communs\n</code></pre>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#avantages","title":"Avantages","text":"<ol> <li>Performance : Mise en cache des images, pr\u00e9chargement possible</li> <li>Maintenabilit\u00e9 : Centralisation des r\u00e9f\u00e9rences de sprites</li> <li>Flexibilit\u00e9 : Dimensions personnalisables, fallbacks automatiques</li> <li>Debugging : Logging d\u00e9taill\u00e9, informations sur les sprites</li> <li>Robustesse : Management d'erreur int\u00e9gr\u00e9e, validation des Files</li> </ol>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#categories-de-sprites-supportees","title":"Cat\u00e9gories de sprites support\u00e9es","text":"<ul> <li>Units : Alli\u00e9es et ennemies (Scout, Maraudeur, L\u00e9viathan, Druide, Architecte, etc.)</li> <li>Projectiles : Balles, boulets de canon, fl\u00e8ches</li> <li>Effects : Explosions, impacts, Effects special</li> <li>Buildings : Tours d'attack, tours de heal, constructions</li> <li>Events : Coffres, Kraken, navires pirates, temp\u00eates  </li> <li>Interface : Ic\u00f4nes, boutons, \u00e9l\u00e9ments UI</li> <li>Terrain : Eau, \u00eeles, nuages (pr\u00e9vu pour extension future)</li> </ul>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#exemple-dusage-complete","title":"Exemple d'Usage compl\u00e8te","text":"<pre><code># 1. Obtenir le Manager global\nfrom src.managers.sprite_manager import sprite_manager\n\n# 2. Cr\u00e9er un composant sprite pour une unit\u00e9\nsprite_component = create_unit_sprite_component(\n    UnitType.SCOUT, \n    is_enemy=False, \n    width=90, \n    height=110\n)\n\n# 3. Ajouter le composant \u00e0 une entity\nif sprite_component:\n    esper.add_component(entity, sprite_component)\n\n# 4. Le Rendering se fait Automatically via le System existant\n</code></pre>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#structure-des-files","title":"Structure des Files","text":"<pre><code>src/\n\u251c\u2500\u2500 managers/\n\u2502   \u2514\u2500\u2500 sprite_manager.py          # Manager Main et \u00e9num\u00e9ration SpriteID\n\u251c\u2500\u2500 utils/\n\u2502   \u2514\u2500\u2500 sprite_utils.py            # Functions utilitaires de convenance\n\u251c\u2500\u2500 initialization/\n\u2502   \u2514\u2500\u2500 sprite_init.py             # Initialization et pr\u00e9chargement\n\u2514\u2500\u2500 components/properties/\n    \u2514\u2500\u2500 spriteComponent.py         # Composant sprite (inchang\u00e9)\n</code></pre>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#migration-depuis-lancien-system","title":"Migration depuis l'ancien System","text":""},{"location":"en/dev/02-systeme/modules/sprite-manager/#etapes-de-migration","title":"\u00c9tapes de migration","text":"<ol> <li>Identifier les sprites : R\u00e9pertorier tous les chemins de sprites utilis\u00e9s</li> <li>Ajouter aux \u00e9num\u00e9rations : Cr\u00e9er des IDs dans <code>SpriteID</code> </li> <li>Enregistrer les sprites : Ajouter les <code>SpriteData</code> dans le registre</li> <li>Remplacer les appels : Utiliser les Functions utilitaires</li> <li>Tester : V\u00e9rifier que tous les sprites s'affichent correctement</li> </ol>"},{"location":"en/dev/02-systeme/modules/sprite-manager/#checklist-de-migration-par-fichier","title":"Checklist de migration par fichier","text":"<ul> <li>[x] <code>unitFactory.py</code> - Migration vers <code>create_unit_sprite_component()</code></li> <li>[x] <code>projectileCreator.py</code> - Migration vers <code>create_projectile_sprite_component()</code></li> <li>[x] <code>game.py</code> - Int\u00e9gration de l'Initialization sprite</li> <li>[ ] Autres cr\u00e9ateurs d'Entities (si existants)</li> </ul>"},{"location":"en/dev/02-systeme/modules/vision-system/","title":"Vision System and Fog of War","text":""},{"location":"en/dev/02-systeme/modules/vision-system/#overview","title":"Overview","text":"<p>The Vision System manages unit visibility and applies an immersive, Civilization-inspired fog of war. It controls which parts of the map are visible to each team and renders unexplored areas with varied cloud sprites.</p>"},{"location":"en/dev/02-systeme/modules/vision-system/#visionsystem-main-class","title":"VisionSystem (Main Class)","text":"<pre><code>class VisionSystem:\n    def __init__(self):\n        self.visible_tiles: dict[int, Set[Tuple[int, int]]] = {}  # Per team\n        self.explored_tiles: dict[int, Set[Tuple[int, int]]] = {}  # Per team\n        self.current_team = 1  # Current team\n        self.cloud_image = None  # Dynamically loaded cloud image\n</code></pre>"},{"location":"en/dev/02-systeme/modules/vision-system/#visibility-states","title":"Visibility States","text":"<ul> <li>Visible: Tiles currently within the line of sight of the team's units.</li> <li>Explored: Tiles that have been seen at least once (persistent).</li> <li>Undiscovered: Tiles never seen, covered by clouds.</li> </ul>"},{"location":"en/dev/02-systeme/modules/vision-system/#main-features","title":"Main Features","text":""},{"location":"en/dev/02-systeme/modules/vision-system/#1-multi-team-management","title":"1. Multi-Team Management","text":"<ul> <li>Each team maintains its own sets of visible and explored tiles.</li> <li>Automatically switches when the team is changed in the UI.</li> <li>Complete separation of visibility data.</li> </ul>"},{"location":"en/dev/02-systeme/modules/vision-system/#2-visibility-calculation","title":"2. Visibility Calculation","text":"<pre><code>def update_visibility(self, current_team: Optional[int] = None):\n\"\"\"Updates the visible areas for the current team.\"\"\"\n    # Iterates through all units of the team with VisionComponent\n    # Calculates tiles within their vision range\n    # Updates visible_tiles and explored_tiles\n</code></pre>"},{"location":"en/dev/02-systeme/modules/vision-system/#3-fog-rendering","title":"3. Fog Rendering","text":""},{"location":"en/dev/02-systeme/modules/vision-system/#clouds-for-undiscovered-areas","title":"Clouds for Undiscovered Areas","text":"<ul> <li>Cloud sprites are 2x larger than tiles.</li> <li>Centered on each tile for a natural overlapping effect.</li> <li>Varied cutouts from the source image for more diversity.</li> <li>Alpha blending at 160 for optimal transparency.</li> </ul>"},{"location":"en/dev/02-systeme/modules/vision-system/#light-fog-for-explored-areas","title":"Light Fog for Explored Areas","text":"<ul> <li>Semi-transparent black color (alpha 40).</li> <li>Applied to tiles already seen but currently out of range.</li> </ul>"},{"location":"en/dev/02-systeme/modules/vision-system/#4-performance-optimizations","title":"4. Performance Optimizations","text":"<ul> <li>Lazy loading of the cloud image (after Pygame initialization).</li> <li>Use of <code>SpriteManager</code> for centralized asset management.</li> <li>Deterministic calculation of cutouts to avoid costly random calculations.</li> </ul>"},{"location":"en/dev/02-systeme/modules/vision-system/#associated-components","title":"Associated Components","text":""},{"location":"en/dev/02-systeme/modules/vision-system/#visioncomponent","title":"VisionComponent","text":"<pre><code>@dataclass\nclass VisionComponent:\n    range: float  # Vision range in grid units\n</code></pre> <ul> <li>Attached to all units and buildings.</li> <li>Values defined in <code>constants/gameplay.py</code>.</li> <li>Typical ranges: 4-8 grid units depending on the unit type.</li> </ul>"},{"location":"en/dev/02-systeme/modules/vision-system/#integration-into-rendering","title":"Integration into Rendering","text":"<p>The system integrates into <code>GameRenderer._render_fog_of_war()</code>:</p> <pre><code>def _render_fog_of_war(self, window, camera):\n    vision_system.update_visibility(current_team)\n    fog_rects = vision_system.get_visibility_overlay(camera)\n    # Render fog rectangles\n</code></pre>"},{"location":"en/dev/02-systeme/modules/vision-system/#configuration-constants","title":"Configuration Constants","text":"<pre><code># In constants/gameplay.py\nBASE_VISION_RANGE = 8.0      # Vision of bases\nUNIT_VISION_SCOUT = 6.0      # Vision of scouts\nUNIT_VISION_MARAUDER = 5.0  # Vision of marauders\n# ... other units\n</code></pre>"},{"location":"en/dev/02-systeme/modules/vision-system/#user-interface","title":"User Interface","text":""},{"location":"en/dev/02-systeme/modules/vision-system/#vision-circle","title":"Vision Circle","text":"<ul> <li>White circle displayed only around the selected unit.</li> <li>Diameter proportional to the vision range.</li> <li>Configurable thickness (2 pixels by default).</li> </ul>"},{"location":"en/dev/02-systeme/modules/vision-system/#controls","title":"Controls","text":"<ul> <li>Team change: Automatically updates visibility.</li> <li>Unit selection: Displays the corresponding vision circle.</li> </ul>"},{"location":"en/dev/02-systeme/modules/vision-system/#optimizations-and-performance","title":"Optimizations and Performance","text":""},{"location":"en/dev/02-systeme/modules/vision-system/#memory-management","title":"Memory Management","text":"<ul> <li>Images cached by the <code>SpriteManager</code>.</li> <li>Cutouts created on demand and not stored.</li> <li>Tile sets per team to avoid conflicts.</li> </ul>"},{"location":"en/dev/02-systeme/modules/vision-system/#rendering-performance","title":"Rendering Performance","text":"<ul> <li>One sprite per non-visible tile (optimized for modern GPUs).</li> <li>Visibility calculation only on team changes.</li> <li>Automatic clipping of off-screen sprites.</li> </ul>"},{"location":"en/dev/02-systeme/modules/vision-system/#future-evolutions","title":"Future Evolutions","text":"<ul> <li>Cloud animation for more immersion.</li> <li>Particle effects for visibility transitions.</li> <li>More sophisticated line-of-sight.</li> <li>Dynamic fog reacting to events.</li> </ul>"},{"location":"en/dev/03-installation/requirements/","title":"Configuration Development","text":""},{"location":"en/dev/03-installation/requirements/#what-you-need-to-develop-galad-islands","title":"What you need to develop Galad Islands","text":""},{"location":"en/dev/03-installation/requirements/#minimum-prerequisites","title":"Minimum Prerequisites","text":"<ul> <li>Python 3.9+ </li> <li>2 GB RAM Minimum (4 GB recommended)</li> <li>500 MB disk space</li> </ul>"},{"location":"en/dev/03-installation/requirements/#quick-installation","title":"Quick Installation","text":""},{"location":"en/dev/03-installation/requirements/#windows","title":"Windows","text":"<ul> <li>Install Python 3.9+ from python.org</li> </ul>"},{"location":"en/dev/03-installation/requirements/#project-setup","title":"Project Setup","text":"<pre><code># Clone the Project\ngit clone https://github.com/Fydyr/Galad-Islands.git\ncd Galad-Islands\n\n# Create Virtual Environment\npython3 -m venv venv\nsource venv/bin/activate  # Linux/macOS\n# or venv\\Scripts\\activate  # Windows\n\n# Install Dependencies\npip install -r requirements.txt\n# Install Development Dependencies\npip install -r requirements-dev.txt\n\n# Launch the game\npython main.py\n</code></pre>"},{"location":"en/dev/03-installation/requirements/#main-python-dependencies","title":"Main Python Dependencies","text":"<pre><code># requirements.txt (Production version)\nesper==3.4\nllvmlite==0.44.0\nnumba==0.61.2\nnumpy==2.2.6\npygame==2.6.1\nPillow==10.4.0\ntomli==1.2.0\n\n# requirements-dev.txt (Development)\nmarkdown==3.9.0\ntkhtmlview==0.3.1\ncommitizen==4.9.1\nmkdocs==1.5.2\nmkdocs-material==9.1.15\nmkdocs-static-i18n==1.2.3\n</code></pre>"},{"location":"en/dev/03-installation/requirements/#verify-everything-works","title":"Verify everything works","text":"<pre><code>python -c \"import pygame, esper; print('\u2705 Setup OK')\"\n</code></pre> <p>That's it! If it works, you can develop.</p>"},{"location":"en/dev/04-configuration/configuration/","title":"Project Configuration","text":""},{"location":"en/dev/04-configuration/configuration/#creating-a-virtual-environment","title":"Creating a Virtual Environment","text":"<p>A Virtual Environment allows running a program with specific dependencies and their precise versions, regardless of those already installed on the system. This prevents any incompatibility issues.</p> <p><code>cd path/to/folder</code> <code>bash python -m venv myenv</code> 'myenv' is the name of the file containing the Virtual Environment. (venv) is now shown in the command prompt</p> <p>To activate the venv, there are several methods depending on the command prompt used.</p> <ul> <li> <p>Windows (Command Prompt) <code>myenv\\Scripts\\activate.bat</code></p> </li> <li> <p>Windows (PowerShell) <code>.\\myenv\\Scripts\\Activate.ps1</code></p> </li> <li> <p>macOS/Linux (Bash) <code>source myenv/bin/activate</code></p> </li> </ul> <p>To exit the Virtual Environment and return to the base command prompt, simply enter <code>exit</code></p>"},{"location":"en/dev/04-configuration/configuration/#dependencies-file","title":"Dependencies File","text":"<p>The requirements.txt file contains all the dependencies necessary for the proper functioning of the game. To install them, simply enter this command in the command prompt at the root location of the game: <code>cd path/to/folder</code> <code>pip install -r requirements.txt</code></p>"},{"location":"en/dev/04-configuration/configuration/#game-configuration","title":"Game Configuration","text":""},{"location":"en/dev/04-configuration/configuration/#configuration-file","title":"Configuration File","text":"<p>The game uses a <code>galad_config.json</code> file to store user preferences:</p> <pre><code>{\n\"language\": \"french\",\n\"fullscreen\": false,\n\"resolution\": [1280, 720],\n\"volume\": 0.7,\n\"dev_mode\": false\n}\n</code></pre>"},{"location":"en/dev/04-configuration/configuration/#developer-mode","title":"Developer Mode","text":"<p>The <code>dev_mode</code> parameter controls the activation of debug and development features.</p> <p>\ud83d\udcd6 Complete documentation: See Debug Mode for all details on developer mode.</p> <p>Activation:</p> <ul> <li>Change <code>\"dev_mode\": false</code> to <code>\"dev_mode\": true</code> in <code>galad_config.json</code></li> <li>Restart the game</li> </ul> <p>Enabled Features:</p> <ul> <li>Debug button in the ActionBar</li> <li>Cheat modal (gold, heal, spawn)</li> <li>Additional development logs</li> </ul>"},{"location":"en/dev/04-configuration/configuration/#configmanager","title":"ConfigManager","text":"<p>File: <code>src/managers/config_manager.py</code></p> <p>Centralized Configuration Manager to read and modify parameters:</p> <pre><code>from src.managers.config_manager import ConfigManager\n\n# Reading\ncfg = ConfigManager()\ndev_mode = cfg.get('dev_mode', False)\nlanguage = cfg.get('language', 'french')\n\n# Writing\ncfg.set('volume', 0.8)\ncfg.save()\n</code></pre>"},{"location":"en/dev/04-configuration/debug-mode/","title":"Debug / Developer Mode","text":""},{"location":"en/dev/04-configuration/debug-mode/#overview","title":"Overview","text":"<p>The debug mode (or developer mode) is a system that enables development and debugging features in Galad Islands. It is controlled by the <code>dev_mode</code> parameter in the game's configuration.</p>"},{"location":"en/dev/04-configuration/debug-mode/#activating-debug-mode","title":"Activating Debug Mode","text":"<p>Configuration file: <code>galad_config.json</code> or user configuration</p> <pre><code>{\n\"language\": \"english\",\n\"fullscreen\": false,\n\"resolution\": [1280, 720],\n\"volume\": 0.7,\n\"dev_mode\": true,  // \u2190 Enable developer mode\n// ... other settings\n}\n</code></pre>"},{"location":"en/dev/04-configuration/debug-mode/#default-value","title":"Default Value","text":"<p>File: <code>src/settings/settings.py</code></p> <pre><code>DEFAULT_CONFIG = {\n    \"language\": \"french\",\n    \"fullscreen\": False,\n    \"resolution\": [1280, 720],\n    \"volume\": 0.7,\n    \"dev_mode\": False,  // Disabled by default in production\n    # ... other settings\n}\n</code></pre> <p>Important: Debug mode is disabled by default to prevent players from accessing cheat features.</p>"},{"location":"en/dev/04-configuration/debug-mode/#features-enabled-in-debug-mode","title":"Features Enabled in Debug Mode","text":""},{"location":"en/dev/04-configuration/debug-mode/#1-debug-button-in-the-actionbar","title":"1. \"Debug\" Button in the ActionBar","text":"<p>File: <code>src/ui/action_bar.py</code></p> <p>The debug button appears in the global action bar only if <code>dev_mode</code> is enabled.</p>"},{"location":"en/dev/04-configuration/debug-mode/#conditional-button-creation","title":"Conditional Button Creation","text":"<pre><code>def _initialize_buttons(self):\n\"\"\"Initializes the action bar buttons.\"\"\"\n    # ... other buttons\n\n    global_buttons = [\n        ActionButton(...),  // Other global buttons\n    ]\n\n    # Check if debug mode or dev_mode is enabled\n    if ConfigManager().get('dev_mode', False):\n        global_buttons.append(\n            ActionButton(\n                action_type=ActionType.DEV_GIVE_GOLD,\n                text=t(\"actionbar.debug_menu\"),\n                cost=0,\n                hotkey=\"\",\n                tooltip=t(\"debug.modal.title\"),\n                is_global=True,\n                callback=self._toggle_debug_menu\n            )\n        )\n</code></pre>"},{"location":"en/dev/04-configuration/debug-mode/#dynamic-visibility","title":"Dynamic Visibility","text":"<p>The button also checks the <code>show_debug</code> flag of the game engine:</p> <pre><code>def _update_button_positions(self):\n\"\"\"Updates button positions and visibility.\"\"\"\n    # ... button positioning\n\n    cfg = ConfigManager()\n    dev_mode = cfg.get('dev_mode', False)\n\n    for btn in global_buttons:\n        if btn.action_type == ActionType.DEV_GIVE_GOLD:\n            # Visible if dev_mode OR if the engine is in debug mode\n            is_debug = hasattr(self, 'game_engine') and \\\n                       self.game_engine and \\\n                       getattr(self.game_engine, 'show_debug', False)\n            btn.visible = bool(dev_mode or is_debug)\n</code></pre> <p>Result:</p> <ul> <li>\u2705 <code>dev_mode: true</code> \u2192 Button visible</li> <li>\u274c <code>dev_mode: false</code> \u2192 Button hidden</li> </ul>"},{"location":"en/dev/04-configuration/debug-mode/#2-debug-modal","title":"2. Debug Modal","text":"<p>File: <code>src/ui/debug_modal.py</code></p> <p>When the debug button is clicked, a modal opens with several options:</p>"},{"location":"en/dev/04-configuration/debug-mode/#modal-features","title":"Modal Features","text":"<pre><code>class DebugModal:\n\"\"\"Debug interface for developers.\"\"\"\n\n    def __init__(self, game_engine):\n        self.game_engine = game_engine\n        self.visible = False\n        self.options = [\n            {\"label\": \"Give 1000 gold\", \"action\": self._give_gold},\n            {\"label\": \"Spawn a storm\", \"action\": self._spawn_storm},\n            {\"label\": \"Spawn chests\", \"action\": self._spawn_chest},\n            {\"label\": \"Spawn a kraken\", \"action\": self._spawn_kraken},\n            {\"label\": \"Spawn island resources\", \"action\": self._spawn_island_resources},\n            {\"label\": \"Clear events\", \"action\": self._clear_events},\n        ]\n</code></pre>"},{"location":"en/dev/04-configuration/debug-mode/#available-actions","title":"Available Actions","text":"<p>The debug modal now offers several actions to facilitate development and testing:</p> <ol> <li> <p>Give Gold: Adds 500 gold to the active player.</p> <pre><code>def _handle_give_gold(self):\n    # Gives gold to the active team (allies or enemies)\n    active_team = self.game_engine.action_bar.current_camp\n    for entity, (player_comp, team_comp) in esper.get_components(PlayerComponent, TeamComponent):\n        if team_comp.team_id == active_team:\n            player_comp.add_gold(500)\n</code></pre> </li> <li> <p>Spawn Storm: Forces a storm to appear at a random position.</p> <pre><code>def _handle_spawn_storm(self):\n    storm_manager = getStormManager()\n    position = storm_manager.findValidSpawnPosition()\n    if position:\n        storm_entity = storm_manager.createStormEntity(position)\n</code></pre> </li> <li> <p>Spawn Chests: Forces 2-4 flying chests to appear.</p> <pre><code>def _handle_spawn_chest(self):\n    chest_manager = self.game_engine.flying_chest_manager\n    num_chests = random.randint(2, 4)\n    for _ in range(num_chests):\n        position = chest_manager._choose_spawn_position()\n        if position:\n            chest_manager._create_chest_entity(position)\n</code></pre> </li> <li> <p>Spawn Kraken: Forces a kraken with 2-6 tentacles to appear.</p> <pre><code>def _handle_spawn_kraken(self):\n    kraken_entity = esper.create_entity()\n    esper.add_component(kraken_entity, KrakenComponent(2, 6, 1))\n    esper.add_component(kraken_entity, EventsComponent(0.0, 20.0, 20.0))\n</code></pre> </li> <li> <p>Spawn Island Resources: Forces 2-3 gold resources to appear on islands.</p> <pre><code>def _handle_spawn_island_resources(self):\n    resource_manager = self.game_engine.island_resource_manager\n    num_resources = random.randint(2, 3)\n    for _ in range(num_resources):\n        position = resource_manager._choose_spawn_position()\n        if position:\n            resource_manager._create_resource_entity(position)\n</code></pre> </li> <li> <p>Clear Events: Deletes all active events (storms, chests, krakens, resources).</p> <pre><code>def _handle_clear_events(self):\n    # Clears storms\n    storm_manager.clearAllStorms()\n    # Deletes flying chests, krakens, tentacles, and island resources\n    for entity, component in esper.get_component(EventComponent):\n        esper.delete_entity(entity)\n</code></pre> </li> </ol>"},{"location":"en/dev/04-configuration/debug-mode/#using-the-configmanager","title":"Using the ConfigManager","text":""},{"location":"en/dev/04-configuration/debug-mode/#reading-the-configuration","title":"Reading the Configuration","text":"<p>File: <code>src/managers/config_manager.py</code></p> <pre><code>from src.managers.config_manager import ConfigManager\n\n# Check if debug mode is enabled\ncfg = ConfigManager()\nis_dev_mode = cfg.get('dev_mode', False)\n\nif is_dev_mode:\n    print(\"Developer mode enabled\")\n    # Activate debug features\nelse:\n    print(\"Production mode\")\n</code></pre>"},{"location":"en/dev/04-configuration/debug-mode/#modifying-the-configuration","title":"Modifying the Configuration","text":"<pre><code># Enable debug mode\ncfg = ConfigManager()\ncfg.set('dev_mode', True)\ncfg.save()  # Save to galad_config.json\n</code></pre>"},{"location":"en/dev/04-configuration/debug-mode/#verification-architecture","title":"Verification Architecture","text":""},{"location":"en/dev/04-configuration/debug-mode/#double-security-check","title":"Double Security Check","text":"<p>The system uses two methods to control the display of debug features:</p> <ol> <li> <p>Check on Creation (<code>_initialize_buttons()</code>)</p> <ul> <li>Checks <code>dev_mode</code> once at startup.</li> <li>Creates the debug button or not.</li> </ul> </li> <li> <p>Dynamic Check (<code>_update_button_positions()</code>)</p> <ul> <li>Checks <code>dev_mode</code> AND <code>show_debug</code> on each update.</li> <li>Allows hiding/showing the button without restarting.</li> </ul> </li> </ol>"},{"location":"en/dev/04-configuration/debug-mode/#best-practices","title":"Best Practices","text":""},{"location":"en/dev/04-configuration/debug-mode/#for-developers","title":"For Developers","text":""},{"location":"en/dev/04-configuration/debug-mode/#do","title":"\u2705 Do","text":"<pre><code># Use ConfigManager to check for debug mode\nif ConfigManager().get('dev_mode', False):\n    # Debug code\n    print(f\"Debug: Position = {pos.x}, {pos.y}\")\n</code></pre>"},{"location":"en/dev/04-configuration/debug-mode/#dont","title":"\u274c Don't","text":"<pre><code># DO NOT hard-code True\nif True:  # \u274c Bad\n    show_debug_button()\n</code></pre>"},{"location":"en/dev/04-configuration/debug-mode/#security","title":"Security","text":""},{"location":"en/dev/04-configuration/debug-mode/#production-protection","title":"Production Protection","text":"<p>Debug mode is automatically disabled in production thanks to:</p> <ol> <li>Default Value: <code>dev_mode: False</code> in <code>DEFAULT_CONFIG</code>.</li> <li>No Interface: No way to enable debug mode from within the game.</li> <li>External Configuration: Requires manual modification of the config file.</li> </ol>"},{"location":"en/dev/04-configuration/debug-mode/#summary","title":"Summary","text":"Aspect Detail Setting <code>dev_mode</code> in <code>galad_config.json</code> Default Value <code>False</code> (disabled) Activation Manually edit the config file Features Debug button, modal with cheats, additional logs Security No way to enable from the game interface Check <code>ConfigManager().get('dev_mode', False)</code>"},{"location":"en/dev/04-configuration/debug-mode/#see-also","title":"See Also","text":"<ul> <li>UI System - User Interface System</li> <li>Configuration - Game Settings</li> </ul>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/","title":"Galad Config Tool - Technical Documentation","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#general-architecture","title":"\ud83d\udccb General Architecture","text":"<p>The Galad Config Tool (<code>tools/galad_config.py</code>) is a standalone Tkinter utility of 546 lines that replicates and extends the Main game's Options Interface. It operates with direct read/write access to JSON Configuration Files.</p>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#code-structure","title":"\ud83c\udfd7\ufe0f Code Structure","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#main-classes","title":"Main Classes","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#galadconfigapptktk","title":"<code>GaladConfigApp(tk.Tk)</code>","text":"<p>Main class inheriting from <code>tk.Tk</code>, manages the complete application.</p> <p>Initialization Methods: <pre><code>def __init__(self):\n    # Main window initialization\n    # Configuration loading\n    # UI construction\n    # Missing file management with messagebox popups\n</code></pre></p> <p>Key Attributes:</p> <ul> <li><code>self.config</code> : Dict containing the loaded Configuration</li> <li><code>self.config_path</code> : Path to galad_config.json</li> <li><code>self.resolutions_path</code> : Path to galad_resolutions.json</li> <li><code>self.notebook</code> : ttk.Notebook widget for tabs</li> </ul>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#configuration-and-persistence","title":"Configuration and Persistence","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#configuration-loading","title":"Configuration Loading","text":"<pre><code>def load_config(self):\n\"\"\"Loads the galad_config.json file with Error Management\"\"\"\n    try:\n        # JSON reading with fallback to default values\n        # Missing file management with messagebox.showwarning\n        # Automatic creation if necessary\n    except Exception as e:\n        messagebox.showerror(\"Error\", f\"Loading error: {e}\")\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#backup","title":"Backup","text":"<pre><code>def save_config(self):\n\"\"\"Immediate backup to galad_config.json\"\"\"\n    # JSON writing with indentation\n    # Error management with messagebox.showerror\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#user-interface-tab-based-architecture","title":"User Interface - Tab-based Architecture","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#display-tab-_build_display_tab","title":"Display Tab (<code>_build_display_tab</code>)","text":"<p>Main Widgets: - <code>ttk.Combobox</code> for Resolution selection with <code>bind(\"&lt;&lt;ComboboxSelected&gt;&gt;\")</code> - <code>ttk.Checkbutton</code> for Window mode with <code>command=self._on_windowed_changed</code> - <code>ttk.Scale</code> for Camera Sensitivity with <code>command=self._on_camera_changed</code> - <code>ttk.Combobox</code> for Language with immediate callback</p> <p>Resolution Management:</p> <pre><code>def _refresh_resolutions(self):\n\"\"\"Updates the resolution list (builtin + custom)\"\"\"\n    # Combine predefined and custom resolutions\n    # Mark customs with locale text\n    # Update combobox values\n</code></pre> <p>Adding Resolutions:</p> <pre><code>def _add_resolution(self):\n\"\"\"Adds a custom Resolution\"\"\"\n    # Width/height input validation\n    # Avoid duplicates\n    # Immediate backup to galad_resolutions.json\n    # UI refresh\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#audio-tab-_build_audio_tab","title":"Audio Tab (<code>_build_audio_tab</code>)","text":"<p>Main Widgets:</p> <ul> <li><code>ttk.Scale</code> with <code>command=self._on_volume_changed</code></li> <li><code>ttk.Label</code> for real-time percentage display</li> </ul> <p>Real-time Update:</p> <pre><code>def _on_volume_changed(self, value):\n\"\"\"Volume slider callback\"\"\"\n    # Float conversion and config update\n    # Immediate label percentage update\n    # no backup (done on Apply click)\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#controls-tab-_build_controls_tab","title":"Controls Tab (<code>_build_controls_tab</code>)","text":"<p>Scrollable Architecture:</p> <pre><code># Canvas + Scrollbar for smooth navigation\ncontrols_canvas = tk.Canvas(controls_frame)\nscrollbar = ttk.Scrollbar(controls_frame, orient=\"vertical\", command=controls_canvas.yview)\nscrollable_frame = ttk.Frame(controls_canvas)\n\n# Scrolling configuration\ncontrols_canvas.configure(yscrollcommand=scrollbar.set)\ncontrols_canvas.bind('&lt;Configure&gt;', lambda e: controls_canvas.configure(scrollregion=controls_canvas.bbox(\"all\")))\n</code></pre> <p>Control Groups:</p> <pre><code>control_groups = {\n    \"Unit Commands\": [\"unit_move_forward\", \"unit_move_backward\", ...],\n    \"Camera Controls\": [\"camera_move_up\", \"camera_move_down\", ...],\n    \"Selection\": [\"select_all_units\", \"target_unit\", ...],\n    \"System\": [\"toggle_pause\", \"show_help\", ...],\n    \"Control Groups\": [\"assign_group_1\", \"select_group_1\", ...]\n}\n</code></pre> <p>Dynamic Widgets:</p> <pre><code>for group_name, keys in control_groups.items():\n    # LabelFrame creation for each group\n    # ttk.Combobox generation for each key\n    # Bind on &lt;&lt;ComboboxSelected&gt;&gt; for immediate backup\n    # Lambda usage with default parameter for closure\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#configuration-tab-_build_config_tab","title":"Configuration Tab (<code>_build_config_tab</code>)","text":"<p>File Selection:</p> <pre><code>def _browse_config_file(self):\n\"\"\"Dialog for galad_config.json selection\"\"\"\n    filename = filedialog.askopenfilename(\n        title=\"Select the Configuration File\",\n        filetypes=[(\"JSON Files\", \"*.json\"), (\"All Files\", \"*.*\")],\n        initialdir=str(CONFIG_PATH.parent)\n    )\n    # Selected file validation\n    # Entry widgets update\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#localization-and-language-change","title":"Localization and Language Change","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#extensible-translation-system","title":"Extensible Translation System","text":"<pre><code># Import of centralized localization system\nfrom src.settings.localization import get_available_languages, get_current_language, set_language, t\n\n# Extensible dropdown menu for languages\nself.langs_dict = get_available_languages()  # {\"fr\": \"Fran\u00e7ais\", \"en\": \"English\"}\nlang_names = list(self.langs_dict.values())  # [\"Fran\u00e7ais\", \"English\"]\nself.lang_combo = ttk.Combobox(frm, values=lang_names, state=\"readonly\")\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#adding-a-new-language","title":"Adding a New Language","text":"<p>Step 1 - Create the translation file:</p> <pre><code># assets/locales/spanish.py\nTRANSLATIONS = {\n    \"Options.display\": \"Pantalla\",\n    \"Options.audio\": \"Audio\",\n    # ... all translated keys\n}\n</code></pre> <p>Step 2 - Update the LocalizationManager:</p> <pre><code># In src/settings/localization.py\nlanguage_modules = {\n    \"fr\": \"assets.locales.french\",\n    \"en\": \"assets.locales.english\", \n    \"es\": \"assets.locales.spanish\"  # New\n}\n\ndef get_available_languages(self):\n    return {\n        \"fr\": \"Fran\u00e7ais\",\n        \"en\": \"English\",\n        \"es\": \"Espa\u00f1ol\"  # New\n    }\n</code></pre> <p>Step 3 - The tool adapts Automatically:</p> <ul> <li>The combobox displays \"Espa\u00f1ol\" in the list</li> <li>Selection works immediately</li> <li>No UI code modification necessary</li> </ul>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#dynamic-ui-update","title":"Dynamic UI Update","text":"<pre><code>def _refresh_ui_texts(self):\n\"\"\"Updates all Interface texts\"\"\"\n    try:\n        # Recursive traversal of all widgets\n        # Identification by winfo_name() or custom attributes\n        # Text/title update according to widget type\n        for widget in self.winfo_children():\n            self._update_widget_texts(widget)\n    except Exception as e:\n        messagebox.showwarning(\"Warning\", f\"UI Update Error: {e}\")\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#configuration-files-management","title":"\ud83d\udd27 Configuration Files Management","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#paths-and-resolution","title":"Paths and Resolution","text":"<pre><code># Use of pathlib for cross-platform management\nCONFIG_PATH = Path(__file__).parent.parent / \"galad_config.json\"\nRES_PATH = Path(__file__).parent.parent / \"galad_resolutions.json\"\n\n# Dynamic resolution via Configuration tab\ndef _apply_paths(self):\n\"\"\"Applies the new file paths\"\"\"\n    # Folder existence validation\n    # Global paths update\n    # Configuration reloading\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#data-format","title":"Data Format","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#galad_configjson","title":"<code>galad_config.json</code>","text":"<pre><code>DEFAULT_CONFIG = {\n    \"window_mode\": \"windowed\",\n    \"screen_width\": 1920,\n    \"screen_height\": 1080,\n    \"volume_music\": 0.7,\n    \"camera_sensitivity\": 1.5,\n    \"language\": \"fr\",\n    \"key_bindings\": {\n        # Complete key mapping by action\n        \"unit_move_forward\": [\"z\"],\n        \"camera_move_up\": [\"up\"],\n        # ... 40+ bindings\n    }\n}\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#galad_resolutionsjson","title":"<code>galad_resolutions.json</code>","text":"<pre><code># Format: Array of [width, height]\n[\n    [1920, 1011],\n    [2560, 1440],\n    [3840, 2160]\n]\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#utility-functions","title":"Utility Functions","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#resolution-management","title":"Resolution Management","text":"<pre><code>def load_custom_resolutions():\n\"\"\"Loads custom resolutions\"\"\"\n    # JSON reading with fallback to empty list\n    # [width, height] format validation\n\ndef save_resolutions_list(res_list):\n\"\"\"Backs up custom resolutions\"\"\"\n    # JSON writing with error management\n    # messagebox.showerror popup on failure\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#integration-with-game-resolution-system","title":"Integration with Game Resolution System","text":"<pre><code># The game uses src.settings.resolutions.get_all_resolutions()\n# which automatically combines builtin + custom\ndef get_all_resolutions():\n    builtin = [(1920, 1080), (1366, 768), ...]  # Standard resolutions\n    custom = load_custom_resolutions()          # Added resolutions\n    return [(w, h, label) for w, h in builtin + custom]\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#compilation-and-distribution","title":"\ud83d\ude80 Compilation and Distribution","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#pyinstaller","title":"PyInstaller","text":"<pre><code>pyinstaller --onefile --windowed tools/galad_config.py --name galad-config-tool \\\n--add-data \"assets/locales:assets/locales\" \\\n--add-data \"src:src\"\n</code></pre> <p>Critical Settings:</p> <ul> <li><code>--onefile</code> : Standalone executable</li> <li><code>--windowed</code> : no console (GUI only)</li> <li><code>--add-data</code> : Inclusion of dependencies for dynamic imports</li> </ul>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#data-flow","title":"\ud83d\udcca Data Flow","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#modification-workflow","title":"Modification Workflow","text":"<ol> <li>Loading : <code>load_config()</code> \u2192 <code>self.config</code> dict</li> <li>Interface : Widgets bound to config values</li> <li>Modification : Callbacks update <code>self.config</code></li> <li>Persistence : <code>save_config()</code> on \"Apply\" click</li> </ol>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#synchronization-with-the-game","title":"Synchronization with the Game","text":"<ul> <li>Shared Reading : Same JSON Files</li> <li>no runtime communication : Config at game startup</li> <li>Hot-reload : Not supported, game restart Required</li> </ul>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#error-management-and-robustness","title":"\ud83e\uddea Error Management and Robustness","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#input-validation","title":"Input Validation","text":"<pre><code># Resolutions: Numeric validation with try/except\n# File Paths: Path.exists() validation\n# JSON: Fallback to default values if parsing fails\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#user-messages","title":"User Messages","text":"<pre><code># Replacement of all print() with messagebox\nmessagebox.showwarning()  # Non-blocking warnings\nmessagebox.showerror()    # Critical errors\nmessagebox.showinfo()     # Useful information\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#fallbacks-and-recovery","title":"Fallbacks and Recovery","text":"<pre><code># Corrupted configuration \u2192 Regeneration with default values\n# Missing files \u2192 Automatic creation\n# Translation errors \u2192 Fallback to raw keys\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#integration-points-with-the-game","title":"\ud83d\udd04 Integration Points with the Game","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#imported-modules","title":"Imported Modules","text":"<pre><code># Configuration management\nfrom src.settings.settings import ConfigManager\nfrom src.settings.resolutions import get_all_resolutions\n\n# Localization\nfrom src.functions.localization import load_language\nfrom assets.locales.french import t as t_fr\nfrom assets.locales.english import t as t_en\n\n# Controls mapping  \nfrom src.settings.controls import DEFAULT_KEY_BINDINGS\n</code></pre>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#data-synchronization","title":"Data Synchronization","text":"<ul> <li>Reading : Tool reads the same files as the game</li> <li>Writing : Identical format, hot-swap compatible</li> <li>Validation : Same validation rules as the main game config system</li> </ul>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#patterns-and-best-practices","title":"\ud83d\udca1 Patterns and Best Practices","text":""},{"location":"en/dev/04-configuration/galad-config-tool-technical/#separation-of-responsibilities","title":"Separation of Responsibilities","text":"<ul> <li>UI Logic : <code>_build_*_tab()</code> methods</li> <li>Data Logic : <code>load_*()</code> and <code>save_*()</code> methods</li> <li>Event Handling : <code>_on_*_changed()</code> callbacks</li> </ul>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#performance","title":"Performance","text":"<ul> <li>Lazy Loading : Resolutions loaded on demand</li> <li>Batch Updates : Grouped backup instead of individual writing</li> <li>UI Threading : no blocking I/O on main thread</li> </ul>"},{"location":"en/dev/04-configuration/galad-config-tool-technical/#maintainability","title":"Maintainability","text":"<ul> <li>Centralized Configuration : <code>DEFAULT_CONFIG</code> dict</li> <li>Externalized Translations : Reuse of game modules</li> <li>Consistent Validation : Same rules as main game</li> </ul>"},{"location":"en/dev/04-configuration/localization/","title":"Localization System","text":"<p>The Galad Islands localization system allows support for multiple languages with a modular and extensible architecture.</p>"},{"location":"en/dev/04-configuration/localization/#overall-overview","title":"Overall overview","text":""},{"location":"en/dev/04-configuration/localization/#system-architecture","title":"System architecture","text":"<pre><code>src/settings/localization.py    # Main manager\n\u251c\u2500\u2500 LocalizationManager         # Singleton class\n\u251c\u2500\u2500 Utility functions           # t(), set_language(), etc.\n\u2514\u2500\u2500 Config integration          # Preferences persistence\n\nassets/locales/                 # Translation files\n\u251c\u2500\u2500 french.py                   # French translations\n\u251c\u2500\u2500 english.py                  # English translations\n\u2514\u2500\u2500 [new_language].py           # Future languages\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#localization-manager","title":"Localization manager","text":""},{"location":"en/dev/04-configuration/localization/#localizationmanager-singleton","title":"LocalizationManager (Singleton)","text":"<p>File: <code>src/settings/localization.py</code></p> <pre><code>class LocalizationManager:\n\"\"\"Singleton manager for translations.\"\"\"\n\n    def __init__(self):\n        self._current_language = \"fr\"       # Default language\n        self._translations = {}             # Translations cache\n        self._load_translations()           # Initial loading\n\n    def translate(self, key: str, **kwargs) -&gt; str:\n\"\"\"Translates a key with optional parameters.\"\"\"\n        translation = self._translations.get(key, key)\n\n        # Support for dynamic parameters\n        if kwargs:\n            translation = translation.format(**kwargs)\n\n        return translation\n\n    def set_language(self, language_code: str) -&gt; bool:\n\"\"\"Changes the language and reloads translations.\"\"\"\n        if language_code in [\"fr\", \"en\"]:\n            self._current_language = language_code\n            config_manager.set(\"language\", language_code)\n            self._load_translations()\n            return True\n        return False\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#global-utility-functions","title":"Global utility functions","text":"<pre><code># Simple import from anywhere\nfrom src.settings.localization import t, set_language, get_current_language\n\n# Usage in code\ntitle = t(\"menu.play\")                           # \"Jouer\" or \"Play\"\nvolume_text = t(\"Options.volume_music_label\", volume=75)  # With parameters\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#translation-files-structure","title":"Translation files structure","text":""},{"location":"en/dev/04-configuration/localization/#standard-format","title":"Standard format","text":"<p>Example: <code>assets/locales/french.py</code></p> <pre><code># -*- coding: utf-8 -*-\n\"\"\"\nFrench translations for Galad Islands\n\"\"\"\n\nTRANSLATIONS = {\n    # Organization by categories with prefixes\n\n    # Main Menu\n    \"menu.play\": \"Jouer\",\n    \"menu.Options\": \"Options\",\n    \"menu.quit\": \"Quitter\",\n\n    # Game interface\n    \"game.gold\": \"Or : {amount}\",              # With dynamic parameter\n    \"game.unit_selected\": \"Unit\u00e9 s\u00e9lectionn\u00e9e : {name}\",\n    \"game.health\": \"Vie : {current}/{max}\",\n\n    # System messages\n    \"system.loading\": \"Chargement...\",\n    \"system.error\": \"Erreur : {message}\",\n\n    # Keyboard shortcuts\n    \"Options.binding.unit_attack\": \"Attack principale\",\n    \"Options.binding.camera_move_left\": \"Camera vers la gauche\",\n\n    # Tips and advice\n    \"tip.0\": \"Utilisez les abilities special au bon moment !\",\n    \"tip.1\": \"Les mines d'or vous donnent des ressources suppl\u00e9mentaires.\",\n    \"tip.2\": \"Explorez la carte pour d\u00e9couvrir des coffres cach\u00e9s.\",\n}\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#naming-conventions","title":"Naming conventions","text":"Prefix Usage Example <code>menu.</code> Menus and navigation <code>menu.play</code>, <code>menu.Options</code> <code>game.</code> Game interface <code>game.gold</code>, <code>game.unit_selected</code> <code>Options.</code> Settings and configuration <code>Options.volume</code>, <code>Options.language</code> <code>system.</code> System messages <code>system.loading</code>, <code>system.error</code> <code>tip.</code> Tips and advice <code>tip.0</code>, <code>tip.1</code>, <code>tip.2</code> <code>unit.</code> Unit names and descriptions <code>unit.zasper</code>, <code>unit.druid</code> <code>error.</code> Error messages <code>error.save_failed</code>, <code>error.connection</code>"},{"location":"en/dev/04-configuration/localization/#usage-dans-le-code","title":"Usage dans le code","text":""},{"location":"en/dev/04-configuration/localization/#usage-examples","title":"Usage examples","text":""},{"location":"en/dev/04-configuration/localization/#basic-translation","title":"Basic translation","text":"<pre><code>from src.managers.localization_manager import LocalizationManager\n\n# Get the localization manager instance\nloc = LocalizationManager.get_instance()\n\n# Simple translation\nplay_text = loc.get_text(\"menu.play\")  # Returns \"Play\"\noptions_text = loc.get_text(\"menu.Options\")  # Returns \"Options\"\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#translation-with-parameters","title":"Translation with parameters","text":"<pre><code># Translation with dynamic parameters\ngold_text = loc.get_text(\"game.gold\", amount=1500)  # Returns \"Gold: 1500\"\nunit_text = loc.get_text(\"game.unit_selected\", name=\"Zasper\")  # Returns \"Unit selected: Zasper\"\nhealth_text = loc.get_text(\"game.health\", current=75, max=100)  # Returns \"Health: 75/100\"\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#error-handling","title":"Error handling","text":"<pre><code># Translation with fallback\nerror_msg = loc.get_text(\"system.error\", message=\"Connection failed\")\n# If key doesn't exist, returns \"system.error\"\n\n# Check if key exists\nif loc.has_key(\"menu.play\"):\n    play_text = loc.get_text(\"menu.play\")\nelse:\n    play_text = \"Play\"  # Fallback\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#language-switching","title":"Language switching","text":"<pre><code># Change language at runtime\nloc.set_language(\"french\")\nprint(loc.get_text(\"menu.play\"))  # Affiche \"Jouer\"\n\nloc.set_language(\"english\")\nprint(loc.get_text(\"menu.play\"))  # Prints \"Play\"\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#user-interface-integration","title":"User interface integration","text":"<pre><code># In the ActionBar\nclass ActionBar:\n    def _draw_gold_display(self, surface):\n        gold_text = t(\"game.gold\", amount=self.get_player_gold())\n        gold_surface = self.font.render(gold_text, True, UIColors.GOLD)\n        surface.blit(gold_surface, self.gold_rect)\n\n    def _draw_unit_info(self, surface):\n        if self.selected_unit:\n            name_text = t(\"game.unit_selected\", name=self.selected_unit.name)\n            health_text = t(\"game.health\", \n                          current=self.selected_unit.health,\n                          max=self.selected_unit.max_health)\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#random-tips-system","title":"Random tips system","text":"<pre><code>from src.settings.localization import get_random_tip, get_all_tips\n\n# Tip al\u00e9atoire pour Screen de chargement\nloading_tip = get_random_tip()\n\n# Toutes les tips pour Interface d'aide\nall_tips = get_all_tips()\nfor i, tip in enumerate(all_tips):\n    print(f\"{i+1}. {tip}\")\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#adding-a-new-language","title":"Adding a new language","text":""},{"location":"en/dev/04-configuration/localization/#step-1-create-the-translation-file","title":"Step 1: Create the translation file","text":"<p>Create a new file in <code>assets/locales/</code>:</p> <p>Example: <code>assets/locales/spanish.py</code></p> <pre><code># -*- coding: utf-8 -*-\n\"\"\"\nSpanish translations for Galad Islands\n\"\"\"\n\nTRANSLATIONS = {\n    # Main Menu\n    \"menu.play\": \"Jugar\",\n    \"menu.Options\": \"Opciones\", \n    \"menu.credits\": \"Cr\u00e9ditos\",\n    \"menu.help\": \"Ayuda\",\n    \"menu.scenario\": \"Escenario\",\n    \"menu.quit\": \"Salir\",\n\n    # Game interface\n    \"game.gold\": \"Oro: {amount}\",\n    \"game.unit_selected\": \"Unidad seleccionada: {name}\",\n    \"game.health\": \"Vida: {current}/{max}\",\n\n    # System messages\n    \"system.loading\": \"Cargando...\",\n    \"system.error\": \"Error: {message}\",\n\n    # Tips\n    \"tip.0\": \"\u00a1Usa las habilidades especiales en el momento adecuado!\",\n    \"tip.1\": \"Las minas de oro te dan recursos adicionales.\",\n\n    # All other keys must be translated...\n}\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#step-2-update-the-manager","title":"Step 2: Update the Manager","text":"<p>Modify <code>src/settings/localization.py</code>:</p> <pre><code>def _load_translations(self):\n\"\"\"Load translations for the current language\"\"\"\n    try:\n        # Add the new language to the mapping\n        language_modules = {\n            \"fr\": \"assets.locales.french\", \n            \"en\": \"assets.locales.english\",\n            \"es\": \"assets.locales.spanish\"  # New language\n        }\n\n        module_name = language_modules.get(self._current_language, \"assets.locales.french\")\n        translation_module = importlib.import_module(module_name)\n        self._translations = translation_module.TRANSLATIONS\n\ndef get_available_languages(self):\n\"\"\"Return the list of available languages\"\"\"\n    return {\n        \"fr\": \"Fran\u00e7ais\",\n        \"en\": \"English\", \n        \"es\": \"Espa\u00f1ol\"  # New language\n    }\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#step-3-validation-and-testing","title":"Step 3: Validation and testing","text":"<pre><code># Translation validation script\ndef validate_translations():\n\"\"\"Check that all keys are translated.\"\"\"\n\n    from assets.locales import french, english, spanish\n\n    fr_keys = set(french.TRANSLATIONS.keys())\n    en_keys = set(english.TRANSLATIONS.keys())\n    es_keys = set(spanish.TRANSLATIONS.keys())\n\n    # Missing keys\n    missing_en = fr_keys - en_keys\n    missing_es = fr_keys - es_keys\n\n    if missing_en:\n        print(f\"Keys missing in English: {missing_en}\")\n\n    if missing_es:\n        print(f\"Keys missing in Spanish: {missing_es}\")\n\n    print(f\"French: {len(fr_keys)} keys\")\n    print(f\"English: {len(en_keys)} keys\")\n    print(f\"Spanish: {len(es_keys)} keys\")\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#best-practices","title":"Best practices","text":""},{"location":"en/dev/04-configuration/localization/#structure-and-organization","title":"Structure and organization","text":"<p>\u2705 Do's:</p> <ul> <li>Consistent prefixes to group translations</li> <li>Descriptive keys in English (<code>unit_attack</code> rather than <code>ua</code>)</li> <li>Named placeholders for dynamic values (<code>{amount}</code>, <code>{name}</code>)</li> <li>Language files with identical structure</li> <li>Comments to organize sections</li> </ul> <p>\u274c Don'ts:</p> <ul> <li>Direct translations in code (<code>\"Jouer\"</code> vs <code>t(\"menu.play\")</code>)</li> <li>Keys that are too long or unclear</li> <li>Mixing languages in the same file</li> <li>Unnamed placeholders (<code>{0}</code>, <code>{1}</code> instead of <code>{name}</code>)</li> </ul>"},{"location":"en/dev/04-configuration/localization/#parameter-management","title":"Parameter management","text":"<pre><code># \u2705 Good usage with named parameters\n\"game.unit_health\": \"Health: {current}/{max}\",\n\"Options.volume_label\": \"Volume {type}: {level}%\",\n\n# \u274c To avoid - Positional parameters\n\"game.unit_health\": \"Health: {}/{}\", \n\"Options.volume_label\": \"Volume {}: {}%\",\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#testing-and-validation","title":"Testing and validation","text":"<pre><code># Test script for new language\ndef test_language(lang_code):\n\"\"\"Complete test of a language.\"\"\"\n\n    from src.settings.localization import set_language, t\n\n    # Switch to the new language\n    set_language(lang_code)\n\n    # Test essential translations\n    essential_keys = [\n        \"menu.play\", \"menu.Options\", \"menu.quit\",\n        \"system.loading\", \"system.error\",\n        \"game.gold\", \"game.health\"\n    ]\n\n    for key in essential_keys:\n        translation = t(key, amount=100, current=75, max=100)\n        print(f\"{key}: {translation}\")\n</code></pre>"},{"location":"en/dev/04-configuration/localization/#integration-with-ui","title":"Integration with UI","text":"<p>The localization system integrates perfectly with the UI system documented in User Interface:</p> <ul> <li>Options Menu: Language selection with automatic persistence</li> <li>ActionBar: Dynamic display of resources and information</li> <li>Modals: Translated content of help windows and credits</li> <li>System Messages: Localized notifications and errors</li> </ul> <p>This architecture allows easily adding new languages while maintaining UI consistency.</p>"},{"location":"en/dev/05-exploitation/deployment/","title":"Production Deployment","text":""},{"location":"en/dev/05-exploitation/deployment/#compilation-for-production","title":"Compilation for production","text":""},{"location":"en/dev/05-exploitation/deployment/#method-1-standalone-executable-recommended","title":"Method 1: Standalone executable (recommended)","text":""},{"location":"en/dev/05-exploitation/deployment/#game-compilation","title":"Game compilation","text":"<pre><code># Install PyInstaller\npip install pyinstaller\n\n# Compile to single file\npyinstaller --onefile --windowed \\\n--add-data \"assets:assets\" \\\n--name \"GaladIslands\" \\\nmain.py\n\n# The executable is in dist/GaladIslands\n# Remember to copy necessary asset folders\n</code></pre>"},{"location":"en/dev/05-exploitation/deployment/#configuration-tool-compilation","title":"Configuration tool compilation","text":"<pre><code>pyinstaller --onefile --windowed \\\n--add-data \"assets:assets\" \\\n--add-data \"assets/locales:assets/locales\" \\\n--name \"GaladConfigTool\" \\\nsrc/tools/galad_config_tool.py\n</code></pre>"},{"location":"en/dev/05-exploitation/deployment/#method-2-python-distribution","title":"Method 2: Python distribution","text":"<pre><code># Prepare the environment\npython3 -m venv venv_prod\nsource venv_prod/bin/activate\npip install -r requirements.txt\n\n# Create a launch script\ncat &gt; start_game.sh &lt;&lt; 'EOF'\n#!/bin/bash\ncd \"$(dirname \"$0\")\"\n./venv_prod/bin/python main.py\nEOF\nchmod +x start_game.sh\n</code></pre>"},{"location":"en/dev/05-exploitation/deployment/#production-package-structure","title":"Production package structure","text":"<pre><code>galad-islands-prod/\n\u251c\u2500\u2500 GaladIslands.exe        # Executable (Windows)\n\u251c\u2500\u2500 GaladIslands            # Executable (Linux/Mac)\n\u251c\u2500\u2500 GaladConfigTool.exe    # Config tool (Windows)\n\u251c\u2500\u2500 GaladConfigTool        # Config tool (Linux/Mac)\n\u251c\u2500\u2500 assets/                 # Game resources\n\u251c\u2500\u2500 README.txt              # Instructions\n\u2514\u2500\u2500 galad_config.json       # Configuration, created automatically if missing\n</code></pre>"},{"location":"en/dev/05-exploitation/deployment/#deployment-instructions","title":"Deployment instructions","text":""},{"location":"en/dev/05-exploitation/deployment/#for-end-users","title":"For end users","text":"<ol> <li>Download the complete package</li> <li>Extract into a folder</li> <li>Launch the <code>GaladIslands</code> executable</li> </ol>"},{"location":"en/dev/05-exploitation/operations/","title":"Maintenance and Operations","text":""},{"location":"en/dev/05-exploitation/operations/#the-galad_configjson-file-is-managed-automatically","title":"The <code>galad_config.json</code> file is managed automatically:","text":"<pre><code>{\n\"resolution\": [1280, 720],\n\"framerate\": 30,\n\"volume_music\": 0.7,\n\"volume_sound\": 0.8,\n\"window_mode\": \"windowed\",\n\"camera_sensitivity\": 1.0\n}\n</code></pre> <p>Basic maintenance actions:</p> <ol> <li> <p>Backup the config:    <pre><code>cp galad_config.json galad_config_backup.json\n</code></pre></p> </li> <li> <p>Reset if problem:    <pre><code>rm galad_config.json  # The game will recreate default parameters\n</code></pre></p> </li> <li> <p>Clean temporary files:    <pre><code># Delete .pyc and __pycache__\nfind . -name \"__pycache__\" -type d -exec rm -rf {} +\nfind . -name \"*.pyc\" -delete\n</code></pre></p> </li> </ol>"},{"location":"en/dev/05-exploitation/operations/#version-management-with-git","title":"Version management with Git","text":"<p>The project uses automatic Git hooks for commits:</p> <p>Available scripts: - <code>setup_dev.py</code> - Automatic installation of development environment (dependencies, hooks, etc.) - <code>setup/install_hooks_with_bump.py</code> - Automatic installation of hooks (commit message, bump version) [Not recommended as automatic bump is not functional] - <code>setup/install_commitizen_universel.py</code> - Installation of commitizen for conventional commits - <code>scripts/clean-changelog.py</code> - Changelog cleanup - Pre-commit and post-checkout hooks</p> <p>Required commit format: <pre><code>feat: new feature\nfix: bug fix\ndocs: documentation\nstyle: formatting\nrefactor: refactoring\n</code></pre></p>"},{"location":"en/dev/05-exploitation/operations/#simple-development-tools","title":"Simple development tools","text":"<p>Tests and checks: <pre><code># Test hooks installation\npython setup/test_hooks.py\n\n# Check that the game starts\npython main.py\n\n# Debug mode (F3 in the game)\n# Displays FPS, camera position, zoom, resolution\n</code></pre></p> <p>That's it! No complex monitoring, just the basics to maintain the project in the game.</p>"},{"location":"en/dev/05-exploitation/operations/#basic-logging-system","title":"Basic logging system","text":"<p>The game uses standard Python logging: <pre><code># In main.py (line 7)\nimport logging\nlogging.basicConfig(level=logging.INFO)\n</code></pre></p> <p>Available logs: - Console messages during execution - Asset loading errors - Startup information</p> <p>To save logs: <pre><code>python main.py &gt; game.log 2&gt;&amp;1\n</code></pre></p>"},{"location":"en/dev/05-exploitation/operations/#simple-debug-and-monitoring","title":"Simple debug and monitoring","text":"<p>Integrated debug mode: - Press F3 to show debug info - Camera position, zoom, FPS, resolution</p> <p>Configuration files: - <code>galad_config.json</code> - Main game configuration - Resolution, volumes, graphical parameters - Saved automatically when changing options</p>"},{"location":"en/dev/05-exploitation/operations/#configuration-backup","title":"Configuration backup","text":""},{"location":"en/dev/05-exploitation/operations/#game-data-backup","title":"Game data backup","text":""},{"location":"en/dev/05-exploitation/operations/#backup-structure","title":"Backup structure","text":"<p>There is no backup system except for user parameters.</p>"},{"location":"en/dev/05-exploitation/systeme/","title":"Critical System Settings - Galad Islands","text":"<p>These parameters define the minimum and optimal constraints of the Pygame-based game engine. They ensure stable operation, correct responsiveness, and a smooth experience.</p> Parameter Description Default Value Critical Impact Display Resolution Dimensions of the game window (width \u00d7 height in pixels). <code>1168 \u00d7 629</code> Directly affects GPU/CPU load and interface readability. Target Framerate Target number of frames per second. <code>30 FPS</code> Determines gameplay fluidity and CPU consumption. Map Size Logical dimensions of the world (in tiles). <code>30 \u00d7 30 tiles</code> Memory impact (900 tiles = tileset, collisions, pathfinding). Tile Size Dimension of a map tile in pixels (dynamically calculated). <code>16-64 px</code> (adaptive) Impacts rendering performance and texture memory. VSync Vertical synchronization. <code>true</code> Limits framerate to monitor frequency, reduces tearing and CPU/GPU consumption. Audio System Sampling rate and channel management. Pygame default Influences sound quality and memory usage. Camera Speed Camera movement in pixels per second. <code>200 px/s</code> Determines scrolling responsiveness and rendering calculation load. Zoom Available zoom range. <code>0.5 - 2.5</code> (step: <code>0.1</code>) Direct impact on the number of entities to render and GPU load."},{"location":"en/dev/05-exploitation/systeme/#adaptive-display-constraints","title":"Adaptive Display Constraints","text":"<p>The engine automatically calculates the optimal tile size to ensure minimum visibility and stable performance:</p> Constraint Value System Impact Min visible tiles (width) <code>15</code> Ensures readability and limits the number of simultaneously rendered objects. Min visible tiles (height) <code>10</code> Same vertically. Optimal ratio for 16:9 screens. Min tile size <code>16 px</code> Lower limit to avoid illegibility and excessive aliasing. Max tile size <code>64 px</code> Upper limit to control texture memory usage and sprite size."},{"location":"en/dev/05-exploitation/systeme/#procedural-map-generation","title":"Procedural Map Generation","text":"<p>These rates control entity density and impact performance (collisions, pathfinding, AI):</p> Element Rate Number of instances (30\u00d730) System Impact Mines 2% <code>18</code> Static collisions, danger zone. Generic Islands 3% <code>27</code> Navigation obstacles, pathfinding calculations. Clouds 3% <code>27</code> Visual elements, low impact (no collision). <p>Total static entities: ~72 objects on 900 tiles (8%)</p>"},{"location":"en/dev/05-exploitation/systeme/#supported-resolutions","title":"Supported Resolutions","text":"<p>The engine natively supports these resolutions without costly recalculations:</p> Resolution Calculated Tile Size Ratio 800\u00d7600 40 px 4:3 1024\u00d7768 62 px 4:3 1280\u00d7720 62 px 16:9 1366\u00d7768 62 px ~16:9 1920\u00d71080 64 px (max) 16:9 2560\u00d71440 64 px (max) 16:9 <p>Resolutions \u22651920\u00d71080 reach the max limit of 64px per tile, thus optimizing GPU usage.  It is also possible to modify the resolutions in the settings to have custom resolutions.</p>"},{"location":"en/dev/05-exploitation/systeme/#technical-characteristics","title":"Technical Characteristics","text":"<ul> <li>Encoding: UTF-8 (multilingual support)</li> <li>Validation: Min/max ranges applied on load</li> <li>Fallback: Default values if file is corrupt/missing</li> <li>Merge: Smart merge with defaults to avoid config loss</li> </ul>"},{"location":"en/dev/05-exploitation/systeme/#allowed-value-ranges","title":"Allowed Value Ranges","text":"<p>These limits prevent unstable configurations:</p> Parameter Min Max Unit screen_width 200 10000 pixels screen_height 200 10000 pixels volume_* 0.0 1.0 ratio camera_sensitivity 0.1 5.0 Multiplier camera_fast_multiplier 1.0 \u221e Multiplier"},{"location":"en/dev/05-exploitation/systeme/#optimization-notes","title":"Optimization Notes","text":"<ol> <li> <p>30 FPS Framerate: A deliberate choice to balance fluidity and CPU consumption on modest hardware.</p> </li> <li> <p>Adaptive Tile Size: Avoids over-rendering at high resolution and maintains readability at low resolution.</p> </li> <li> <p>VSync by default: Reduces unnecessary load by limiting the framerate to the monitor's capacity (usually 60Hz).</p> </li> <li> <p>30\u00d730 Map: Modest size (900 tiles) to ensure stable performance for pathfinding and collisions.</p> </li> <li> <p>8% Object Density: Balances visual richness and performance of spatial algorithms.</p> </li> </ol>"},{"location":"en/dev/06-maintenance/maintenance/","title":"\ud83d\udee0\ufe0f Project Maintenance","text":"<p>This page describes the best practices and procedures to ensure the longevity and quality of the Galad Islands project.</p>"},{"location":"en/dev/06-maintenance/maintenance/#maintenance-strategy","title":"\ud83d\udea6 Maintenance Strategy","text":"<ul> <li>Frequent updates: Every new feature or bug fix should result in a commit. Prefer small, frequent commits to facilitate tracking and restoration.</li> <li>Dedicated branches: For any major feature, create a dedicated branch before merging into the main branch.</li> <li>Clear commits: Commit messages must be explicit and follow the commit convention.</li> </ul>"},{"location":"en/dev/06-maintenance/maintenance/#dependency-management","title":"\ud83d\udce6 Dependency Management","text":"<ul> <li>Dependencies are managed via the <code>requirements.txt</code> file. Keep it updated with compatible versions.</li> <li>Before adding a new dependency, verify its necessity and the absence of conflicts with existing dependencies.</li> <li> <p>Use a virtual environment to isolate the project's dependencies:</p> <pre><code>python -m venv env\nsource env/bin/activate  # On Windows: env\\Scripts\\activate\npip install -r requirements.txt\n</code></pre> <p>\ud83d\udca1 IDEs like VSCode or PyCharm can automate the creation and activation of the virtual environment.</p> </li> </ul> <p>Updating Dependencies</p> <p>To update dependencies, modify the <code>requirements.txt</code> file and then run: <pre><code>pip install -r requirements.txt\n</code></pre></p>"},{"location":"en/dev/06-maintenance/maintenance/#backup-and-restoration","title":"\ud83d\udcbe Backup and Restoration","text":"<ul> <li>Regular backups: Use Git to version the source code and resources.</li> <li>Restoration: In case of a problem, revert to a stable version with:     <pre><code>git checkout &lt;commit_id&gt;\n# or to revert a commit\ngit revert &lt;commit_id&gt;\n</code></pre></li> <li>Configuration: The <code>galad_config.json</code> file contains the game's configuration. Back it up or delete it before major changes.</li> </ul>"},{"location":"en/dev/06-maintenance/maintenance/#maintenance-best-practices","title":"\u2705 Maintenance Best Practices","text":"<ul> <li>Communicate with the team to coordinate maintenance and avoid conflicts.</li> <li>Automate repetitive tasks with appropriate scripts or tools.</li> <li>Continuous Integration: Use CI tools to automate tests and deployments.</li> <li>Up-to-date documentation: Ensure that the documentation always reflects the project's current state.</li> </ul> <p>For any questions or suggestions, feel free to open an issue or a pull request on the GitHub repository.</p>"},{"location":"en/dev/06-maintenance/versioning/","title":"Version Management","text":""},{"location":"en/dev/06-maintenance/versioning/#objective","title":"\ud83c\udfaf Objective","text":"<p>This document explains how to manage versions for the Galad Islands project using a manual version management system.</p>"},{"location":"en/dev/06-maintenance/versioning/#how-to-manage-versions-manually","title":"How to Manage Versions Manually","text":"<ol> <li>Activate the Virtual Environment:</li> </ol> <pre><code>source venv/bin/activate  # Unix/Linux/macOS\n# or\nvenv\\Scripts\\activate     # Windows\n</code></pre> <ol> <li>Ensure you are up-to-date:</li> </ol> <pre><code>git checkout main &amp;&amp; git pull origin main\n</code></pre> <ol> <li>Perform the bump:</li> </ol> <pre><code>python -m commitizen bump --increment patch --yes --changelog\n</code></pre> <ol> <li>Push the changes:</li> </ol> <pre><code>git push origin main &amp;&amp; git push origin --tags\n</code></pre>"},{"location":"en/dev/06-maintenance/versioning/#commit-types-and-their-impact","title":"Commit Types and Their Impact","text":"<ul> <li>\u2705 feat: new feature \u2192 minor bump</li> <li>\u2705 fix: bug fix \u2192 patch bump</li> <li>\u2705 perf: performance improvement \u2192 patch bump</li> <li>\u2705 refactor: refactoring \u2192 patch bump</li> <li>\u274c docs, style, test, chore, ci: no bump</li> </ul>"},{"location":"en/dev/06-maintenance/versioning/#recommended-workflow","title":"\ud83d\udd04 Recommended Workflow","text":"<ol> <li>Initial setup: <code>python setup_dev.py</code> (only once)</li> <li>Normal development: Commits with conventional messages</li> <li>Manual bump: Use Commitizen to manage versions</li> <li>Push with tags: <code>git push origin main &amp;&amp; git push origin --tags</code></li> </ol>"},{"location":"en/dev/06-maintenance/versioning/#removal-of-pre-commit-hooks","title":"\ud83d\udeab Removal of Pre-commit Hooks","text":"<p>\u26a0\ufe0f Warning: Hooks Removed</p> <p>The automatic bump system via pre-commit hooks has been disabled. Versions must now be managed manually.</p> <ul> <li>\u2705 New: Manual version management</li> <li>\ud83d\udd04 Legacy: Hooks are no longer installed by default </li> </ul>"},{"location":"en/dev/06-maintenance/versioning/#advantages-of-this-approach","title":"\ud83c\udfaf Advantages of This Approach","text":"<ul> <li>\u2705 Total control: You decide when to make a release</li> <li>\u2705 No sync issues: Tags are created and pushed together</li> <li>\u2705 Consistent changelog: Generated locally with the full history</li> <li>\u2705 Confirmation: Ability to verify before publishing</li> <li>\u2705 Easy rollback: Reversal is possible before pushing</li> </ul>"},{"location":"en/dev/06-maintenance/versioning/#troubleshooting","title":"\ud83d\udd0d Troubleshooting","text":""},{"location":"en/dev/06-maintenance/versioning/#installation-and-tests","title":"Installation and tests","text":"<pre><code># Reinstall Commitizen\npython -m pip install commitizen\n\n# Check Commitizen\npython -m commitizen Version\n</code></pre>"},{"location":"en/dev/06-maintenance/versioning/#problemes-courants","title":"Probl\u00e8mes courants","text":"<pre><code># Environment Virtual non Activated\nsource venv/bin/activate  # Unix/Linux/macOS\n# ou\nvenv\\Scripts\\activate     # Windows\n</code></pre>"},{"location":"en/dev/07-annexes/contributing/","title":"Contribution Guide","text":""},{"location":"en/dev/07-annexes/contributing/#commit-conventions","title":"Commit Conventions","text":"<p>The project uses the Conventional Commits 1.0.0 specification to ensure a readable and machine-exploitable commit history.</p>"},{"location":"en/dev/07-annexes/contributing/#commit-message-structure","title":"Commit Message Structure","text":"<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n\n&lt;body&gt;\n\n&lt;footer&gt;\n</code></pre> <p>Mandatory Components:</p> <ul> <li><code>type</code>: type of change</li> <li><code>subject</code>: Short description (max 72 characters)</li> </ul> <p>Optional Components:</p> <ul> <li><code>scope</code>: Scope of the change (component, module, file)</li> <li><code>body</code>: Detailed description of the change</li> <li><code>footer</code>: Metadata (issue references, breaking changes)</li> </ul>"},{"location":"en/dev/07-annexes/contributing/#commit-types","title":"Commit Types","text":"Type Description Versioning Impact <code>feat</code> Adds a new feature MINOR <code>fix</code> Fixes a bug PATCH <code>docs</code> Documentation changes only - <code>style</code> Changes not affecting logic (formatting, spaces, indentation) - <code>refactor</code> Refactoring without changing functionality - <code>perf</code> Performance improvements PATCH <code>test</code> Adding or modifying tests - <code>build</code> Changes to the build system or dependencies - <code>ci</code> CI/CD configuration changes - <code>chore</code> Maintenance tasks (does not modify src or test) - <code>revert</code> Reverts a previous commit Depends on the reverted commit"},{"location":"en/dev/07-annexes/contributing/#writing-rules","title":"Writing Rules","text":"<p>Info</p> <ul> <li>Use the imperative present tense (\"add\" not \"added\" or \"adds\")</li> <li>Do not start with a capital letter</li> <li>Do not end with a period</li> <li>Maximum 72 characters</li> </ul> <p>Info</p> <ul> <li>Separate from the subject with a blank line</li> <li>Explain the \"what\" and \"why\", not the \"how\"</li> <li>Maximum 100 characters per line</li> </ul> <p>Info</p> <ul> <li>Issue references: <code>Refs: #123, #456</code></li> <li>Closing issues: <code>Closes: #123</code></li> <li>Breaking changes: <code>BREAKING CHANGE: Description</code></li> </ul>"},{"location":"en/dev/07-annexes/contributing/#examples","title":"Examples","text":"New UnitCombat Bug FixShop Refactoring <pre><code>feat(units): add Leviathan unit with siege capabilities\n\nAdd the Leviathan unit with high health and powerful attacks.\nIncludes new sprite assets and unit factory integration.\n\nCloses: #156\n</code></pre> <pre><code>fix(combat): prevent units from attacking through obstacles\n\nFixed pathfinding issue where units could attack targets\nthrough solid terrain. Added line-of-sight validation.\n\nRefs: #203\n</code></pre> <pre><code>refactor(shop): extract unit pricing logic to gameplay constants\n\nMoved hardcoded unit costs to centralized constants in gameplay.py.\nImproves maintainability and prevents pricing inconsistencies.\n</code></pre>"},{"location":"en/dev/07-annexes/contributing/#contribution-workflow","title":"Contribution Workflow","text":""},{"location":"en/dev/07-annexes/contributing/#prerequisites","title":"Prerequisites","text":"<ul> <li>Git 2.0+</li> <li>GitHub account with access to the repository</li> <li>Development environment configured according to the README</li> </ul>"},{"location":"en/dev/07-annexes/contributing/#standard-process","title":"Standard Process","text":""},{"location":"en/dev/07-annexes/contributing/#1-preparation","title":"1. Preparation","text":"<pre><code># Fork the repository via the GitHub interface\n\n# Clone the fork\ngit clone https://github.com/Fydyr/Galad-Islands.git\ncd &lt;repository&gt;\n\n# Configure the upstream repository\ngit remote add upstream https://github.com/Fydyr/Galad-Islands.git\n\n# Synchronize with upstream\ngit fetch upstream\ngit checkout main\ngit merge upstream/main\n</code></pre>"},{"location":"en/dev/07-annexes/contributing/#2-branch-creation","title":"2. Branch Creation","text":"<p>Tip</p> <pre><code>&lt;type&gt;/&lt;issue-number&gt;-&lt;short-description&gt;\n</code></pre> <p>Examples:</p> <pre><code>git checkout -b feat/123-oauth-integration\ngit checkout -b fix/456-null-pointer-exception\ngit checkout -b docs/789-api-documentation\n</code></pre> <p>Branch Types:</p> <ul> <li><code>feat/</code>: New feature</li> <li><code>fix/</code>: Bug fix</li> <li><code>docs/</code>: Documentation</li> <li><code>refactor/</code>: Refactoring</li> <li><code>test/</code>: Tests</li> <li><code>chore/</code>: Maintenance</li> </ul>"},{"location":"en/dev/07-annexes/contributing/#3-commit","title":"3. Commit","text":"<pre><code># Add modified files\ngit add &lt;files&gt;\n\n# Commit with conventional message\ngit commit -m \"type(scope): description\"\n\n# Validation\ngit log --oneline\n</code></pre>"},{"location":"en/dev/07-annexes/contributing/#4-synchronization","title":"4. Synchronization","text":"<pre><code># Fetch the latest changes\ngit fetch upstream\ngit rebase upstream/main\n\n# Resolve conflicts if necessary\n# Then continue the rebase\ngit rebase --continue\n</code></pre>"},{"location":"en/dev/07-annexes/contributing/#5-push-and-pull-request","title":"5. Push and Pull Request","text":"<pre><code># Push to the fork\ngit push origin &lt;branch-name&gt;\n</code></pre> <p>Note</p> <p>Check if your changes might overwrite other contributors' changes.</p> <p>Note</p> <ol> <li>Open the GitHub interface</li> <li>Create a Pull Request from the fork's branch to upstream's <code>main</code></li> <li>Fill out the PR template with:<ul> <li>Title: Clear summary of the change</li> <li>Description: Context and technical details</li> <li>Type of change: Feature, Bug fix, etc.</li> <li>Related issues: References (#123)</li> </ul> </li> </ol>"},{"location":"en/dev/07-annexes/contributing/#code-standards","title":"Code Standards","text":""},{"location":"en/dev/07-annexes/contributing/#general-principles","title":"General Principles","text":"<p>Abstract</p> <ul> <li>Single Responsibility Principle</li> <li>Open/Closed Principle</li> <li>Liskov Substitution Principle</li> <li>Interface Segregation Principle</li> <li>Dependency Inversion Principle</li> </ul> <p>Abstract</p> <ul> <li>Explicit and meaningful names</li> <li>Short functions (&lt; 20 lines)</li> <li>Comments only when necessary</li> <li>No duplicated code (DRY)</li> <li>Proper error management</li> </ul>"},{"location":"en/dev/07-annexes/contributing/#naming-conventions","title":"Naming Conventions","text":"Variables and FunctionsClasses and ComponentsConstantsFiles <pre><code># snake_case for variables and functions\nuser_name = 'John'\ndef get_user_data():\n    pass\n</code></pre> <pre><code># PascalCase for Classes and Components\nclass UserService:\n    pass\nclass UserProfileComponent:\n    pass\n</code></pre> <pre><code># UPPER_SNAKE_CASE for Constants\nMAX_RETRY_COUNT = 3\nAPI_BASE_URL = 'https://api.example.com'\n</code></pre> <ul> <li>Utilities: <code>snake_case.py</code></li> </ul>"},{"location":"en/dev/07-annexes/contributing/#tests","title":"Tests","text":"<p>Success</p> <ul> <li>Minimum Required: 80%</li> <li>Goal: 90%+</li> </ul>"},{"location":"en/dev/07-annexes/contributing/#review-process","title":"Review Process","text":""},{"location":"en/dev/07-annexes/contributing/#acceptance-criteria","title":"Acceptance Criteria","text":"<p>Warning</p> <ul> <li>[ ] At least one approved review from a maintainer</li> <li>[ ] No conflicts with the target branch</li> <li>[ ] Up-to-date documentation</li> <li>[ ] Satisfactory test coverage</li> </ul> <p>Tip</p> <ul> <li>[ ] Performance evaluated for critical changes</li> <li>[ ] Accessibility checked for UI changes</li> <li>[ ] Security analyzed for sensitive changes</li> </ul>"},{"location":"en/dev/07-annexes/contributing/#handling-feedback","title":"Handling Feedback","text":"<p>Resolving comments:</p> <ol> <li>Read and understand all comments</li> <li>Apply the requested changes</li> <li>Reply to comments to explain choices</li> <li>Mark comments as resolved</li> <li>Request a new review</li> </ol> <p>Changes after review:</p> <pre><code># Modify the code\ngit add &lt;files&gt;\n\n# Correction commit\ngit commit -m \"fix(scope): address review comments\"\n\n# Push\ngit push origin &lt;branch-name&gt;\n</code></pre>"},{"location":"en/dev/07-annexes/contributing/#contact","title":"Contact","text":"<p>Question</p> <p>Open an issue with the <code>question</code> label</p>"},{"location":"en/dev/07-annexes/contributing/#maintainers","title":"Maintainers","text":"<ul> <li>Enzo Fournier</li> <li>Edouard Alluin</li> <li>Julien Behani</li> <li>Ethan Cailliau</li> <li>Alexandre Damman</li> <li>Romain Lambert</li> </ul> <p>Info</p> <p>Version: 1.0.0</p>"},{"location":"en/user/basics/getting-started/","title":"Getting Started Guide","text":"<p>Welcome to Galad Islands! This guide will accompany you in your first steps in the archipelago.</p> <p>Before starting</p> <p>New player? Make sure you have installed the game by following the installation guide.</p>"},{"location":"en/user/basics/getting-started/#first-connection","title":"\ud83d\ude80 First Connection","text":""},{"location":"en/user/basics/getting-started/#main-menu","title":"Main Menu","text":"<p>When launching, you arrive at the main menu with the following options:</p> <ul> <li>\ud83c\udfae Play: Start a new game</li> <li>\u2699\ufe0f Options: Configure game settings</li> <li>\u2753 Help: Consult integrated help (F1)</li> <li>\ud83d\udc65 Credits: Discover the development team</li> <li>\ud83d\udeaa Quit: Close the game</li> </ul> <p>Recommended configuration</p> <p>Before your first game, visit the Options menu to: - Adjust resolution to your screen - Configure volumes (music/effects) - Choose your language (French/English) - Test controls</p>"},{"location":"en/user/basics/getting-started/#discovering-the-interface","title":"\ud83d\uddfa\ufe0f Discovering the Interface","text":""},{"location":"en/user/basics/getting-started/#overview","title":"Overview","text":"<p>When you start a game, you find yourself in the Galad Islands archipelago with:</p> <ul> <li>\ud83c\udf0a Oceanic map: Overview of the archipelago</li> <li>\ud83d\ude81 Free camera: Navigate freely in the world</li> <li>\ud83d\udd0d Zoom system: Mouse wheel to zoom in/out</li> <li>\u26a1 Action bar: Interface at the bottom of the screen</li> <li>\ud83d\udcca Debug information: Press F3 to display them</li> </ul>"},{"location":"en/user/basics/getting-started/#essential-controls","title":"Essential Controls","text":"Key/Action Function \u2b05\ufe0f\u27a1\ufe0f\u2b06\ufe0f\u2b07\ufe0f Move camera Mouse wheel Zoom in/out Left click Select a unit F1 Contextual help F3 Debug information Escape Return to menu <p>\ud83d\udcd6 For more details, consult the controls guide</p>"},{"location":"en/user/basics/getting-started/#your-first-steps-in-the-game","title":"\u2694\ufe0f Your First Steps in the Game","text":""},{"location":"en/user/basics/getting-started/#phase-1-exploration-2-3-minutes","title":"Phase 1: Exploration (2-3 minutes)","text":"<p>Exploration objectives</p> <p>\ud83c\udfaf What to do: 1. Explore the map with the arrow keys 2. Locate your units (your scout next to your base) 3. Spot the islands and points of interest 4. Identify enemies 5. Find resources (flying chests and gold on islands)</p>"},{"location":"en/user/basics/getting-started/#phase-2-first-combat-5-minutes","title":"Phase 2: First Combat (5 minutes)","text":"<p>Basic strategy</p> <p>\u2694\ufe0f How to engage in combat: - Select your unit (left click) - Approach an isolated enemy - Engage combat by getting close enough and firing with the <code>A</code> key - Monitor the health bar (above units) - Retreat if necessary to avoid destruction</p>"},{"location":"en/user/basics/getting-started/#phase-3-resource-management","title":"Phase 3: Resource Management","text":"<p>Gold sources</p> <p>\ud83d\udcb0 How to collect gold: - \ud83c\udf81 Chests: Destroy chests scattered on the islands - \ud83c\udfdd\ufe0f Island resources: Explore and harvest on different islands - \u2694\ufe0f Combat: Eliminate enemy units to earn gold - \ud83d\udea8 Warning: Avoid explosive mines (dangerous objects)!</p> <p>Smart economy</p> <p>\ud83d\uded2 Shopping tips: - Shop: Accessible via the action bar at the bottom of the screen - Variable prices: Each unit type has a different cost - Investment: Start with versatile units - Balance: Alternate between attack and defense</p>"},{"location":"en/user/basics/getting-started/#objectives-for-your-first-game","title":"\ud83c\udfaf Objectives for Your First Game","text":""},{"location":"en/user/basics/getting-started/#immediate-objectives-first-10-minutes","title":"Immediate Objectives (First 10 minutes)","text":"<ul> <li>[ ] Survive the first confrontations</li> <li>[ ] Collect at least 100 gold coins</li> <li>[ ] Buy a new unit</li> <li>[ ] Explore 50% of the map</li> <li>[ ] Eliminate 3 enemy units</li> </ul>"},{"location":"en/user/basics/getting-started/#medium-term-objectives-20-30-minutes","title":"Medium-term Objectives (20-30 minutes)","text":"<ul> <li>[ ] Control several strategic islands</li> <li>[ ] Build a fleet of 5+ units</li> <li>[ ] Master the different unit types</li> <li>[ ] Develop a coherent strategy</li> </ul>"},{"location":"en/user/basics/getting-started/#strategic-tips","title":"\ud83e\udde0 Strategic Tips","text":""},{"location":"en/user/basics/getting-started/#to-start-well","title":"To Start Well","text":"<p>Winning strategies</p> <p>\ud83c\udfc6 Proven techniques: - Reconnaissance first: Explore before attacking - Progressive combat: Eliminate isolated units - Gold management: Invest intelligently - Positioning: Use terrain to your advantage - Diversification: Vary unit types</p>"},{"location":"en/user/basics/getting-started/#beginner-mistakes-to-avoid","title":"Beginner Mistakes to Avoid","text":"<p>Common pitfalls</p> <p>\u274c Don't do: - Attack without plan or reconnaissance - Spend all your gold at once - Neglect defense of your positions - Disperse forces without coordination - Ignore special unit abilities</p>"},{"location":"en/user/basics/getting-started/#progression-and-learning","title":"\ud83d\ude80 Progression and Learning","text":""},{"location":"en/user/basics/getting-started/#improvement-steps","title":"Improvement Steps","text":"<ol> <li>\ud83c\udfae Mastering the basics (1-2 games)</li> <li>Fluid controls</li> <li>Interface understanding</li> <li> <p>Simple combat</p> </li> <li> <p>\u2694\ufe0f Advanced tactics (3-5 games)</p> </li> <li>Unit coordination</li> <li>Resource management</li> <li> <p>Combat strategies</p> </li> <li> <p>\ud83c\udfc6 Expertise (10+ games)</p> </li> <li>Build optimization</li> <li>Situation adaptation</li> <li>Complete gameplay mastery</li> </ol> <p>\ud83d\udcda Learning resources:</p> <ul> <li>Unit types and their roles</li> <li>Interface and action bar</li> </ul>"},{"location":"en/user/basics/getting-started/#beginner-tips","title":"\ud83c\udfaf Beginner Tips","text":"<p>Beginner strategy</p> <p>Exploration phase (first 5 minutes) 1. Explore the entire map 2. Locate gold sources 3. Identify enemy positions 4. Plan your strategy</p> <p>Common mistakes</p> <p>To avoid: - Attack without reconnaissance - Spend without thinking - Forget special abilities - Disperse forces</p>"},{"location":"en/user/basics/getting-started/#common-issues","title":"\u2753 Common Issues","text":""},{"location":"en/user/basics/getting-started/#the-game-doesnt-launch-or-stops-immediately","title":"The game doesn't launch or stops immediately","text":"<p>Quick solutions</p> <p>\ud83d\udd27 Immediate actions: 1. Restart your computer 2. Check that you downloaded the correct version (Windows/Linux/macOS) 3. Test as administrator (Windows) 4. Consult the troubleshooting guide</p>"},{"location":"en/user/basics/getting-started/#display-or-performance-issues","title":"Display or performance issues","text":"<p>Optimal configuration</p> <p>\ud83d\udcfa Recommended settings:</p> <ul> <li>Resolution: Start with 1280x720 then enlarge the window</li> <li>Mode: Windowed to start and read documentation at the same time</li> </ul>"},{"location":"en/user/basics/getting-started/#need-additional-help","title":"Need additional help?","text":"<p>Help resources</p> <p>\ud83d\udcda Where to find help: - FAQ: Most common questions - GitHub Issues: Report a bug - Integrated help: Press F1 in the game</p> <p>\ud83c\udfae Ready to play? Discover the gameplay guide now!</p>"},{"location":"en/user/basics/installation/#system-requirements","title":"System Requirements","text":""},{"location":"en/user/basics/installation/#minimum-configuration","title":"Minimum Configuration","text":"<ul> <li>OS: Windows 10/11, macOS 10.15+, Linux (Ubuntu 18.04+)</li> <li>Processor: Intel Core i3 or equivalent AMD</li> <li>Memory: 2 GB RAM</li> <li>Storage: 500 MB free space</li> <li>Graphics Card: OpenGL 3.3+ compatible</li> </ul>"},{"location":"en/user/basics/installation/#installation","title":"Installation","text":"<ol> <li>Download GaladIslands.zip according to your operating system</li> <li>Extract the archive in the folder of your choice</li> <li>Launch <code>galad_islands.exe</code> (Windows) or <code>galad_islands</code> (Linux/macOS)</li> <li>Enjoy the game!</li> </ol>"},{"location":"en/user/basics/installation/#game-configuration","title":"Game Configuration","text":""},{"location":"en/user/basics/installation/#galad-config-tool","title":"Galad Config Tool","text":"<p>The game includes a configuration tool <code>galad-config-tool</code> to adjust settings before playing:</p> <ul> <li>Launch: Double-click on <code>galad-config-tool</code> (included in releases)</li> <li>Functions: Resolutions, audio, controls, language</li> <li>Advantage: Configuration before playing</li> </ul> <p>For more information, consult the dedicated guide.</p>"},{"location":"en/user/basics/installation/#graphics-settings","title":"Graphics Settings","text":"<ul> <li>Resolution: Choice among available resolutions or custom resolution</li> <li>Display Mode: Windowed, Fullscreen</li> </ul>"},{"location":"en/user/basics/installation/#audio-settings","title":"Audio Settings","text":"<ul> <li>Music Volume: 0.0 to 1.0 (adjustable via slider)</li> </ul>"},{"location":"en/user/basics/installation/#control-settings","title":"Control Settings","text":"<ul> <li>Camera Sensitivity: 0.1 to 5.0 (adjustable via slider)</li> <li>Keyboard Shortcuts: Complete customization of keys</li> <li>Unit movement (forward, backward, turn)</li> <li>Camera controls (movement, fast mode, follow)</li> <li>Selection (select all, change team)</li> <li>System (pause, help, debug, shop)</li> <li>Control groups (assignment and selection)</li> </ul>"},{"location":"en/user/basics/installation/#language-settings","title":"Language Settings","text":"<ul> <li>Language: French, English (and other available languages)</li> </ul>"},{"location":"en/user/basics/installation/#troubleshooting-common-issues","title":"Troubleshooting Common Issues","text":""},{"location":"en/user/basics/installation/#the-game-wont-start","title":"The game won't start","text":"<ol> <li>Check system requirements</li> <li>Update graphics drivers</li> <li>Reinstall the game</li> <li>Check error logs by launching in a terminal/console</li> <li>On Windows: Open <code>cmd</code>, navigate to the game folder and execute <code>galad-islands.exe</code></li> <li>On macOS/Linux: Open a terminal, navigate to the game folder and execute <code>./galad-islands</code></li> <li>Check the error messages displayed to identify the problem and create an issue on the project's GitHub page</li> </ol>"},{"location":"en/user/basics/installation/#performance-issues","title":"Performance Issues","text":"<ol> <li>Lower graphics settings</li> <li>Close other applications</li> <li>Update the operating system</li> <li>Check hardware temperature</li> </ol>"},{"location":"en/user/basics/installation/#audio-issues","title":"Audio Issues","text":"<ol> <li>Check system audio settings</li> <li>Test with another device</li> <li>Reinstall audio drivers</li> <li>Check volume in the game</li> </ol>"},{"location":"en/user/basics/installation/#game-updates","title":"Game Updates","text":"<p>The game does not yet have an automatic update system. To update the game, you need to redownload it from the official page then follow the installation steps without deleting the configuration file <code>galad_config.json</code> to keep your settings.</p>"},{"location":"en/user/basics/installation/#uninstallation","title":"Uninstallation","text":"<p>Simply delete the folder where the game was extracted.</p> <p>Optimal configuration ensures the best gaming experience in the Galad Islands!</p>"},{"location":"en/user/basics/introduction/","title":"Introduction &amp; Presentation","text":""},{"location":"en/user/basics/introduction/#game-presentation","title":"\ud83c\udfae Game Presentation","text":"<p>Galad Islands is a captivating real-time strategy (RTS) game set in a mysterious and hostile archipelago. Two teams clash in a fierce struggle for total island domination, combining tactical strategy, resource management, and epic battles.</p>"},{"location":"en/user/basics/introduction/#tagline","title":"\ud83c\udf1f Tagline","text":"<p>\"In the turbulent waters of Galad Islands, only the most strategic will survive. Master your units, control resources, and lead your team to victory!\"</p>"},{"location":"en/user/basics/introduction/#general-game-concept","title":"\ud83d\udcd6 General Game Concept","text":""},{"location":"en/user/basics/introduction/#the-mystic-archipelago","title":"The Mystic Archipelago","text":"<p>You evolve in a vast archipelago composed of numerous floating islands and oceanic zones. Each island offers precious resources, strategic points, and combat opportunities.</p>"},{"location":"en/user/basics/introduction/#fog-of-war-system","title":"Fog of War System","text":"<p>Explore the archipelago progressively thanks to an immersive fog of war system:</p> <ul> <li>Black clouds: Never explored areas, hiding units and resources</li> <li>Gray fog: Already seen areas but currently out of reach</li> <li>Clear vision: Areas under control where you see everything in real time</li> </ul>"},{"location":"en/user/basics/introduction/#visibility-beta-version","title":"\ud83e\uddea Visibility (Beta Version)","text":"<p>\u26a0\ufe0f This feature is currently in development and available only in the game's beta version.</p> <p>The advanced visibility system adds an additional strategic layer to gameplay with variable vision ranges depending on units and team-shared vision.</p> <p>Note: For detailed strategies and tactical advice, consult the Fog of War and Vision section of the gameplay guide.</p>"},{"location":"en/user/basics/introduction/#resource-management","title":"Resource Management","text":"<p>Gold is the vital resource that determines your power:</p> <ul> <li>Flying chests: Random appearances on the map</li> <li>Gold deposits: Fixed resources on certain islands</li> <li>Combat rewards: Gold earned by eliminating enemy units</li> </ul>"},{"location":"en/user/basics/introduction/#units-and-abilities","title":"Units and Abilities","text":"<p>Five types of units with distinct roles:</p> <ul> <li>Scout: Fast and mobile scout</li> <li>Marauder: Defensive tank and resistant</li> <li>Leviathan: Slow but destructive giant</li> <li>Druid: Healing support and protection</li> <li>Architect: Builder and defense constructor</li> </ul>"},{"location":"en/user/basics/introduction/#main-objectives","title":"\ud83c\udfaf Main Objectives","text":""},{"location":"en/user/basics/introduction/#main-mission","title":"Main Mission","text":"<p>Your ultimate goal is to destroy the enemy base to win. To do this, you will need to:</p> <ol> <li>Explore the archipelago to discover resources</li> <li>Find gold in flying chests and island gold to fund your operations</li> <li>Produce units to strengthen your army</li> <li>Establish strategic defenses</li> <li>Launch coordinated offensives to eliminate the opponent</li> </ol>"},{"location":"en/user/basics/introduction/#victory-conditions","title":"Victory Conditions","text":"<ul> <li>Enemy base destruction: Classic victory</li> <li>Total economic superiority: The opponent no longer has the means to defend themselves</li> <li>Capitulation: The opponent surrenders facing a desperate situation</li> </ul>"},{"location":"en/user/basics/introduction/#game-style","title":"\ud83c\udfa8 Game Style","text":"<p>Galad Islands offers a rich and accessible strategic experience:</p> <ul> <li>Tactical approach: Every decision counts in unit placement</li> <li>Progressive exploration: Gradual discovery of the world and strategies</li> <li>Dynamic combat: Units with unique abilities creating synergies</li> </ul> <p>Whether you are a seasoned strategist or a curious novice, Galad Islands will captivate you with its strategic depth and immersive universe!</p>"},{"location":"en/user/economy/buildings/","title":"Buildings and Economy","text":"<p>Note</p> <p>This section requires verification and completion. Some information may be incomplete or outdated.</p>"},{"location":"en/user/economy/buildings/#construction-system","title":"\ud83c\udfd7\ufe0f Construction System","text":""},{"location":"en/user/economy/buildings/#basic-mechanics","title":"Basic Mechanics","text":""},{"location":"en/user/economy/buildings/#construction-prerequisites","title":"Construction Prerequisites","text":"<ul> <li>Have an Architect in your army</li> <li>Control a free island (without existing building)</li> <li>Have the necessary gold for construction</li> </ul>"},{"location":"en/user/economy/buildings/#construction-process","title":"Construction Process","text":"<ol> <li>Select your Architect</li> <li>Move him to the target island</li> <li>Click on the <code>Defense Tower</code> icon (key 'f') or <code>Healing Tower</code> icon (key 'g') at the bottom left of the screen</li> <li>Confirm with <code>Enter</code></li> </ol>"},{"location":"en/user/economy/buildings/#building-types","title":"\ud83c\udff0 Building Types","text":""},{"location":"en/user/economy/buildings/#defensive-buildings","title":"Defensive Buildings","text":""},{"location":"en/user/economy/buildings/#defense-tower","title":"Defense Tower","text":""},{"location":"en/user/economy/buildings/#statistics","title":"Statistics","text":"<ul> <li>Cost: 150 gold coins</li> <li>Health Points: 300 HP</li> <li>Damage: 25 per second</li> <li>Attack Range: 350 pixels</li> <li>Fire Rate: 1 shot/second</li> </ul>"},{"location":"en/user/economy/buildings/#behavior","title":"Behavior","text":"<ul> <li>Automatically targets the closest enemy</li> <li>Prioritizes units over buildings</li> <li>Projectiles: Automatic attack within range</li> <li>Animation: Rotates towards target before firing</li> </ul>"},{"location":"en/user/economy/buildings/#tactical-usage","title":"Tactical Usage","text":"<ul> <li>Chokepoint Defense: Place at narrow passages</li> <li>Base Protection: Surround your strategic positions</li> <li>Zone Control: Create dangerous areas for the enemy</li> </ul>"},{"location":"en/user/economy/buildings/#healing-buildings","title":"Healing Buildings","text":""},{"location":"en/user/economy/buildings/#healing-tower","title":"Healing Tower","text":""},{"location":"en/user/economy/buildings/#healing-statistics","title":"Healing Statistics","text":"<ul> <li>Cost: 120 gold coins</li> <li>Health Points: 200 HP</li> <li>Healing: 10 HP/second</li> <li>Healing Range: 200 pixels</li> <li>Targets: Allied units within range</li> </ul>"},{"location":"en/user/economy/buildings/#healing-mechanics","title":"Healing Mechanics","text":"<ul> <li>Automatic and continuous healing</li> <li>Prioritizes the most wounded units</li> <li>Visual Effect: Regeneration of allied units</li> <li>Healing Zone: 200 pixel radius circle</li> </ul>"},{"location":"en/user/economy/buildings/#tactical-synergies","title":"Tactical Synergies","text":"<ul> <li>With Leviathan: Nearly immortal tank</li> <li>With Druid: Very powerful combined healing</li> <li>In Group: Healing network for entire army</li> </ul> <p>Master the art of construction to dominate the Galad Islands!</p>"},{"location":"en/user/economy/shop/","title":"Shop and Economy","text":"<p>Warning</p> <p>This page contains outdated or incorrect information. Please contact the development team for more details.</p>"},{"location":"en/user/economy/shop/#economic-system","title":"\ud83d\udcb0 Economic System","text":""},{"location":"en/user/economy/shop/#income-sources","title":"Income Sources","text":""},{"location":"en/user/economy/shop/#flying-chests","title":"Flying Chests","text":"<ul> <li>Flying chests can appear randomly on the map</li> <li>Contain between 60-150 gold coins</li> <li>Strategy: Position your units to intercept them quickly</li> </ul>"},{"location":"en/user/economy/shop/#gold-on-islands","title":"Gold on Islands","text":"<ul> <li>Some islands may have gold deposits appear</li> <li>Contains between 200-500 gold coins</li> <li>Strategy: Explore methodically to discover deposits</li> </ul> <p>Warning</p> <p>Gold deposits and flying chests are time-limited and may disappear.</p>"},{"location":"en/user/economy/shop/#combat-rewards","title":"Combat Rewards","text":"<ul> <li>Earn gold by eliminating enemy units</li> <li>Amount corresponds to half the cost of the eliminated unit</li> <li>Scout: 10 gold \u2192 5 gold</li> <li>Marauder: 20 gold \u2192 10 gold</li> <li>Leviathan: 40 gold \u2192 20 gold</li> <li>Druid: 30 gold \u2192 15 gold</li> <li>Architect: 30 gold \u2192 15 gold</li> <li>Strategy: Kill expensive units to maximize gains</li> </ul>"},{"location":"en/user/economy/shop/#resource-management","title":"Resource Management","text":"<p>Economic Strategy</p> <p>Early game priorities:</p> <ol> <li>Explore to find easy gold</li> <li>Always keep an emergency reserve</li> <li>Destroy enemy units for gold</li> <li>Don't lose units unnecessarily (especially in fights against your enemy)</li> </ol>"},{"location":"en/user/economy/shop/#shop-interface","title":"\ud83d\uded2 Shop Interface","text":""},{"location":"en/user/economy/shop/#opening-the-shop","title":"Opening the Shop","text":"<ul> <li>Key: <code>B</code></li> <li>Alternative: Click on the shop icon</li> <li>Available: Permanently during gameplay</li> </ul>"},{"location":"en/user/economy/shop/#category-units","title":"\ud83d\udc65 Category: Units","text":""},{"location":"en/user/economy/shop/#combat-units","title":"Combat Units","text":""},{"location":"en/user/economy/shop/#scout","title":"Scout","text":"<ul> <li>Price: 10 gold coins</li> <li>Description: \"Fast and versatile scout\"</li> <li>Statistics:</li> <li>Health: 60 HP</li> <li>Attack: 10 damage</li> <li>Speed: 5.0</li> <li>Vision Range: 6.0</li> </ul>"},{"location":"en/user/economy/shop/#marauder","title":"Marauder","text":"<ul> <li>Price: 20 gold coins</li> <li>Description: \"Robust warrior with shield\"</li> <li>Statistics:</li> <li>Health: 130 HP</li> <li>Attack: 20 damage</li> <li>Speed: 3.5</li> <li>Vision Range: 5.0</li> </ul>"},{"location":"en/user/economy/shop/#leviathan","title":"Leviathan","text":"<ul> <li>Price: 40 gold coins</li> <li>Description: \"Heavy destructive leviathan\"</li> <li>Statistics:</li> <li>Health: 300 HP</li> <li>Attack: 30 damage</li> <li>Speed: 2.0</li> <li>Vision Range: 4.0</li> </ul>"},{"location":"en/user/economy/shop/#support-units","title":"Support Units","text":""},{"location":"en/user/economy/shop/#druid-healer","title":"Druid - Healer","text":"<ul> <li>Price: 30 gold coins</li> <li>Description: \"Healer and magical support\"</li> <li>Statistics:</li> <li>Health: 130 HP</li> <li>Healing: 20 HP/second</li> <li>Speed: 3.5</li> <li>Vision Range: 5.0</li> </ul>"},{"location":"en/user/economy/shop/#architect-builder","title":"Architect - Builder","text":"<ul> <li>Price: 30 gold coins</li> <li>Description: \"Defense builder\"</li> <li>Statistics:</li> <li>Health: 130 HP</li> <li>Attack: 20 damage</li> <li>Speed: 3.5</li> <li>Vision Range: 4.0</li> </ul>"},{"location":"en/user/economy/shop/#category-buildings","title":"\ud83c\udff0 Category: Buildings","text":""},{"location":"en/user/economy/shop/#defenses","title":"Defenses","text":""},{"location":"en/user/economy/shop/#defense-tower","title":"Defense Tower","text":"<ul> <li>Price: 100 gold coins</li> <li>Prerequisite: Architect on an island</li> <li>Description: \"Automatic attack tower\"</li> <li>Statistics:</li> <li>Health: 300 HP</li> <li>Attack: 40 damage/second</li> <li>Range: 150 pixels</li> <li>Targets: Enemy units</li> </ul>"},{"location":"en/user/economy/shop/#healing-tower","title":"Healing Tower","text":"<ul> <li>Price: 125 gold coins</li> <li>Prerequisite: Architect on an island</li> <li>Description: \"Allied regeneration tower\"</li> <li>Statistics:</li> <li>Health: 250 HP</li> <li>Healing: 15 HP/second</li> <li>Range: 120 pixels</li> <li>Targets: Allied units</li> </ul>"},{"location":"en/user/economy/shop/#purchasing-tips","title":"\ud83d\udca1 Purchasing Tips","text":""},{"location":"en/user/economy/shop/#early-game-0-500-gold","title":"Early Game (0-500 gold)","text":"<p>Exploration Build</p> <p>Recommended purchases:</p> <ol> <li>2x Scout (100 gold) - Reconnaissance</li> <li>1x Marauder (100 gold) - Protection</li> <li>1x Druid (150 gold) - Support</li> <li>1x Architect (200 gold) - Construction</li> <li>Save the rest for opportunities</li> </ol>"},{"location":"en/user/economy/shop/#mid-game-500-1500-gold","title":"Mid Game (500-1500 gold)","text":"<p>Balanced Build</p> <p>Recommended development:</p> <ol> <li>1x Leviathan (300 gold) - Power</li> <li>1x Architect (200 gold) - Defenses</li> <li>2x Defense Towers (200 gold) - Security</li> </ol>"},{"location":"en/user/economy/shop/#late-game-1500-gold","title":"Late Game (1500+ gold)","text":"<p>Domination Build</p> <p>Final formation:</p> <ol> <li>2x Leviathan (600 gold) - Destruction</li> <li>Healing tower network (400 gold) - Support</li> <li>Defense tower network (300+ gold) - Control</li> </ol>"},{"location":"en/user/economy/shop/#common-purchasing-mistakes","title":"\ud83d\udeab Common Purchasing Mistakes","text":""},{"location":"en/user/economy/shop/#to-avoid","title":"To Avoid","text":"<p>Economic Traps</p> <p>Never do this:</p> <ul> <li>Buy a Draupnir without protection</li> <li>Build towers without defending them</li> <li>Forget to diversify your army</li> </ul>"},{"location":"en/user/economy/shop/#priority-management","title":"Priority Management","text":"<p>Always prioritize:</p> <ol> <li>Survival (have at least 1 unit)</li> <li>Economy (secure the mines)</li> <li>Exploration (know the map)</li> <li>Defense (before attack)</li> <li>Expansion (control more territory)</li> </ol>"},{"location":"en/user/gameplay/action-bar/","title":"Interface and Action Bar","text":""},{"location":"en/user/gameplay/action-bar/#interface-overview","title":"\ud83c\udfae Interface Overview","text":""},{"location":"en/user/gameplay/action-bar/#main-elements","title":"Main Elements","text":"<p>The Galad Islands interface is designed to be intuitive and accessible, with all essential elements visible permanently during gameplay.</p> <p>Screen Layout:</p> <ul> <li>Game Area: Center of the screen (map view)</li> <li>Action Bar: Bottom left of the screen</li> <li>Gold: Bottom center</li> <li>Unit Information: Bottom center (next to gold)</li> </ul>"},{"location":"en/user/gameplay/action-bar/#detailed-action-bar","title":"\ud83d\udd27 Detailed Action Bar","text":""},{"location":"en/user/gameplay/action-bar/#resource-information","title":"Resource Information","text":""},{"location":"en/user/gameplay/action-bar/#gold-counter","title":"Gold Counter","text":"<ul> <li>Position: Bottom center of the screen</li> <li>Format: Coin icon + current number</li> <li>Color: Bright gold</li> <li>Update: Real-time</li> </ul>"},{"location":"en/user/gameplay/action-bar/#quick-action-buttons","title":"Quick Action Buttons","text":""},{"location":"en/user/gameplay/action-bar/#shop-b","title":"Shop (<code>B</code>)","text":"<ul> <li>Function: Opens the purchase interface</li> <li>Shortcut: <code>B</code> key</li> <li>State: Always available</li> </ul>"},{"location":"en/user/gameplay/action-bar/#selection-information","title":"Selection Information","text":""},{"location":"en/user/gameplay/action-bar/#selected-unit","title":"Selected Unit","text":""},{"location":"en/user/gameplay/action-bar/#information-panel-bottom-right","title":"Information Panel (bottom right)","text":"<ul> <li>Name: Unit type (Scout, Marauder, etc.)</li> <li>Statistics:</li> <li>Health bar (current HP/maximum HP)</li> </ul>"},{"location":"en/user/gameplay/action-bar/#available-abilities-bottom-left","title":"Available Abilities (bottom left)","text":"<ul> <li>Icons: Unit's special abilities</li> <li>Cooldowns: Remaining reload time</li> </ul>"},{"location":"en/user/gameplay/action-bar/#selection-management","title":"Selection Management","text":"<ul> <li>Single Focus: The interface always displays the currently targeted unit</li> <li>Faction Toggle: <code>T</code> allows changing the considered faction (development only)</li> </ul>"},{"location":"en/user/gameplay/action-bar/#states-and-notifications","title":"States and Notifications","text":""},{"location":"en/user/gameplay/action-bar/#cooldown-indicators","title":"Cooldown Indicators","text":"<p>Info</p> <p>Boosts are not yet implemented in the game.</p>"},{"location":"en/user/gameplay/action-bar/#temporary-boosts","title":"Temporary Boosts","text":"<ul> <li>On Cooldown: Icon + remaining time</li> <li>Available: Icon + displayed cost</li> </ul>"},{"location":"en/user/gameplay/action-bar/#alerts-and-warnings","title":"Alerts and Warnings","text":"<p>System Notifications:</p> <ul> <li>Insufficient Gold: Flashing red message</li> </ul>"},{"location":"en/user/gameplay/action-bar/#optimized-workflow","title":"Optimized Workflow","text":"<p>Typical Action Sequence:</p> <ol> <li>Check available resources</li> <li>Select relevant units</li> <li>Choose action (movement, attack, construction)</li> <li>Confirm with appropriate shortcuts</li> <li>Monitor execution and cooldowns</li> </ol>"},{"location":"en/user/gameplay/action-bar/#debug-and-advanced-interface","title":"\ud83d\udd0d Debug and Advanced Interface","text":""},{"location":"en/user/gameplay/action-bar/#developer-information","title":"Developer Information","text":""},{"location":"en/user/gameplay/action-bar/#debug-mode-if-enabled","title":"Debug Mode (if enabled)","text":"<ul> <li>FPS: Frames per second in corner</li> <li>Coordinates: Cursor position</li> <li>Unit States: Detailed information on selection</li> <li>System Logs: Diagnostic messages</li> </ul>"},{"location":"en/user/gameplay/action-bar/#console-commands","title":"Console Commands","text":"<p>Developer Shortcuts:</p> <ul> <li><code>F3</code>: Display debug mode</li> </ul> <p>Warning</p> <p>Developer commands can affect game balance. Use them only for testing or debugging.</p> <p>Now that you master the interface, explore the gameplay strategies to dominate your opponents!</p>"},{"location":"en/user/gameplay/controls/","title":"\ud83d\udd79\ufe0f Controls &amp; Interfaces","text":""},{"location":"en/user/gameplay/controls/#main-interface","title":"Main Interface","text":""},{"location":"en/user/gameplay/controls/#pause-menu","title":"Pause Menu","text":"<ul> <li>Resume: Resume the game</li> <li>Options: Audio, graphics, controls settings</li> <li>Help: Tutorials, keyboard shortcuts, about</li> <li>Quit: End the game</li> </ul>"},{"location":"en/user/gameplay/controls/#bottom-toolbar","title":"Bottom Toolbar","text":"<ul> <li>Shop: Buttons to buy each available unit type</li> <li>Special Actions: Attack, Special Abilities</li> <li>Information: Current gold, Selected unit health</li> </ul>"},{"location":"en/user/gameplay/controls/#game-area","title":"Game Area","text":"<ul> <li>Map: Overview of islands and units</li> <li>Detailed Information: Stats of selected units</li> </ul>"},{"location":"en/user/gameplay/controls/#basic-controls","title":"Basic Controls","text":""},{"location":"en/user/gameplay/controls/#navigation","title":"Navigation","text":"<ul> <li>Left Click: Select a unit</li> <li>Right Click: Give movement order</li> </ul>"},{"location":"en/user/gameplay/controls/#special-actions","title":"Special Actions","text":"<ul> <li>A: Attack / Fire cannonball</li> <li>Ctrl: Slow down selected unit</li> <li>Tab: Toggle frontal or lateral attack mode</li> <li>E: Special ability of selected unit</li> </ul>"},{"location":"en/user/gameplay/controls/#advanced-keyboard-shortcuts","title":"Advanced Keyboard Shortcuts","text":""},{"location":"en/user/gameplay/controls/#unit-group-management","title":"Unit Group Management","text":"<ul> <li>1-2: Change selected unit</li> <li>T: Change team</li> </ul>"},{"location":"en/user/gameplay/controls/#camera-control","title":"Camera Control","text":"<ul> <li>Arrow Keys: Move camera</li> <li>C: Toggle automatic unit following</li> <li>Mouse Wheel: Zoom in/out</li> </ul>"},{"location":"en/user/gameplay/controls/#user-interface","title":"User Interface","text":"<ul> <li>Escape: Pause/options menu</li> <li>F1: Display help</li> <li>F3: Debug mode (developer)</li> </ul>"},{"location":"en/user/gameplay/controls/#special-commands","title":"Special Commands","text":""},{"location":"en/user/gameplay/controls/#special-abilities-by-unit","title":"Special Abilities by Unit","text":"<ul> <li>Scout: Evasion maneuver (temporary invincibility)</li> <li>Marauder: Enemy shield reduction</li> <li>Leviathan: Double shot (second projectile free)</li> <li>Druid: Immobilizing vine projectile</li> <li>Architect: Acceleration of allied Zeppelin reloading</li> </ul> <p>Ability Activation</p> <p>All special abilities are activated with the E key when the corresponding unit is selected. Each ability has its own cooldown time.</p> <p>Master these controls and the interface will become a natural extension of your strategy!</p>"},{"location":"en/user/gameplay/gameplay/#main-mission","title":"\ud83c\udfaf Main Mission","text":""},{"location":"en/user/gameplay/gameplay/#victory-objective","title":"Victory Objective","text":"<p>Your mission in Galad Islands is to destroy the enemy base to win the game. The enemy base is represented by a special building that must be located and eliminated.</p>"},{"location":"en/user/gameplay/gameplay/#victory-conditions","title":"Victory Conditions","text":"<ul> <li>Base destruction: Completely eliminate the opponent's main building</li> </ul>"},{"location":"en/user/gameplay/gameplay/#average-game-duration","title":"Average Game Duration","text":"<ul> <li>Short games: 5-10 minutes (aggressive rushes)</li> <li>Balanced games: 15-25 minutes (balanced development)</li> <li>Long games: 30+ minutes (wars of attrition)</li> </ul>"},{"location":"en/user/gameplay/gameplay/#strategies-to-gain-advantage","title":"\ud83c\udfc6 Strategies to Gain Advantage","text":""},{"location":"en/user/gameplay/gameplay/#game-philosophies","title":"Game Philosophies","text":""},{"location":"en/user/gameplay/gameplay/#the-aggressive-rusher","title":"The Aggressive Rusher \u26a1","text":"<p>Style: Early and decisive attack - Objective: Quick victory through direct elimination - Key units: 3-4 Scouts + 1 Marauder - Timing: Attack within 2-3 minutes of gameplay - Economy: Minimal, focus on military</p> <p>Advantages:</p> <ul> <li>Surprise the opponent before they are ready</li> <li>Quick victory if the attack succeeds</li> <li>Less resources wasted</li> </ul> <p>Risks:</p> <ul> <li>Easily controllable with defenses</li> <li>Costly failure if the attack fails</li> </ul>"},{"location":"en/user/gameplay/gameplay/#the-territorial-defender","title":"The Territorial Defender \ud83d\udee1\ufe0f","text":"<p>Style: Territorial control through defenses</p> <ul> <li>Objective: Impregnable once established</li> <li>Strategy: Network of towers + Leviathan</li> <li>Strengths: Nearly invulnerable in defensive position</li> <li>Weaknesses: Vulnerable to surprise attacks</li> </ul> <p>Advantages:</p> <ul> <li>Very difficult to dislodge</li> <li>Protection against raids</li> <li>Stable economy</li> </ul> <p>Risks:</p> <ul> <li>Low offensive mobility</li> <li>Costly to establish</li> </ul>"},{"location":"en/user/gameplay/gameplay/#the-hybrid-adapter","title":"The Hybrid Adapter \ud83d\udd04","text":"<p>Style: Flexibility and adaptation</p> <ul> <li>Principle: Adapt to the opponent and the map</li> <li>Flexibility: Change strategy according to the situation</li> <li>Skills: Optimal game reading</li> <li>Complexity: Expert level required</li> </ul>"},{"location":"en/user/gameplay/gameplay/#combat-tactics","title":"Combat Tactics","text":""},{"location":"en/user/gameplay/gameplay/#unit-micromanagement","title":"Unit Micromanagement","text":"<p>Kiting and Hit-and-run:</p> <ul> <li>Approach at maximum range</li> <li>Attack then retreat immediately</li> <li>Repeat until elimination</li> <li>Ideal with Zasper against slow units</li> </ul> <p>Focused Fire:</p> <ul> <li>Target priority threats</li> <li>Eliminate in order: Druid \u2192 Leviathan \u2192 Architect</li> </ul>"},{"location":"en/user/gameplay/gameplay/#tactical-formations","title":"Tactical Formations","text":"<p>Defensive Phalanx:</p> <pre><code>    Leviathan\nMarauder  Marauder\n    Druid\n</code></pre> <ul> <li>Leviathan absorbs frontal damage</li> <li>Marauder protect the flanks</li> <li>Druid maintains HP</li> <li>Ideal for controlling passages</li> </ul> <p>Offensive Swarm:</p> <pre><code>Scout  Scout  Scout\n  Scout  Scout\n    Marauder\n</code></pre> <ul> <li>Scout harass in packs</li> <li>Mobility for flanking</li> <li>Marauder in support</li> </ul>"},{"location":"en/user/gameplay/gameplay/#economic-systems-and-progression","title":"\ud83d\udcb0 Economic Systems and Progression","text":""},{"location":"en/user/gameplay/gameplay/#gold-sources","title":"Gold Sources","text":""},{"location":"en/user/gameplay/gameplay/#flying-chests","title":"Flying Chests","text":"<ul> <li>Periodic appearances on the map</li> <li>Variable quantity (50-200 coins)</li> <li>Strategy: Position your units to intercept them</li> </ul>"},{"location":"en/user/gameplay/gameplay/#island-gold-deposits","title":"Island Gold Deposits","text":"<ul> <li>Fixed resources to discover</li> <li>Variable quantity (200-500 coins)</li> <li>Strategy: Explore methodically</li> </ul>"},{"location":"en/user/gameplay/gameplay/#combat-rewards","title":"Combat Rewards","text":"<ul> <li>Gold earned by killing enemy units</li> <li>Proportional to the unit's power</li> <li>Strategy: Selective profitable combats</li> </ul>"},{"location":"en/user/gameplay/gameplay/#economic-progression","title":"Economic Progression","text":""},{"location":"en/user/gameplay/gameplay/#critical-thresholds","title":"Critical Thresholds","text":"<ul> <li>200 gold: Basic unit (Scout)</li> <li>400 gold: Marauder or defense tower</li> <li>600 gold: Leviathan or special abilities</li> <li>800+ gold: Complete army</li> </ul>"},{"location":"en/user/gameplay/gameplay/#territorial-control-and-strategy","title":"\ud83d\uddfa\ufe0f Territorial Control and Strategy","text":""},{"location":"en/user/gameplay/gameplay/#islands-strategic-centers","title":"Islands: Strategic Centers","text":"<p>Role of Islands: Islands are the key points of territorial control. They allow you to:</p> <ul> <li>Build towers: Automatic defense and healing</li> <li>Collect resources: Gold appears periodically</li> <li>Control routes: Block enemy movements</li> </ul>"},{"location":"en/user/gameplay/gameplay/#construction-system","title":"Construction System","text":"<p>Defense Towers (150 gold):</p> <ul> <li>HP: 300 | Damage: 25 | Range: 350</li> <li>Automatically attacks nearby enemies</li> <li>Reload: 1 second between shots</li> </ul> <p>Healing Towers (120 gold):</p> <ul> <li>HP: 200 | Healing: 10 HP | Range: 350</li> <li>Automatically regenerates nearby allies</li> <li>Reload: 1 second between heals</li> </ul> <p>Construction:</p> <ol> <li>Select an Architect</li> <li>Click on \"Defense Tower\" or \"Healing Tower\" in the action bar</li> <li>Click on an empty island to place the tower</li> <li>Only one tower per island possible</li> </ol>"},{"location":"en/user/gameplay/gameplay/#territorial-expansion","title":"Territorial Expansion","text":""},{"location":"en/user/gameplay/gameplay/#phase-1-0-3-min-securing","title":"Phase 1 (0-3 min): Securing","text":"<ul> <li>Control 2-3 islands near your base</li> <li>Establish stable economy via chests</li> <li>Place minimal defense tower</li> </ul>"},{"location":"en/user/gameplay/gameplay/#phase-2-3-6-min-development","title":"Phase 2 (3-6 min): Development","text":"<ul> <li>Expand towards strategic islands</li> <li>Build coordinated defensive network</li> <li>Maintain economic pressure</li> </ul>"},{"location":"en/user/gameplay/gameplay/#phase-3-6-min-domination","title":"Phase 3 (6+ min): Domination","text":"<ul> <li>Control the majority of islands</li> <li>Overwhelming economic superiority</li> <li>Impenetrable defense</li> </ul>"},{"location":"en/user/gameplay/gameplay/#adaptive-strategies","title":"Adaptive Strategies","text":"<p>Against Early Attacks:</p> <ol> <li>Immediately build a defense tower near the base</li> <li>Group your units in defensive position</li> <li>Use terrain (islands) as cover</li> </ol> <p>Against Enemy Economy:</p> <ol> <li>Constantly harass their chest sources</li> <li>Control resource-rich islands</li> <li>Launch raids on their supply lines</li> </ol> <p>Against Defensive Strategy:</p> <ol> <li>Peripheral expansion to bypass</li> <li>Economic superiority to overwhelm</li> <li>Victory by economic asphyxiation</li> </ol>"},{"location":"en/user/gameplay/gameplay/#reading-the-opponents-game","title":"\ud83c\udfb2 Reading the Opponent's Game","text":""},{"location":"en/user/gameplay/gameplay/#strategic-indicators","title":"Strategic Indicators","text":"<p>Signs of an Aggressive Strategy:</p> <ul> <li>Massive Scout production (offensive reconnaissance)</li> <li>Few defensive constructions</li> <li>Early and repeated attacks</li> </ul> <p>Signs of an Economic Strategy:</p> <ul> <li>Architect produced as priority</li> <li>Rapid tower construction</li> <li>Methodical and patient expansion</li> </ul> <p>Signs of a Defensive Strategy:</p> <ul> <li>Numerous defense towers</li> <li>Little offensive activity</li> <li>Maximum territorial control</li> </ul>"},{"location":"en/user/gameplay/gameplay/#psychological-management","title":"Psychological Management","text":"<ul> <li>Stay calm when facing unexpected events</li> <li>Adapt rather than panic</li> <li>Every defeat brings lessons</li> <li>Patience is often rewarded</li> </ul>"},{"location":"en/user/gameplay/gameplay/#fog-of-war-and-vision-beta-version","title":"\ud83c\udf2b\ufe0f Fog of War and Vision (Beta Version)","text":"<p>\u26a0\ufe0f This feature is currently in development and available only in the game's beta version.</p>"},{"location":"en/user/gameplay/gameplay/#fog-of-war-principles","title":"Fog of War Principles","text":"<p>Fog of war transforms each game into a strategic dance between shadow and light:</p>"},{"location":"en/user/gameplay/gameplay/#zone-states","title":"Zone States","text":"<ul> <li>Thick fog: Unexplored territories, potentially rich in hidden resources</li> <li>Gray mist: Areas already discovered but currently out of sight</li> <li>Clear vision: Territories under active control of your team</li> </ul>"},{"location":"en/user/gameplay/gameplay/#vision-strategies","title":"Vision Strategies","text":""},{"location":"en/user/gameplay/gameplay/#aggressive-exploration","title":"Aggressive Exploration","text":"<p>Objective: Quickly discover the map</p> <ul> <li>Use Scouts to extend your field of vision</li> <li>Create dedicated \"exploration patrols\"</li> <li>Prioritize strategic islands for resources</li> </ul>"},{"location":"en/user/gameplay/gameplay/#defensive-vision","title":"Defensive Vision","text":"<p>Objective: Protect your positions</p> <ul> <li>Place sentinel units around your bases</li> <li>Use tower vision to cover approaches</li> <li>Create \"surveillance zones\" around vital points</li> </ul>"},{"location":"en/user/gameplay/gameplay/#psychological-warfare","title":"Psychological Warfare","text":"<p>Objective: Manipulate enemy perception</p> <ul> <li>Hide your movements behind your opponent's reduced vision</li> <li>Create diversions in visible areas</li> <li>Use the element of surprise for your attacks</li> </ul>"},{"location":"en/user/gameplay/gameplay/#tactical-advantages-of-fog","title":"Tactical Advantages of Fog","text":""},{"location":"en/user/gameplay/gameplay/#ambushes-and-surprises","title":"Ambushes and Surprises","text":"<ul> <li>Position units in non-visible areas</li> <li>Attack enemy resource convoys</li> <li>Set traps for enemy explorers</li> </ul>"},{"location":"en/user/gameplay/gameplay/#resource-management","title":"Resource Management","text":"<ul> <li>Protect your gold collectors from surprise raids</li> <li>Intercept flying chests before the enemy</li> <li>Hide your defensive constructions</li> </ul>"},{"location":"en/user/gameplay/gameplay/#psychological-pressure","title":"Psychological Pressure","text":"<ul> <li>Force the opponent to maintain lighting units</li> <li>Create the illusion of a larger presence</li> <li>Sow doubt about your true intentions</li> </ul>"},{"location":"en/user/gameplay/gameplay/#tips-for-mastering-fog","title":"Tips for Mastering Fog","text":""},{"location":"en/user/gameplay/gameplay/#tips-for-mastering-fog_1","title":"Tips for Mastering Fog","text":""},{"location":"en/user/gameplay/gameplay/#methodical-exploration","title":"Methodical Exploration","text":"<ol> <li>Start local: Secure your starting zone</li> <li>Expand gradually: Advance island by island</li> <li>Prioritize resources: Look for visible gold first</li> <li>Maintain pressure: Don't let the enemy explore freely</li> </ol>"},{"location":"en/user/gameplay/gameplay/#optimal-unit-usage","title":"Optimal Unit Usage","text":"<ul> <li>Scouts: Elite units for exploration and ambushes</li> <li>Marauders: Mobile defenders to protect flanks</li> <li>Leviathans: Firepower to secure positions</li> <li>Druids: Support to maintain vision on key points</li> <li>Architects: Tower construction to extend passive vision</li> </ul>"},{"location":"en/user/gameplay/gameplay/#risk-management","title":"Risk Management","text":"<ul> <li>Always maintain a \"visual reserve\" of units</li> <li>Avoid stretching too far across the map</li> <li>Use special abilities to gain temporary advantages</li> <li>Stay vigilant against enemy invisible movements</li> </ul> <p>Note: The vision system is constantly evolving. Your feedback on the beta version is valuable for refining this strategic mechanic!</p> <p>Master these territorial mechanics and you will become an accomplished strategist in the Galad Islands!</p> <p>Master these concepts and you will become a formidable strategist in the Galad Islands!</p>"},{"location":"en/user/help/credits/","title":"Credits and Acknowledgments","text":""},{"location":"en/user/help/credits/#development-team","title":"\ud83d\udc68\u200d\ud83d\udcbb Development Team","text":"<ul> <li>Behani Julien - Developer - Project Lead</li> <li>Fournier Enzo - Developer - GitHub Manager</li> <li>Alluin Edouard - Developer - Communications Director</li> <li>Cailliau Ethann - Developer - Multimedia Editor - Trello Manager (organization)</li> <li>Damman Alexandre - Developer</li> <li>Lambert Romain - Developer</li> </ul>"},{"location":"en/user/help/credits/#artistic-resources","title":"\ud83c\udfa8 Artistic Resources","text":""},{"location":"en/user/help/credits/#graphics-and-sprites","title":"Graphics and Sprites","text":""},{"location":"en/user/help/credits/#unit-sprites","title":"Unit Sprites","text":"<ul> <li>Scout, Marauder, Leviathan: Original creation</li> <li>Druid, Architect: Custom design</li> <li>Movement and combat animations</li> </ul>"},{"location":"en/user/help/credits/#interface-elements","title":"Interface Elements","text":"<ul> <li>User interface icons</li> <li>Buttons and interactive elements</li> <li>Progress bars and indicators</li> </ul>"},{"location":"en/user/help/credits/#environment","title":"Environment","text":"<ul> <li>Island and terrain textures</li> <li>Backgrounds and decorations</li> <li>Visual effects and particles</li> </ul>"},{"location":"en/user/help/credits/#external-assets-used","title":"External Assets Used","text":""},{"location":"en/user/help/credits/#emojis-and-icons","title":"Emojis and Icons","text":"<ul> <li>FluentEmoji: Microsoft (MIT license)</li> <li>Twemoji: Twitter (CC-BY 4.0 license)</li> <li>Streamline Icons: Partial iconsets</li> </ul>"},{"location":"en/user/help/credits/#graphic-sources","title":"Graphic Sources","text":"<ul> <li>Some base elements under Creative Commons license</li> <li>Modifications and adaptations for the game</li> <li>Respect for attribution licenses</li> </ul>"},{"location":"en/user/help/credits/#audio-and-music","title":"\ud83c\udfb5 Audio and Music","text":""},{"location":"en/user/help/credits/#original-music","title":"Original Music","text":""},{"location":"en/user/help/credits/#xdeviruchi-composer","title":"xDeviruchi - Composer","text":"<ul> <li>\"And The Journey Begins\": Exploration theme</li> <li>\"Title Theme\": Main menu music</li> <li>Style: Orchestral/Epic fantasy</li> <li>License: Free to use with attribution</li> </ul> <p>Full Credits:</p> <pre><code>Music by xDeviruchi\nAvailable on: https://xdeviruchi.itch.io/\nUsed under Creative Commons license\n</code></pre>"},{"location":"en/user/help/credits/#sound-effects","title":"Sound Effects","text":""},{"location":"en/user/help/credits/#interface-sounds","title":"Interface Sounds","text":"<ul> <li><code>select_sound.mp3</code>: Click and selection</li> <li><code>select_sound_2.mp3</code>: Action confirmation</li> <li>Creation: Custom audio synthesis</li> </ul>"},{"location":"en/user/help/credits/#game-ambiances","title":"Game Ambiances","text":"<ul> <li>Combat and movement sounds</li> <li>Action audio feedback</li> <li>Harmonious integration with music</li> </ul>"},{"location":"en/user/help/credits/#technologies-and-tools","title":"\ud83d\udee0\ufe0f Technologies and Tools","text":""},{"location":"en/user/help/credits/#languages-and-frameworks","title":"Languages and Frameworks","text":""},{"location":"en/user/help/credits/#python-313","title":"Python 3.13","text":"<ul> <li>Main project language</li> <li>Standard libraries used</li> <li>Optimized performance and compatibility</li> </ul>"},{"location":"en/user/help/credits/#pygame-261","title":"Pygame 2.6.1","text":"<ul> <li>Graphics and audio engine</li> <li>Event management</li> <li>2D rendering and sprite management</li> </ul>"},{"location":"en/user/help/credits/#development-tools","title":"Development Tools","text":""},{"location":"en/user/help/credits/#development-environment","title":"Development Environment","text":"<ul> <li>VS Code: Main editor</li> <li>Git: Version management</li> <li>GitHub: Code source hosting</li> </ul>"},{"location":"en/user/help/credits/#graphic-tools","title":"Graphic Tools","text":"<ul> <li>Image and sprite manipulation</li> <li>Resource optimization</li> <li>Custom asset creation</li> </ul>"},{"location":"en/user/help/credits/#debugging-and-testing","title":"Debugging and Testing","text":"<ul> <li>Python profiling tools</li> <li>Integration and performance tests</li> <li>Cross-platform validation</li> </ul>"},{"location":"en/user/help/credits/#community-contributions","title":"\ud83c\udf1f Community Contributions","text":""},{"location":"en/user/help/credits/#translations-and-localization","title":"Translations and Localization","text":""},{"location":"en/user/help/credits/#supported-languages","title":"Supported Languages","text":"<ul> <li>French: Main language, complete translation</li> <li>English: Partial translation in progress</li> <li>Bilingual interface and documentation</li> </ul>"},{"location":"en/user/help/credits/#linguistic-contributors","title":"Linguistic Contributors","text":"<ul> <li>Translation done by Copilot</li> <li>English text proofreading by the team</li> </ul>"},{"location":"en/user/help/credits/#technical-writing","title":"Technical Writing","text":""},{"location":"en/user/help/credits/#user-documentation","title":"User Documentation","text":"<ul> <li>Installation and configuration guide</li> <li>Complete gameplay manual</li> <li>FAQ and problem resolution</li> </ul>"},{"location":"en/user/help/credits/#developer-documentation","title":"Developer Documentation","text":"<ul> <li>Code architecture</li> <li>Internal API and modules</li> <li>Contribution guides</li> </ul>"},{"location":"en/user/help/credits/#documentation-tools","title":"Documentation Tools","text":""},{"location":"en/user/help/credits/#mkdocs-material-theme","title":"MkDocs + Material Theme","text":"<ul> <li>Static documentation generation</li> <li>Intuitive and responsive navigation</li> <li>Integrated search and indexing</li> </ul>"},{"location":"en/user/help/credits/#special-thanks","title":"\ud83d\ude4f Special Thanks","text":""},{"location":"en/user/help/credits/#open-source-community","title":"Open Source Community","text":""},{"location":"en/user/help/credits/#pygame-community","title":"Pygame Community","text":"<ul> <li>Learning resources</li> <li>Code examples and tutorials</li> <li>Technical support and forums</li> </ul>"},{"location":"en/user/help/credits/#python-software-foundation","title":"Python Software Foundation","text":"<ul> <li>Python language and ecosystem</li> <li>Reference documentation</li> <li>Development tools</li> </ul>"},{"location":"en/user/help/credits/#licenses-and-rights","title":"\ud83d\udcc4 Licenses and Rights","text":""},{"location":"en/user/help/credits/#source-code","title":"Source Code","text":""},{"location":"en/user/help/credits/#project-license","title":"Project License","text":"<ul> <li>Code available under MIT license</li> <li>Free use, modification, distribution</li> <li>Attribution required when redistributing</li> </ul>"},{"location":"en/user/help/credits/#assets-and-content","title":"Assets and Content","text":""},{"location":"en/user/help/credits/#graphic-resources","title":"Graphic Resources","text":"<ul> <li>Original creations: All rights reserved</li> <li>External assets: Respect for original licenses</li> <li>Full attribution in source files</li> </ul>"},{"location":"en/user/help/credits/#musical-content","title":"Musical Content","text":"<ul> <li>xDeviruchi music: Creative Commons</li> <li>Sound effects: Original creation</li> <li>Free use with appropriate attribution</li> </ul>"},{"location":"en/user/help/credits/#contact-and-support","title":"\ud83d\udcde Contact and Support","text":""},{"location":"en/user/help/credits/#communication","title":"Communication","text":"<ul> <li>GitHub Issues: Bug reports and suggestions</li> <li>Community discussions</li> <li>Contributions and pull requests welcome</li> </ul>"},{"location":"en/user/help/credits/#community","title":"Community","text":""},{"location":"en/user/help/credits/#official-channels","title":"Official Channels","text":"<ul> <li>GitHub Repository: Source code and releases</li> <li>Online Documentation: Guides and tutorials</li> <li>Community Wiki: Strategies and tips</li> </ul>"},{"location":"en/user/help/credits/#future-contributions","title":"Future Contributions","text":""},{"location":"en/user/help/credits/#how-to-contribute","title":"How to Contribute","text":"<ol> <li>Fork the GitHub repository</li> <li>Create a branch for your modifications</li> <li>Test and validate changes</li> <li>Pull request with detailed description</li> </ol>"},{"location":"en/user/help/credits/#types-of-contributions-sought","title":"Types of Contributions Sought","text":"<ul> <li>Bug fixes and optimizations</li> <li>New game features</li> <li>Interface improvements</li> <li>Translations and documentation</li> <li>Quality tests and feedback</li> </ul> <p>More information in the contributing guide.</p> <p>Documentation Version: 1.0 | Last Update: October 2025</p>"},{"location":"en/user/help/faq/","title":"Frequently Asked Questions","text":""},{"location":"en/user/help/faq/#installation-and-getting-started","title":"\ud83d\ude80 Installation and Getting Started","text":""},{"location":"en/user/help/faq/#q-the-game-wont-launch-what-should-i-do","title":"Q: The game won't launch, what should I do?","text":"<p>Common solutions:</p> <ol> <li>Update the game: Download the latest version from the [releases page]</li> <li>Check file structure: The <code>assets/</code> folder must be at the same level as the <code>galad-islands</code> executable.</li> <li>Redownload the game: The file may be corrupted.</li> <li>Launch the game via terminal/console to learn more about the error:</li> <li>Windows: Open <code>cmd</code>, navigate to the game folder and execute <code>galad-islands.exe</code></li> <li>macOS/Linux: Open a terminal, navigate to the game folder and execute <code>./galad-islands</code></li> <li>Create an issue on the project's GitHub page with the displayed error messages.</li> </ol>"},{"location":"en/user/help/faq/#q-the-screen-stays-black-at-launch","title":"Q: The screen stays black at launch","text":"<p>Possible causes:</p> <ul> <li>Graphics problem: Outdated drivers</li> <li>Incompatible resolution: Screen too small or too large</li> <li>Corrupted game: Missing or damaged files</li> </ul> <p>Solutions:</p> <ol> <li>Update graphics drivers</li> <li>Try in windowed mode</li> <li>Restart the computer</li> <li>Redownload the game</li> </ol>"},{"location":"en/user/help/faq/#how-to-change-the-resolution","title":"How to change the resolution?","text":""},{"location":"en/user/help/faq/#method-1-in-game-options","title":"Method 1: In-game options","text":"<ol> <li>Main menu \u2192 Settings</li> <li>\"Display\" section</li> <li>Custom or predefined resolution</li> <li>Apply the changes</li> </ol>"},{"location":"en/user/help/faq/#method-2-galad-config-tool","title":"Method 2: Galad Config Tool","text":"<ol> <li>Open <code>galad-config-tool</code> (included in releases)</li> <li>\"Display\" tab</li> <li>Choose the resolution</li> <li>Click \"Apply\" then launch the game</li> </ol>"},{"location":"en/user/help/faq/#construction-and-buildings","title":"\ud83c\udfd7\ufe0f Construction and Buildings","text":""},{"location":"en/user/help/faq/#q-why-cant-i-build","title":"Q: Why can't I build?","text":"<p>Essential checks:</p> <ol> <li>Architect present: At least 1 in the army</li> <li>On an island: The Architect must be positioned near an island of at least 4 squares</li> <li>Free island: No existing building</li> <li>Enough gold: Cost displayed in the shop</li> </ol>"},{"location":"en/user/help/faq/#q-how-to-optimize-my-defenses","title":"Q: How to optimize my defenses?","text":"<p>Strategic placement:</p> <ol> <li>Defense towers: At mandatory passages</li> <li>Healing towers: Protected behind fighters</li> <li>Redundancy: Multiple lines of defense</li> </ol> <p>Defensive formations:</p> <pre><code>  Defense Tower    Defense Tower\n      \\              /\n       \\            /\n        Healing Tower\n</code></pre>"},{"location":"en/user/help/faq/#q-my-buildings-are-destroyed-too-easily","title":"Q: My buildings are destroyed too easily","text":"<p>Defensive reinforcement:</p> <ol> <li>Military escort: Units near buildings</li> <li>Active defenses: Protection towers</li> <li>Repairs: Druid can heal buildings</li> <li>Positioning: Avoid exposed areas</li> </ol> <p>Protection tactics:</p> <ul> <li>Never isolated buildings</li> <li>Always plan a defense</li> <li>Anticipate enemy attacks</li> <li>Diversify positions</li> </ul>"},{"location":"en/user/help/faq/#combat-and-strategy","title":"\u2694\ufe0f Combat and Strategy","text":""},{"location":"en/user/help/faq/#q-how-to-beat-a-stronger-player","title":"Q: How to beat a stronger player?","text":"<p>Comeback strategies:</p> <ol> <li>Avoid frontal combat</li> <li>Defend until forces are equalized</li> <li>Exploit their tactical errors</li> </ol> <p>Specific techniques:</p> <ul> <li>Hit-and-run with Scout</li> <li>Focus fire on their expensive units</li> <li>Territorial control on their mines</li> <li>Patience and opportunism</li> </ul>"},{"location":"en/user/help/faq/#q-my-scouts-die-too-quickly","title":"Q: My Scouts die too quickly","text":"<p>Scout micro-management:</p> <ol> <li>Kiting: Attack then retreat</li> <li>Group: Never alone, always in packs</li> <li>Support: Druid nearby for healing</li> <li>Terrain: Use natural obstacles</li> </ol> <p>Errors to avoid:</p> <ul> <li>Charge head first</li> <li>Isolate units</li> <li>Neglect healing</li> <li>Underestimate enemy range</li> </ul>"},{"location":"en/user/help/faq/#settings-and-performance","title":"\ud83d\udd27 Settings and Performance","text":""},{"location":"en/user/help/faq/#q-the-game-lags-how-to-optimize-it","title":"Q: The game lags, how to optimize it?","text":"<p>Graphics optimizations:</p> <ol> <li>Resolution: Reduce if necessary</li> <li>Fullscreen: Often smoother</li> </ol> <p>System optimizations:</p> <ul> <li>Close unnecessary applications</li> <li>Free up RAM</li> <li>Update the game</li> <li>Restart regularly</li> </ul>"},{"location":"en/user/help/faq/#problem-resolution","title":"\ud83d\udc1b Problem Resolution","text":""},{"location":"en/user/help/faq/#q-i-found-a-bug-how-to-report-it","title":"Q: I found a bug, how to report it?","text":"<p>Information to provide:</p> <ol> <li>Version: Game version number</li> <li>System: OS + configuration</li> <li>Reproduction: Steps to reproduce</li> <li>Logs: Error messages in console</li> </ol> <p>Reporting channels:</p> <ul> <li>GitHub Issues (recommended)</li> <li>Developer email</li> </ul>"},{"location":"en/user/help/faq/#q-sound-doesnt-work","title":"Q: Sound doesn't work","text":"<p>Audio diagnosis:</p> <ol> <li>Game volume: Check in options</li> <li>System volume: Check OS settings</li> <li>Audio codecs: Install missing codecs</li> <li>Audio files: Check presence in <code>/assets/sounds/</code></li> </ol>"},{"location":"en/user/help/faq/#q-crash-at-launch-with-python-error","title":"Q: Crash at launch with Python error","text":""},{"location":"en/user/help/faq/#permission-denied","title":"Permission denied","text":"<ul> <li>Administrator rights</li> <li>Antivirus blocking</li> </ul> <p>Other questions? Check the credits and contacts to get help!</p>"},{"location":"en/user/tools/galad-config-tool/","title":"Galad Config Tool - User Guide","text":""},{"location":"en/user/tools/galad-config-tool/#overview","title":"\ud83d\udccb Overview","text":"<p>Galad Config Tool is a standalone configuration tool for the Galad Islands game. It allows you to modify game settings through a modern graphical interface, without needing to launch the main game.</p>"},{"location":"en/user/tools/galad-config-tool/#features","title":"\ud83d\ude80 Features","text":""},{"location":"en/user/tools/galad-config-tool/#display-tab","title":"\ud83d\udda5\ufe0f Display Tab","text":"<ul> <li>Window mode: Toggle between windowed and fullscreen mode</li> <li>Resolutions:</li> <li>Selection from predefined resolutions</li> <li>Addition of custom resolutions (width x height)</li> <li>Deletion of custom resolutions</li> <li>Visual marking of custom resolutions</li> <li>Camera sensitivity: Adjustment of camera movement speed (0.2x to 3.0x)</li> <li>Language: Language change (French/English) with immediate interface update</li> </ul>"},{"location":"en/user/tools/galad-config-tool/#audio-tab","title":"\ud83d\udd0a Audio Tab","text":"<ul> <li>Music volume: Adjustment with slider and real-time percentage display</li> </ul>"},{"location":"en/user/tools/galad-config-tool/#controls-tab","title":"\ud83c\udfae Controls Tab","text":"<ul> <li>Scrollable interface: Smooth navigation through all control groups</li> <li>Available groups:</li> <li>Unit commands (forward, backward, turn, etc.)</li> <li>Camera controls (movement, speed)</li> <li>Selection (target units, change faction)</li> <li>System (pause, help, debug, shop)</li> </ul>"},{"location":"en/user/tools/galad-config-tool/#configuration-tab","title":"\u2699\ufe0f Configuration Tab","text":"<ul> <li>File selection:</li> <li>Main configuration file (<code>galad_config.json</code>)</li> <li>Custom resolutions file (<code>galad_resolutions.json</code>)</li> <li>File navigation: Selection dialog to change file locations</li> <li>Informational messages: Warnings if files are missing or created automatically</li> </ul>"},{"location":"en/user/tools/galad-config-tool/#usage","title":"\ud83c\udfaf Usage","text":""},{"location":"en/user/tools/galad-config-tool/#launch","title":"Launch","text":"<p>Double-click on <code>galad-config-tool</code> (included in releases)</p>"},{"location":"en/user/tools/galad-config-tool/#typical-workflow","title":"Typical Workflow","text":"<ol> <li>Open the tool \u2192 Automatic verification of configuration files</li> <li>Modify settings in different tabs according to your needs</li> <li>Click \"Apply\" \u2192 Automatic saving of all changes</li> <li>Close the tool \u2192 Settings are ready for the game</li> </ol>"},{"location":"en/user/tools/galad-config-tool/#custom-resolutions","title":"Custom Resolutions","text":"<ol> <li>Add manually: Enter width \u00d7 height + click \"Add\"</li> <li>Add current resolution: Click \"Add current\" to add the current resolution</li> <li>Delete: Select from list + click \"Remove\" (only custom resolutions)</li> </ol>"},{"location":"en/user/tools/galad-config-tool/#language-change","title":"Language Change","text":"<ul> <li>Dropdown menu: Select language from dropdown list</li> <li>Immediate change: All texts update instantly</li> <li>Persistence: Click \"Apply\" to save permanently</li> <li>Extensibility: Menu automatically adapts to new languages added to the game</li> </ul>"},{"location":"en/user/tools/galad-config-tool/#information-messages","title":"\u26a0\ufe0f Information Messages","text":"<p>The tool displays informational popups in the following cases:</p> <ul> <li>Missing configuration file: Will be created automatically with default values</li> <li>Missing resolutions file: Will be created upon first resolution addition</li> <li>Attempt to delete a predefined resolution: Error message with explanation</li> <li>Invalid file paths: Warning in Configuration tab</li> </ul>"},{"location":"en/user/tools/galad-config-tool/#configuration-files","title":"\ud83d\udcc1 Configuration Files","text":""},{"location":"en/user/tools/galad-config-tool/#galad_configjson","title":"<code>galad_config.json</code>","text":"<p>Main file containing all game settings:</p> <ul> <li>Resolution and display mode</li> <li>Audio volume</li> <li>Camera sensitivity</li> <li>Language</li> <li>Keyboard shortcuts</li> </ul>"},{"location":"en/user/tools/galad-config-tool/#galad_resolutionsjson","title":"<code>galad_resolutions.json</code>","text":"<p>File containing only your custom resolutions added via the tool.</p>"},{"location":"en/user/tools/galad-config-tool/#advanced-configuration","title":"Advanced Configuration","text":""},{"location":"en/user/tools/galad-config-tool/#configuration-tab_1","title":"Configuration Tab","text":"<ul> <li>Change file locations: Use \"Browse...\" buttons</li> <li>Default paths: Game directory (next to <code>main.py</code>)</li> <li>Validation: Automatic verification of folder accessibility</li> </ul>"},{"location":"en/user/tools/galad-config-tool/#available-keys-for-controls","title":"Available Keys for Controls","text":"<pre><code>z, s, q, d, a, e, tab, space, enter, escape,\nleft, right, up, down, 1, 2, 3, 4, 5, ctrl, shift, alt\n</code></pre>"},{"location":"en/user/tools/galad-config-tool/#usage-tips","title":"\ud83d\udca1 Usage Tips","text":"<ul> <li>Test your resolutions: Add a custom resolution only if it's supported by your screen</li> <li>Save regularly: Click \"Apply\" after each series of modifications</li> <li>Multiple resolutions: You can add several custom resolutions for different contexts</li> <li>Controls by groups: Use the scroll bar to navigate through all available shortcuts</li> </ul>"},{"location":"en/user/tools/galad-config-tool/#troubleshooting","title":"\ud83c\udd98 Troubleshooting","text":"<ul> <li>Tool won't launch: Check that <code>assets/</code> and <code>src/</code> folders are present</li> <li>Configuration not saved: Check write permissions in the game folder</li> <li>Interface in wrong language: Change language in Display tab then click \"Apply\"</li> <li>Invalid resolution: Only resolutions in width\u00d7height format are accepted</li> </ul>"},{"location":"en/user/units/units/","title":"Units and Combat","text":"<p>Allied and enemy units in Galad Islands share the same roles and abilities, but differ in their appearances and affiliations. Here is a complete guide to the units available in the game, their characteristics, special abilities, and tactical advice.</p> Class Type Role Cost Health Attack Specialty Scout Scout Reconnaissance 10 gold 60 10-15 Extended vision Marauder Warrior Medium combat 20 gold 130 20-30 Powerful charge Leviathan Leviathan Heavy unit 40 gold 300 40-60 Area bombardment Druid Healer Medical support 30 gold 100 0 Group healing Architect Builder Defense 30 gold 100 30 Fast construction"},{"location":"en/user/units/units/#unit-details","title":"Unit Details","text":""},{"location":"en/user/units/units/#scout-agile-scout","title":"\u26a1 Scout \u2014 Agile Scout","text":"<ul> <li>Type: Reconnaissance unit</li> <li>Speed: \u2b50\u2b50\u2b50\u2b50\u2b50 (Very fast)</li> <li>Resistance: \u2b50\u2b50 (Fragile)</li> <li>Attack: \u2b50\u2b50 (Light)</li> <li>Special ability: Temporary invincibility</li> <li>Tactical usage:</li> <li>Fast exploration</li> <li>Harassment of slow units</li> <li>Diversion and evasion</li> </ul>"},{"location":"en/user/units/units/#marauder-robust-warrior","title":"\ud83d\udee1\ufe0f Marauder \u2014 Robust Warrior","text":"<ul> <li>Type: Versatile combat unit</li> <li>Speed: \u2b50\u2b50\u2b50 (Normal)</li> <li>Resistance: \u2b50\u2b50\u2b50\u2b50 (Robust)</li> <li>Attack: \u2b50\u2b50\u2b50 (Balanced)</li> <li>Special ability: Enhanced shield</li> <li>Tactical usage:</li> <li>Defense of strategic positions</li> <li>Protection of fragile units</li> <li>Coordinated attacks</li> </ul>"},{"location":"en/user/units/units/#leviathan-destructive-leviathan","title":"\ud83d\udc09 Leviathan \u2014 Destructive Leviathan","text":"<ul> <li>Type: Massive destruction unit</li> <li>Speed: \u2b50 (Very slow)</li> <li>Resistance: \u2b50\u2b50\u2b50\u2b50\u2b50 (Armored)</li> <li>Attack: \u2b50\u2b50\u2b50\u2b50\u2b50 (Devastating)</li> <li>Special ability: Volley fired from each side</li> <li>Tactical usage:</li> <li>Control of strategic points</li> <li>Elimination of unit groups</li> <li>Final assaults</li> </ul>"},{"location":"en/user/units/units/#druid-essential-healer","title":"\ud83c\udf3f Druid \u2014 Essential Healer","text":"<ul> <li>Type: Medical support unit</li> <li>Speed: \u2b50\u2b50 (Slow)</li> <li>Resistance: \u2b50\u2b50\u2b50 (Medium)</li> <li>Attack: \u2b50 (No direct attack)</li> <li>Special ability: Ivy vine that blocks an enemy unit</li> <li>Tactical usage:</li> <li>Keeping units alive</li> <li>Support in prolonged combat</li> <li>Essential protection</li> </ul>"},{"location":"en/user/units/units/#architect-strategic-builder","title":"\ud83c\udfd7\ufe0f Architect \u2014 Strategic Builder","text":"<ul> <li>Type: Construction unit</li> <li>Speed: \u2b50\u2b50 (Slow)</li> <li>Resistance: \u2b50\u2b50\u2b50 (Medium)</li> <li>Attack: \u2b50\u2b50 (Weak)</li> <li>Special ability: Increased unit reload speed</li> <li>Tactical usage:</li> <li>Creation of defense points</li> <li>Control of narrow passages</li> <li>Support for prolonged sieges</li> </ul> <p>This guide will allow you to master all units and dominate the battlefields in Galad Islands!</p>"}]}